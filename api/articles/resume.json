{"title": "个人简历", "uid": "1269f6284fcda69dd94df081174c6509", "slug": "resume", "date": "2023-05-10 07:18:05", "updated": "2023-07-26 16:19:13.847000", "comments": true, "path": "api/articles/resume.json", "keywords": null, "cover": "/img/resume/resume.webp", "content": "<h1 id=\"个人信息\"><a href=\"#个人信息\" class=\"headerlink\" title=\"个人信息\"></a>个人信息</h1><ul>\n<li>倪传方&#x2F;男&#x2F;1994.08</li>\n<li>本科&#x2F;合肥工业大学-工程力学</li>\n<li>工作年限: 4年</li>\n<li>工作单位: 鸿程计算机系统有限公司-至今</li>\n<li>Github: <a href=\"https://github.com/nichuanfang\">https://github.com/nichuanfang</a></li>\n<li>Gitee: <a href=\"https://gitee.com/JayChou_sf\">https://gitee.com/JayChou_sf</a></li>\n<li>期望职位: Java开发工程师,python开发工程师</li>\n<li>当前薪资: 11k</li>\n<li>期望薪资: 税前月薪15k+</li>\n<li>期望城市：武汉&#x2F;合肥</li>\n</ul>\n<h1 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h1><ul>\n<li>手机: 18326186224</li>\n<li>Email: <a href=\"mailto:&#x66;&#49;&#56;&#x33;&#50;&#x36;&#49;&#x38;&#x36;&#50;&#50;&#52;&#x40;&#103;&#109;&#x61;&#x69;&#108;&#46;&#x63;&#x6f;&#109;\">&#x66;&#49;&#56;&#x33;&#50;&#x36;&#49;&#x38;&#x36;&#50;&#50;&#52;&#x40;&#103;&#109;&#x61;&#x69;&#108;&#46;&#x63;&#x6f;&#109;</a> &#x2F; <a href=\"mailto:&#49;&#x32;&#57;&#48;&#x32;&#x37;&#52;&#x39;&#x37;&#50;&#x40;&#113;&#x71;&#x2e;&#99;&#x6f;&#x6d;\">&#49;&#x32;&#57;&#48;&#x32;&#x37;&#52;&#x39;&#x37;&#50;&#x40;&#113;&#x71;&#x2e;&#99;&#x6f;&#x6d;</a></li>\n<li>微信号: ncf08209270</li>\n</ul>\n<h1 id=\"技能清单\"><a href=\"#技能清单\" class=\"headerlink\" title=\"技能清单\"></a>技能清单</h1><ul>\n<li>计算机基础：熟练掌握计算机网络、数据结构和算法、操作系统，了解计算机组成原理</li>\n<li>Linux：熟练使用Linux，有Linux下开发部署项目的实际经验</li>\n<li>Java：熟练掌握Java基础、集合、并发、熟悉JVM常见概念，有过JVM排查问题和调优的经历</li>\n<li>开发工具：熟练使用Maven、Git、IDEA、Navicat、VS Code、Docker等开发工具。</li>\n<li>数据库：掌握MySQL数据库以及常见优化手段（比如索引、SQL优化、读写分离、分库分表），有Redis实战经验（搭建过Redis集群），了解Oracle,MongoDB</li>\n<li>搜索引擎：了解Elasticsearch的使用及原理</li>\n<li>框架：<ul>\n<li>熟练掌握Spring、Spring MVC、SpringBoot、MyBatis、JPA、Spring Security、Junit等基础开发框架</li>\n<li>了解Netty 网络编程</li>\n<li>掌握工作流框架Activiti</li>\n</ul>\n</li>\n<li>分布式：<ul>\n<li>掌握RPC（dubbo,Feign）、分布式事务（Seata）、注册中心+配置中心（Nacos）、负载均衡(Ribbon)、 分布式链路追踪（Sleuth）、分布式ID（UUID、Snowflake）、消息 队列（RabbitMQ）、限流熔断（Sentinel）的使用及原理</li>\n<li>熟悉 Spring Cloud／Spring Cloud Alibaba 全家桶常见组件的使用，有微服务架构项目开发经验</li>\n</ul>\n</li>\n<li>文档相关:  熟练掌握文档语法Markdown,熟悉设计工具Visio,掌握git提交、pr以及发版规范</li>\n<li>前端：掌握 HTML5、CSS、Javascript、Bootstrap、Ajax，了解ES5&#x2F;ES6、TypeScript，有 AngularJs、Vue的实际开发经验</li>\n<li>Devops：掌握Jenkins,GitHub Actions workflows,Git Webhook,熟悉CI／CD 流程</li>\n<li>有微信公众平台,开放平台的开发经验(公众号)</li>\n<li>其他技术栈: 熟悉python相关的技术栈,包括爬虫工具selenium、bs4,http服务器框架Flask、hug ,图片处理Pillow、opencv、OCR(tesseract)等</li>\n</ul>\n<h1 id=\"工作经历\"><a href=\"#工作经历\" class=\"headerlink\" title=\"工作经历\"></a>工作经历</h1><h2 id=\"鸿程计算机系统有限公司-（-2019年8月-2023年4月-）\"><a href=\"#鸿程计算机系统有限公司-（-2019年8月-2023年4月-）\" class=\"headerlink\" title=\"鸿程计算机系统有限公司 （ 2019年8月 ~ 2023年4月 ）\"></a>鸿程计算机系统有限公司 （ 2019年8月 ~ 2023年4月 ）</h2><h3 id=\"财务共享平台\"><a href=\"#财务共享平台\" class=\"headerlink\" title=\"财务共享平台\"></a>财务共享平台</h3><p>我在此项目负责了哪些工作，分别在哪些地方做得出色&#x2F;和别人不一样&#x2F;成长快，这个项目中，我最困难的问题是什么，我采取了什么措施，最后结果如何。这个项目中，我最自豪的技术细节是什么，为什么，实施前和实施后的数据对比如何，同事和领导对此的反应如何。</p>\n<h3 id=\"统一流程引擎平台\"><a href=\"#统一流程引擎平台\" class=\"headerlink\" title=\"统一流程引擎平台\"></a>统一流程引擎平台</h3><p>流程引擎</p>\n<h3 id=\"生产安全监控\"><a href=\"#生产安全监控\" class=\"headerlink\" title=\"生产安全监控\"></a>生产安全监控</h3><p>我在此项目负责了哪些工作，分别在哪些地方做得出色&#x2F;和别人不一样&#x2F;成长快，这个项目中，我最困难的问题是什么，我采取了什么措施，最后结果如何。这个项目中，我最自豪的技术细节是什么，为什么，实施前和实施后的数据对比如何，同事和领导对此的反应如何。</p>\n<h3 id=\"其他项目\"><a href=\"#其他项目\" class=\"headerlink\" title=\"其他项目\"></a>其他项目</h3><p>（每个公司写2~3个核心项目就好了，如果你有非常大量的项目，那么按分类进行合并，每一类选一个典型写出来。其他的一笔带过即可。）</p>\n<h2 id=\"杭州远达科技-（-2018年7月-2019年6月-）\"><a href=\"#杭州远达科技-（-2018年7月-2019年6月-）\" class=\"headerlink\" title=\"杭州远达科技 （ 2018年7月 ~ 2019年6月 ）\"></a>杭州远达科技 （ 2018年7月 ~ 2019年6月 ）</h2><h3 id=\"微信点餐平台\"><a href=\"#微信点餐平台\" class=\"headerlink\" title=\"微信点餐平台\"></a>微信点餐平台</h3><ul>\n<li>参与商家入驻功能的开发</li>\n<li>MyBatis 实现后台商家列表的读取，商家所在城区、所属的商品栏目的获取，并封装成 JSON 数据，为前端提供数据接口</li>\n<li>使用 Ajax 实现商家入驻时选择区域、类型</li>\n<li>使用 Spring 实现店铺图片的上传</li>\n<li>通过 Maven 进行项目管理，使用 Git 等工具辅助开发</li>\n<li>店铺信息更改功能等实现，使店主能够在管理后台实现店铺联系方式等基本信息的更改</li>\n<li>实现店铺活动的添加，使用 TreeView 实现对活动类型和所属区域、店铺的展示</li>\n<li>使用 vue进行快速开发，实现通过手机浏览器访问店铺信息修改页面</li>\n</ul>\n", "feature": true, "text": "个人信息 倪传方&#x2F;男&#x2F;1994.08 本科&#x2F;合肥工业大学-工程力学 工作年限: 4年 工作单位: 鸿程计算机系统有限公司-至今 Github: https://github.com/nichuanfang Gitee: https://gitee.c...", "link": "", "photos": [], "count_time": {"symbolsCount": "2.1k", "symbolsTime": "2 mins."}, "categories": [{"name": "作品集", "slug": "作品集", "count": 1, "path": "api/categories/作品集.json"}], "tags": [{"name": "resume", "slug": "resume", "count": 1, "path": "api/tags/resume.json"}], "toc": "<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">个人信息</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%81%94%E7%B3%BB%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">联系方式</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%8A%80%E8%83%BD%E6%B8%85%E5%8D%95\"><span class=\"toc-text\">技能清单</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%B7%A5%E4%BD%9C%E7%BB%8F%E5%8E%86\"><span class=\"toc-text\">工作经历</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%B8%BF%E7%A8%8B%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8-%EF%BC%88-2019%E5%B9%B48%E6%9C%88-2023%E5%B9%B44%E6%9C%88-%EF%BC%89\"><span class=\"toc-text\">鸿程计算机系统有限公司 （ 2019年8月 ~ 2023年4月 ）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%B4%A2%E5%8A%A1%E5%85%B1%E4%BA%AB%E5%B9%B3%E5%8F%B0\"><span class=\"toc-text\">财务共享平台</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%9F%E4%B8%80%E6%B5%81%E7%A8%8B%E5%BC%95%E6%93%8E%E5%B9%B3%E5%8F%B0\"><span class=\"toc-text\">统一流程引擎平台</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%94%9F%E4%BA%A7%E5%AE%89%E5%85%A8%E7%9B%91%E6%8E%A7\"><span class=\"toc-text\">生产安全监控</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%B6%E4%BB%96%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">其他项目</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9D%AD%E5%B7%9E%E8%BF%9C%E8%BE%BE%E7%A7%91%E6%8A%80-%EF%BC%88-2018%E5%B9%B47%E6%9C%88-2019%E5%B9%B46%E6%9C%88-%EF%BC%89\"><span class=\"toc-text\">杭州远达科技 （ 2018年7月 ~ 2019年6月 ）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BE%AE%E4%BF%A1%E7%82%B9%E9%A4%90%E5%B9%B3%E5%8F%B0\"><span class=\"toc-text\">微信点餐平台</span></a></li></ol></li></ol></li></ol>", "author": {"name": "倪传方", "slug": "blog-author", "avatar": "/img/site/avatar.webp", "link": "/", "description": "一位正在重塑知识的技术人 <br /> @ <b>微信：ncf08209270</b>", "socials": {"github": "https://github.com/nichuanfang", "twitter": "https://twitter.com/jayzhouzj", "stackoverflow": "https://stackoverflow.com/users/12083298/jaychou", "wechat": "", "qq": "", "weibo": "", "zhihu": "https://www.zhihu.com/people/ba-dao-yi-shan-zhu", "csdn": "https://blog.csdn.net/Saphroth", "juejin": "https://juejin.cn/user/2740456686366830", "customs": {}}}, "mapped": true, "prev_post": {"title": "Hello World", "uid": "b9663f58f18133b35bfe243f3e916a80", "slug": "hello-world", "date": "2023-05-11 08:19:00", "updated": "2023-07-26 16:19:13.847000", "comments": true, "path": "api/articles/hello-world.json", "keywords": null, "cover": "/img/hello-world/hello-world.webp", "feature": true, "text": " Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the...", "link": "", "photos": [], "count_time": {"symbolsCount": "1.7k", "symbolsTime": "2 mins."}, "categories": [{"name": "欢迎页", "slug": "欢迎页", "count": 1, "path": "api/categories/欢迎页.json"}], "tags": [{"name": "template", "slug": "template", "count": 1, "path": "api/tags/template.json"}], "author": {"name": "倪传方", "slug": "blog-author", "avatar": "/img/site/avatar.webp", "link": "/", "description": "一位正在重塑知识的技术人 <br /> @ <b>微信：ncf08209270</b>", "socials": {"github": "https://github.com/nichuanfang", "twitter": "https://twitter.com/jayzhouzj", "stackoverflow": "https://stackoverflow.com/users/12083298/jaychou", "wechat": "", "qq": "", "weibo": "", "zhihu": "https://www.zhihu.com/people/ba-dao-yi-shan-zhu", "csdn": "https://blog.csdn.net/Saphroth", "juejin": "https://juejin.cn/user/2740456686366830", "customs": {}}}, "mapped": true}, "next_post": {"title": "可重入锁ReentrantLock高级特性", "uid": "2e5004b8a8ff49317aa7f3e9b71f74cf", "slug": "reentrant-lock", "date": "2023-05-08 07:05:39", "updated": "2023-07-26 16:19:13.847000", "comments": true, "path": "api/articles/reentrant-lock.json", "keywords": null, "cover": "/img/reentrant-lock/reentrant-lock.webp", "content": "<h2 id=\"ReentrantLock提供了Synchronized不具备的三个高级特性\"><a href=\"#ReentrantLock提供了Synchronized不具备的三个高级特性\" class=\"headerlink\" title=\"ReentrantLock提供了Synchronized不具备的三个高级特性\"></a><code>ReentrantLock</code>提供了<code>Synchronized</code>不具备的三个高级特性</h2><ul>\n<li>公平锁</li>\n</ul>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;**\n * Creates an instance of &#123;@code ReentrantLock&#125;.\n * This is equivalent to using &#123;@code ReentrantLock(false)&#125;.\n *&#x2F;\npublic ReentrantLock() &#123;\n    sync &#x3D; new NonfairSync(); \n&#125;</code></pre>\n\n<ul>\n<li>等待可中断</li>\n</ul>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;**\n * 尝试锁定\n *\n * @param timeout 超时时间\n * @param unit    单位\n * @return boolean 尝试获取锁的结果\n * @throws InterruptedException 中断异常\n *&#x2F;\npublic boolean tryLock(long timeout, TimeUnit unit)\n        throws InterruptedException &#123;\n    return sync.tryAcquireNanos(1, unit.toNanos(timeout));\n&#125;</code></pre>\n\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">提示</p>\n<p>条件通知,一把锁可以生成多个条件,每个条件可以对应一个线程分组,可以通过condition对象来进行分组等待和唤醒,解决了<code>synchronized</code>关键字只能<code>notifyAll()</code>的问题</p>\n</div>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public Condition newCondition() &#123;\n    return sync.newCondition();\n&#125;</code></pre>\n\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">注意</p>\n<p><code>ReentrantLock</code>条件通知使用注意点</p>\n</div>\n<ul>\n<li>每个condition可以绑定若干个线程,如果需要多个condition请先对线程进行分组;</li>\n<li>使用<code>await()</code>和<code>signal()</code>或者<code>signalAll()</code>之前需要先获取锁,在finally代码块中要释放锁;</li>\n</ul>\n<h2 id=\"实战演示\"><a href=\"#实战演示\" class=\"headerlink\" title=\"实战演示\"></a>实战演示</h2><p>模拟三个线程,对其中两个线程分为一组绑定到<code>condition1</code>,剩下的一个线程单独一组绑定到<code>condition2</code>,main线程再分别唤醒等待状态的各线程组.</p>\n<ul>\n<li>创建线程池</li>\n</ul>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">private final ThreadFactory threadFactory &#x3D; ThreadFactoryBuilder.create().setNamePrefix(&quot;test&quot;).build();\n\nprivate final Executor executor &#x3D; new ThreadPoolExecutor(Runtime.getRuntime().availableProcessors() + 1, Runtime.getRuntime().availableProcessors() + 1,\n        10, TimeUnit.MINUTES, new LinkedBlockingQueue&lt;&gt;(16), threadFactory, new ThreadPoolExecutor.AbortPolicy());</code></pre>\n\n<ul>\n<li>初始化<code>CountDownLatch</code>和<code>ReentrantLock</code>,注册两个<code>condition</code>.</li>\n</ul>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;&#x2F;闭锁1  让3个子线程同时启动\nCountDownLatch startCdl &#x3D; new CountDownLatch(1);\n&#x2F;&#x2F;闭锁2  main线程等待子线程都执行完毕再结束\nCountDownLatch endCdl &#x3D; new CountDownLatch(3);\n&#x2F;&#x2F;同步锁\nReentrantLock lock &#x3D; new ReentrantLock(false);\n\nCondition condition1 &#x3D; lock.newCondition();\nCondition condition2 &#x3D; lock.newCondition();</code></pre>\n\n<ul>\n<li>创建子线程,进入等待状态,等主线程唤醒</li>\n</ul>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">&#x2F;**\n * 获取线程\n *\n * @param startCdl       开始同步器\n * @param endCdl         结束同步器\n * @param lock      锁\n * @param condition 条件\n * @return &#123;@link Thread&#125;\n *&#x2F;\nprivate Runnable getCallable(CountDownLatch startCdl, CountDownLatch endCdl, ReentrantLock lock, Condition condition) &#123;\n    return () -&gt; &#123;\n        try &#123;\n            &#x2F;&#x2F;让三个子线程同时启动\n            startCdl.await();\n        &#125; catch (InterruptedException e) &#123;\n            e.printStackTrace();\n        &#125;\n        lock.lock();\n        try &#123;\n            &#x2F;&#x2F;await会释放当前锁\n            condition.await();\n            log.info(&quot;线程&#123;&#125;被唤醒,时间:&#123;&#125;&quot;, Thread.currentThread().getName(),new Date());\n        &#125; catch (InterruptedException e) &#123;\n            e.printStackTrace();\n        &#125; finally &#123;\n            log.info(&quot;线程:&#123;&#125;执行完毕,释放同步锁&quot;,Thread.currentThread().getName());\n            &#x2F;&#x2F;被唤醒后,需要释放当前持有的锁\n            lock.unlock();\n            &#x2F;&#x2F;计数器为0主线程停止等待\n            endCdl.countDown();\n        &#125;\n    &#125;;\n&#125;\n&#x2F;&#x2F;启动三个子线程\nexecutor.execute(getCallable(startCdl,endCdl ,lock, condition1));\nexecutor.execute(getCallable(startCdl,endCdl ,lock, condition1));\nexecutor.execute(getCallable(startCdl,endCdl,lock, condition2));</code></pre>\n\n<ul>\n<li>主线程进行唤醒</li>\n</ul>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">log.info(&quot;Main线程开始执行....&quot;);\nstartCdl.countDown();\nlog.info(&quot;子线程正在等待....&quot;);\n\nlock.lock();\ncondition1.signalAll();\nlock.unlock();\ntry &#123;\n    &#x2F;&#x2F;主线程阻塞2秒 区分两次唤醒\n    Thread.sleep(2000);\n&#125; catch (InterruptedException e) &#123;\n    e.printStackTrace();\n&#125;\nlock.lock();\ncondition2.signal();\nlock.unlock();\ntry &#123;\n    log.info(&quot;等待三个子线程执行完毕&quot;);\n    endCdl.await();\n    log.info(&quot;main线程结束&quot;);\n&#125; catch (InterruptedException e) &#123;\n    e.printStackTrace();\n&#125;</code></pre>\n\n<ul>\n<li>控制台输出. 可以看出两次唤醒相隔了两秒<br><img src=\"/img/reentrant-lock/reentrant-lock-test.webp\" alt=\"alt\"></li>\n</ul>\n", "text": "ReentrantLock提供了Synchronized不具备的三个高级特性 公平锁 &#x2F;** * Creates an instance of &#123;@code ReentrantLock&#125;. * This is equivalent to using ...", "link": "", "photos": [], "count_time": {"symbolsCount": "3.7k", "symbolsTime": "3 mins."}, "categories": [{"name": "分布式", "slug": "分布式", "count": 1, "path": "api/categories/分布式.json"}], "tags": [{"name": "ReentrantLock", "slug": "ReentrantLock", "count": 1, "path": "api/tags/ReentrantLock.json"}], "toc": "<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ReentrantLock%E6%8F%90%E4%BE%9B%E4%BA%86Synchronized%E4%B8%8D%E5%85%B7%E5%A4%87%E7%9A%84%E4%B8%89%E4%B8%AA%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7\"><span class=\"toc-text\">ReentrantLock提供了Synchronized不具备的三个高级特性</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E6%88%98%E6%BC%94%E7%A4%BA\"><span class=\"toc-text\">实战演示</span></a></li></ol>", "author": {"name": "倪传方", "slug": "blog-author", "avatar": "/img/site/avatar.webp", "link": "/", "description": "一位正在重塑知识的技术人 <br /> @ <b>微信：ncf08209270</b>", "socials": {"github": "https://github.com/nichuanfang", "twitter": "https://twitter.com/jayzhouzj", "stackoverflow": "https://stackoverflow.com/users/12083298/jaychou", "wechat": "", "qq": "", "weibo": "", "zhihu": "https://www.zhihu.com/people/ba-dao-yi-shan-zhu", "csdn": "https://blog.csdn.net/Saphroth", "juejin": "https://juejin.cn/user/2740456686366830", "customs": {}}}, "mapped": true}}