[{"id": "b9663f58f18133b35bfe243f3e916a80", "title": "Hello World", "content": "\nWelcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer introubleshooting or you can ask me on GitHub.\n1. 快速开始创建新文档hexo new &quot;My New Post&quot;\n\nMore info: Writing\n启动本地服务hexo server\n\nMore info: Server\n构建静态文件hexo generate\n\nMore info: Generating\n部署hexo deploy\n\nMore info: Deployment\n2. Markdown 自定义容器所有的自定义容器都使用这种格式:\n:::[type] [title]\n文本内容\n:::\n\n\ntype 是容器的类型\ntitle 是可选的,可以用来重命名容器的标题\n\nTip 容器:::tip\nNormal Tips Container\n:::\n\n\n如果你不想使用默认的标题 TIP，你可以使用以下方法重命名你的容器标题:\n:::tip Custom header\n\nCustom header\n\n- tips content\n- tips new line\n\n:::\n\n\nWarning 容器:::warning\nWarning!!!\n:::\n\n\nDanger 容器:::danger\nDanger!!!\n:::\n\n\nDetails 容器这是一种特殊类型的容器。如果你看过 GitHub 中的 details 容器，你可能会猜出它的功能是什么。\n是的，您可以隐藏某些内容，并单击来展开它。\n:::details Click to see more\n\nFusce rutrum venenatis eros in hendrerit. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Nullam eget risus egestas, aliquet ipsum sed, volutpat tortor. Proin finibus tortor ac mauris finibus rutrum. Nullam tincidunt arcu eu urna ullamcorper, eu ultricies turpis ornare. Morbi id sollicitudin orci. Proin lobortis vehicula nibh a ornare. Cras sodales eu ligula quis fermentum. Proin eu ultrices leo, quis iaculis justo. Sed dictum, nulla sit amet imperdiet commodo, libero sapien semper justo, ut lobortis elit nunc vitae ante. Nullam lobortis odio quam, ac condimentum elit posuere vitae. Sed ornare, odio et rutrum varius, lorem eros gravida urna, in pharetra sapien justo non magna.\n\n- details content\n- details new line\n\n&#96;console.log(&#39;hello world&#39;)&#96;\n\n:::\n\n关闭状态:\n\n展开状态:\n\n", "slug": "hello-world", "date": "2023-05-11 08:19:00", "categories_index": "欢迎页", "tags_index": "template", "author_index": "倪传方"}, {"id": "cb1bde52f4b0429979650f547c40a9be", "title": "jvm学习笔记之类的加载、连接与初始化", "content": "jvm学习笔记之类的加载、连接与初始化——2019-04-04类的加载、连接与初始化\n\n\n\n\n\n\n\n\n\n加载：查找并加载类的二进制数据\n连接\n验证：确保被加载类的正确性\n准备：为类的静态变量分配内存，并将其初始化为默认值\n解析：把类中的符号引用转换为直接引用\n\n\n初始化：为类的静态变量赋予正确的初始值\n\n如：Class test{     Public static int a&#x3D;1;}在test类在被加载时，静态变量a首先被分配内存，设置默认值a&#x3D;0接着在初始化过程中才被赋予正确的初始值a&#x3D;1\nJava程序对类的使用方式可分为两种\n\n\n\n\n\n\n\n\n\n主动使用被动使用\n所有的Java虚拟机实现必须在每个类或接口被Java程序“首次主动使用”时才能初始化他们\n主动使用（七种） 创建类的实例（new一个类对象） 访问某个类或接口的静态变量，或者对该静态变量赋值（对静态变量取值赋值）助记符 getstatic  putstatic 调用类的静态方法  助记符 invokestatic 反射（如Class.forName(“com.test.Test”)） 初始化一个类的子类如：Class Parent{}Class Child extends Parent{}当子类被初始化时，同时也标记着父类的主动使用，父类也会被初始化 Java虚拟机启动时被标明为启动类的类（Java Test） JDK1.7开始提供的动态语言支持Java.lang.invoke.MethodHandle实例的解析结果REF_getStatic, REF_putStatic, REF_invokeStatic句柄对应的类没有初始化，则初始化\n除了以上七种情况，其它使用java类的方式都被看作是对类的被动使用，都不会导致类的初始化\n类的加载类的加载指的是将类的.class文件中的二进制数据读入到内存中，将其放在运行时数据区的方法区内，然后在内存中创建一个java.lang.Class对象（规范并未说明Class对象位于哪里，大致上放在堆区，HotSpot虚拟机将其放在了方法区中）用来封装类在方法区内的数据结构\n 加载.class文件的方式\n\n\n\n\n\n\n\n\n\n 从本地系统中直接加载（ide工作区重启加载项目即是如此） 通过网络下载.class文件 从zip，jar等归档文件中加载.class文件 从专有数据库中提取.class文件 将Java源文件动态编译为.class文件（如JSP中java代码的编写，实际上是转化成了Servlet）\n（主动使用）测试代码一\npackage com.lagoon.jvm.classloder;\n\npublic class MyTest1 &#123;\n\n    public static void main(String[] args) &#123;\n        System.out.println(MyChild1.str);\n    &#125;\n&#125;\n\nclass MyParent1&#123;\n\n    public static String str&#x3D;&quot;hello world&quot;;\n\n    static &#123;\n        System.out.println(&quot;MyParent1 static block&quot;);\n    &#125;\n&#125;\n\nclass MyChild1 extends MyParent1&#123;\n    static &#123;\n        System.out.println(&quot;MyChild1 static block&quot;);\n    &#125;\n&#125;\n\n\n测试结果\n并没有输出MyChild1 static block这种情况称之为对MyParent1的一个主动使用，但是并没有对MyChild1进行主动使用所以并不会对MyChild1进行初始化，也就不会执行静态代码块\n测试代码二\npackage com.lagoon.jvm.classloder;\n\npublic class MyTest1 &#123;\n\n    public static void main(String[] args) &#123;\n        System.out.println(MyChild1.str2);\n    &#125;\n&#125;\n\nclass MyParent1&#123;\n\n    public static String str&#x3D;&quot;hello world&quot;;\n\n    static &#123;\n        System.out.println(&quot;MyParent1 static block&quot;);\n    &#125;\n&#125;\n\nclass MyChild1 extends MyParent1&#123;\n    public static String str2&#x3D;&quot;welcome...&quot;;\n    static &#123;\n        System.out.println(&quot;MyChild1 static block&quot;);\n    &#125;\n&#125;\n\n\n测试结果\n此时在MyChild1中定义了一个str2，并在main方法中调用的str2，是对MyChild类的一次主动使用，自然会初始化，自然也就会执行静态代码块，输出语句而对于为什么MyParent1也会输出语句？是因为主动使用里有一条出初始化一个类的子类，那么也就是这个父类也会被主动使用，进行一次初始化。父类会进行先行初始化\n测试总结：对于一个静态字段来说，只有直接定义了该字段的类才会被初始化当一个类在初始化时，要求其父类全部都已经初始化完毕这就是问什么输出语句有先后顺序\n有关jvm虚拟机vm设置指令\n-XX:+TraceClassLoading,用于追踪类的加载信息并打印出来\n -XX:+&lt;option&gt;，表示开启option选项\n -XX:-&lt;option&gt;，表示关闭option选项\n*-XX:&lt;option&gt;&#x3D;&lt;value&gt;，表示将option的值设置为value\n\n再新建一个测试类MyTest2\npackage com.lagoon.jvm.classloder;\n\npublic class MyTest2 &#123;\n\n    public static void main(String[] args) &#123;\n        System.out.println(MyParent2.str);\n    &#125;\n&#125;\nclass MyParent2&#123;\n    public static String str&#x3D;&quot;hello,world&quot;;\n\n    static &#123;\n        System.out.println(&quot;MyParent2 static block&quot;);\n    &#125;\n&#125;\n\n\n测试结果\n显而易见是在MyParent2里定义了静态字段，所以会对这个类进行初始化，运行静态代码块但是如果把\npublic static  String str&#x3D;&quot;hello,world&quot;;\n\n改成\npublic static final String str&#x3D;&quot;hello,world&quot;;\n\n加上关键字final运行结果如下\n产生这种差异的原因是\nfinal本身的作用在于str被定义以后不能再被改变，str成为常量，然而常量在编译阶段，会被直接存入到调用这个常量的方法所在类（MyTest2）的常量池中之后，MyTest2与MyParent2就没有任何的关系了\n因此本质上，调用类，也就是MyTest2，并没有直接引用到定义这个常量的类，也就是MyParent2，因此不会触发定义常量的类的初始化\n对MyTest2进行反编译后如下\n\n\n\n\n\n\n\n\n\n\n助记符：ldc表示将int，float或是String类型的常量值从常量池中推送至栈顶\n", "slug": "jvm学习笔记之类的加载、连接与初始化——2019-04-04", "date": "2021-07-09 11:39:11", "categories_index": "Java", "tags_index": "jvm", "author_index": "倪传方"}, {"id": "99f059eccc4d62d721a5fd588d745cd9", "title": "【Java】java23种设计模式案例之命令模式", "content": "【Java】java23 种设计模式案例之命令模式\n\n\n\n\n\n\n\n\n命令模式定义参考\n\n\n\n\n\n\n\n\n\n例子: 源代码\n3 种案例\n\n\n\n\n\n\n\n\n\n1.Command 案例问题描述：一个指挥官请求（命令）三连偷袭敌人代码\npackage com.lagoon.command;\n\n&#x2F;**\n * 问题描述：一个指挥官请求（命令）三连偷袭敌人\n * 这个类扮演的是接收者角色\n *&#x2F;\npublic class CompanyArmy &#123;\n\n    public void sneakAttack()&#123;\n        System.out.println(&quot;我们知道如何偷袭敌人，保证完成任务！&quot;);\n    &#125;\n&#125;\n\n\npackage com.lagoon.command;\n\n&#x2F;**\n * 这个接口扮演的是命令接口角色\n *&#x2F;\npublic interface Command &#123;\n    public abstract void execute();\n&#125;\n\n\npackage com.lagoon.command;\n\n&#x2F;**\n * 这个类扮演的是具体命令的角色\n *&#x2F;\npublic class ConcreteCommand implements Command&#123;\n\n    CompanyArmy companyArmy;  &#x2F;&#x2F;含有接收者的引用\n    ConcreteCommand(CompanyArmy companyArmy)&#123;\n        this.companyArmy&#x3D;companyArmy;\n    &#125;\n\n    @Override\n    public void execute() &#123;  &#x2F;&#x2F;封装着指挥官的请求\n        companyArmy.sneakAttack();  &#x2F;&#x2F;偷袭敌人\n\n    &#125;\n&#125;\n\n\npackage com.lagoon.command;\n\n&#x2F;**\n * 这个类代表请求者，也就是指挥官的角色\n *&#x2F;\npublic class ArmySuperior &#123;\n\n    Command command;  &#x2F;&#x2F;用来存放具体命令的引用\n    public void setCommand(Command command)&#123;\n        this.command&#x3D;command;\n    &#125;\n    public void startExecuteCommand()&#123;\n        command.execute();\n    &#125;\n&#125;\n\n\npackage com.lagoon.command;\n\n&#x2F;**\n * 该类为main方法，演示一个指挥官下发命令如何请求三连偷袭敌人\n *&#x2F;\npublic class Application &#123;\n    public static void main(String[] args) &#123;\n        &#x2F;&#x2F;创建接收者\n        CompanyArmy 三连&#x3D;new CompanyArmy();\n        &#x2F;&#x2F;创建具体命令并指定接收者\n        Command command&#x3D;new ConcreteCommand(三连);\n        &#x2F;&#x2F;创建请求者\n        ArmySuperior 指挥官&#x3D;new ArmySuperior();\n        &#x2F;&#x2F;下发命令\n        指挥官.setCommand(command);\n        &#x2F;&#x2F;开始执行命令\n        指挥官.startExecuteCommand();\n        &#x2F;&#x2F;执行结果：输出语句，我们知道如何偷袭敌人，保证完成任务！\n    &#125;\n&#125;\n\n\n\n\n\n\n\n\n\n\n\n2.Dir 命令，演示命令模式的可撤销操作问题描述：该问题描述的是请求者请求在硬盘上建立目录，还可以撤销请求，这就要求接收者不仅可以在硬盘上建立目录，也可以删除上一次请求所建立的目录代码：\npackage com.lagoon.Dir;\n\n&#x2F;**\n * 该问题描述的是请求者请求在硬盘上建立目录，还可以撤销请求，这就要求接收者不仅可以在硬盘上建立目录，也可以删除上一次请求所建立的目录\n * 该类扮演的是接收者角色，即既可以新增目录，也可以删除目录\n *&#x2F;\nimport java.io.*;\npublic class MakeDir &#123;\n    public void createDir(String name)&#123;\n        File dir&#x3D;new File(name);\n        dir.mkdir();\n    &#125;\n\n    public void deleteDir(String name)&#123;\n        File dir&#x3D;new File(name);\n        dir.delete();\n    &#125;\n&#125;\n\n\npackage com.lagoon.Dir;\n\n&#x2F;**\n * 该类为命令接口类,代表既可以执行命令，也可以撤销收回命令\n *&#x2F;\npublic interface Command &#123;\n    public abstract void execute(String name);\n    public abstract void undo();\n&#125;\n\n\npackage com.lagoon.Dir;\n\nimport java.util.ArrayList;\n\n&#x2F;**\n *该类为具体命令类\n *&#x2F;\npublic class ConcreteCommand implements Command&#123;\n    ArrayList&lt;String&gt; dirNameList;\n    MakeDir makeDir;\n    ConcreteCommand(MakeDir makeDir)&#123;\n        dirNameList&#x3D;new ArrayList&lt;String&gt;();\n        this.makeDir&#x3D;makeDir;\n    &#125;\n    @Override\n    public void execute(String name) &#123;\n        makeDir.createDir(name);\n        dirNameList.add(name);\n\n    &#125;\n\n    @Override\n    public void undo() &#123;\n        if (dirNameList.size()&gt;0)&#123;\n            int m&#x3D;dirNameList.size();\n            String str&#x3D;dirNameList.get(m-1);\n            makeDir.deleteDir(str);\n            dirNameList.remove(m-1);\n        &#125;\n        else\n            System.out.println(&quot;没有需要撤销的操作&quot;);\n\n    &#125;\n&#125;\n\n\npackage com.lagoon.Dir;\n\n&#x2F;**\n * 该类为请求者角色\n *&#x2F;\npublic class RequestMakeDir &#123;\n    Command command;\n    public void setCommand(Command command)&#123;\n        this.command&#x3D;command;\n    &#125;\n    public void startExecuteCommand(String name)&#123;\n        command.execute(name);\n    &#125;\n    public void undoCommand()&#123;\n        command.undo();\n    &#125;\n&#125;\n\n\npackage com.lagoon.Dir;\n\nimport java.util.Iterator;\n\n&#x2F;**\n * 该类为发射类\n *&#x2F;\npublic class Application &#123;\n    public static void main(String[] args) &#123;\n        &#x2F;&#x2F;创建接收者\n        MakeDir makeDir&#x3D;new MakeDir();\n        &#x2F;&#x2F;创建具体命令并指定接收者\n        Command command&#x3D;new ConcreteCommand(makeDir);\n        RequestMakeDir requestMakeDir&#x3D;new RequestMakeDir();\n        requestMakeDir.setCommand(command);\n        &#x2F;&#x2F;建立名字是java的目录\n        requestMakeDir.startExecuteCommand(&quot;java&quot;);\n        &#x2F;&#x2F;建立名字是c的目录\n        requestMakeDir.startExecuteCommand(&quot;c&quot;);\n        &#x2F;&#x2F;建立名字是c++的目录\n        requestMakeDir.startExecuteCommand(&quot;c++&quot;);\n        &#x2F;&#x2F;撤销命令，删除名字是c++的目录\n        requestMakeDir.undoCommand();\n        &#x2F;&#x2F;撤销命令，删除名字是c的目录\n        requestMakeDir.undoCommand();\n\n        &#x2F;&#x2F;查看当前列表里的目录\n        Iterator&lt;String&gt; iterator &#x3D; ((ConcreteCommand) command).dirNameList.iterator();\n        if (iterator.hasNext())&#123;\n            System.out.println(iterator.next());\n        &#125;\n\n        &#x2F;&#x2F;运行结果，输出一个列表目录，java，说明其他被撤销成功\n    &#125;\n&#125;\n\n\n\n\n\n\n\n\n\n\n\n3.Letter 案例问题描述：请求者可以请求只输出英文字母表，俄文字母表或 1-n 之间的偶数也可以请求三种都输出代码：\npackage com.lagoon.Letter;\n\n&#x2F;**\n * 该文件夹演示宏命令\n * 宏命令也是一个具体命令，只不过他包含了其他命令的引用\n * 执行一个宏命令，相当于执行了许多的具体命令\n * 该类为接收者角色\n * 问题描述：请求者可以请求只输出英文字母表，俄文字母表或1-n之间的偶数\n * 也可以请求三种都输出\n *&#x2F;\npublic class PrintLetter &#123;\n    public void printEnglish()&#123;\n        for (char c&#x3D;&#39;a&#39;;c&lt;&#x3D;&#39;z&#39;;c++)&#123;\n            System.out.println(&quot; &quot;+c);\n        &#125;\n    &#125;\n\n    public void printRussian()&#123;\n        for (char c&#x3D;&#39;а&#39;;c&lt;&#x3D;&#39;я&#39;;c++)&#123;\n            System.out.println(&quot; &quot;+c);\n        &#125;\n    &#125;\n&#125;\n\n\npackage com.lagoon.Letter;\n\n&#x2F;**\n * 命令接口类\n *&#x2F;\npublic interface Command &#123;\n    public abstract void execute();\n&#125;\n\n\npackage com.lagoon.Letter;\n\n&#x2F;&#x2F;具体命令之输出英文字母表命令\npublic class PrintEnglishCommand implements Command&#123;\n    PrintLetter letter;\n\n    public PrintEnglishCommand(PrintLetter letter) &#123;\n        this.letter &#x3D; letter;\n    &#125;\n    public void execute()&#123;\n        letter.printEnglish();\n    &#125;\n&#125;\n\n\npackage com.lagoon.Letter;\n\n&#x2F;&#x2F;具体命令之输出俄文字母表\npublic class PrintRussianCommand implements Command&#123;\n    PrintLetter letter;\n\n    public PrintRussianCommand(PrintLetter letter) &#123;\n        this.letter &#x3D; letter;\n    &#125;\n\n    @Override\n    public void execute() &#123;\n        letter.printRussian();\n    &#125;\n\n&#125;\n\n\npackage com.lagoon.Letter;\n\nimport java.util.ArrayList;\n\n&#x2F;&#x2F;宏命令，执行所有命令\npublic class MacroCommand implements Command&#123;\n\n    ArrayList&lt;Command&gt; commandArrayList;  &#x2F;&#x2F;把所有的命令存进数组\n\n    public MacroCommand(ArrayList&lt;Command&gt; commandArrayList) &#123;\n        this.commandArrayList &#x3D; commandArrayList;\n    &#125;\n\n    @Override\n    public void execute() &#123;\n        for (int k&#x3D;0;k&lt;commandArrayList.size();k++)&#123;\n            Command command&#x3D;commandArrayList.get(k);  &#x2F;&#x2F;循环定位到命令\n            command.execute(); &#x2F;&#x2F;执行命令\n        &#125;\n    &#125;\n&#125;\n\n\npackage com.lagoon.Letter;\n\n&#x2F;&#x2F;该类为请求者角色\npublic class RequestMakedir &#123;\n    Command command;\n\n    public void setCommand(Command command) &#123;\n        this.command &#x3D; command;\n    &#125;\n    public void startExecuteCommand()&#123;\n        command.execute();\n    &#125;\n&#125;\n\n\npackage com.lagoon.Letter;\n\nimport java.util.ArrayList;\n\n&#x2F;&#x2F;发射类，main方法\npublic class Application &#123;\n    public static void main(String[] args) &#123;\n        ArrayList&lt;Command&gt; list&#x3D; new ArrayList&lt;&gt;();\n        &#x2F;&#x2F;创建请求者\n        RequestMakedir requestMakedir&#x3D;new RequestMakedir();\n        &#x2F;&#x2F;创建命令具体接收者\n        Command command1&#x3D;new PrintEnglishCommand(new PrintLetter());\n        Command command2&#x3D;new PrintRussianCommand(new PrintLetter());\n\n        &#x2F;&#x2F;整合命令\n        list.add(command1);\n        list.add(command2);\n\n\n        &#x2F;&#x2F;创宏命令\n        Command macroCommand&#x3D;new MacroCommand(list);\n\n        System.out.println(&quot;单独输出英文字母表:&quot;);\n        requestMakedir.setCommand(command1);\n        requestMakedir.startExecuteCommand();\n\n        System.out.printf(&quot;%n用一个宏命令输出所有:%n&quot;);\n        requestMakedir.setCommand(macroCommand);\n        requestMakedir.startExecuteCommand();\n    &#125;\n&#125;\n\n", "slug": "【Java】java23种设计模式案例之命令模式", "date": "2020-12-01 10:50:00", "categories_index": "Java", "tags_index": "设计模式", "author_index": "倪传方"}, {"id": "2ca13a35ebbdac5fbc6bef9360731d5d", "title": "awesome-selfhosted", "content": "Awesome-Selfhosted \nSelf-hosting is the practice of hosting and managing applications on your own server(s) instead of consuming from SaaSS providers.\nThis is a list of Free Software network services and web applications which can be hosted on your own server(s). Non-Free software is listed on the Non-Free page.\nSee Contributing.\n\nTable of contents\nAwesome-Selfhosted\nTable of contents\nSoftware\nAnalytics\nArchiving and Digital Preservation (DP)\nAutomation\nBackup\nBlogging Platforms\nBooking and Scheduling\nBookmarks and Link Sharing\nCalendar &amp; Contacts - CalDAV or CardDAV Servers\nCalendar &amp; Contacts - CalDAV or CardDAV Web-based Clients\nCommunication - Custom Communication Systems\nCommunication - Email - Complete Solutions\nCommunication - Email - Mail Delivery Agents\nCommunication - Email - Mail Transfer Agents\nCommunication - Email - Mailing Lists and Newsletters\nCommunication - Email - Webmail Clients\nCommunication - IRC\nCommunication - SIP\nCommunication - Social Networks and Forums\nCommunication - Video Conferencing\nCommunication - XMPP - Servers\nCommunication - XMPP - Web Clients\nCommunity-Supported Agriculture (CSA)\nConference Management\nContent Management Systems (CMS)\nDatabase Management\nDNS\nDocument Management\nDocument Management - E-books\nDocument Management - Institutional Repository and Digital Library Software\nDocument Management - Integrated Library Systems (ILS)\nE-commerce\nFederated Identity &amp; Authentication\nFeed Readers\nFile Transfer &amp; Synchronization\nFile Transfer - Distributed Filesystems\nFile Transfer - Object Storage &amp; File Servers\nFile Transfer - Peer-to-peer Filesharing\nFile Transfer - Single-click &amp; Drag-n-drop Upload\nFile Transfer - Web-based File Managers\nGames\nGames - Administrative Utilities &amp; Control Panels\nGenealogy\nGroupware\nHuman Resources Management (HRM)\nInternet of Things (IoT)\nInventory Management\nKnowledge Management Tools\nLearning and Courses\nMaps and Global Positioning System (GPS)\nMedia Streaming\nMedia Streaming - Audio Streaming\nMedia Streaming - Multimedia Streaming\nMedia Streaming - Video Streaming\nMiscellaneous\nMoney, Budgeting &amp; Management\nMonitoring\nNote-taking &amp; Editors\nOffice Suites\nPassword Managers\nPastebins\nPersonal Dashboards\nPhoto and Video Galleries\nPolls and Events\nProxy\nRecipe Management\nRemote Access\nResource Planning\nResource Planning - Enterprise Resource Planning\nSearch Engines\nSelf-hosting Solutions\nSoftware Development\nSoftware Development - API Management\nSoftware Development - Continuous Integration &amp; Deployment\nSoftware Development - FaaS &amp; Serverless\nSoftware Development - IDE &amp; Tools\nSoftware Development - Localization\nSoftware Development - Low Code\nSoftware Development - Project Management\nSoftware Development - Testing\nStatic Site Generators\nStatus &#x2F; Uptime pages\nTask Management &amp; To-do Lists\nTicketing\nTime Tracking\nURL Shorteners\nVPN\nWeb Servers\nWikis\n\n\nList of Licenses\nAnti-features\nExternal Links\nContributing\nAuthors\nLicense\n\n\n\n\nSoftwareAnalytics^        back to top        ^\nAnalytics is the systematic computational analysis of data or statistics. It is used for the discovery, interpretation, and communication of meaningful patterns in data.\nRelated: Database Management, Personal Dashboards\n\nAckee - Self-hosted analytics tool for those who care about privacy. (Demo, Source Code) MIT Nodejs/Docker/K8S\nAptabase - Open source, privacy first and simple analytics for mobile and desktop apps. (Source Code) AGPL-3.0 Docker\nAWStats - Generate statistics from web, streaming, ftp or mail server logfiles. (Source Code) GPL-3.0 Perl\nCountly Community Edition - Real time mobile and web analytics, crash reporting and push notifications platform. (Source Code) AGPL-3.0 Nodejs/Docker\nDruid - Distributed, column-oriented, real-time analytics data store. (Source Code) Apache-2.0 Java/Docker\nEDA - Web application for data analysis and visualization. (Source Code) Apache-2.0 Nodejs\nFathom Lite - A simple and privacy-focused web analytics alternative to Google Analytics. MIT Go/Docker\nGoAccess - Real-time web log analyzer and interactive viewer that runs in a terminal. (Source Code) GPL-2.0 C\nGoatCounter - Easy web statistics without tracking of personal data. (Source Code) EUPL-1.2 Go\nMatomo - Google Analytics alternative that protects your data and your customers’ privacy. (Source Code) GPL-3.0 PHP\nMetabase - Easy, open-source way for everyone in your company to ask questions and learn from data. (Source Code) AGPL-3.0 Java/Docker\nMixpost - Self-hosted social media management software. Easily create, schedule, publish, and manage social media content in one place. Alternative to Hootsuite, Buffer, and other social media tools. (Source Code) MIT PHP/Docker\nNetron - Visualizer for neural network and machine learning models. (Source Code) MIT Python/Nodejs\nOffen - Fair, lightweight and open web analytics tool. Gain insights while your users have full access to their data. (Demo, Source Code) Apache-2.0 Go/Docker\nOpen Web Analytics - Web analytics framework that lets you stay in control of how you instrument and analyze the use of your websites and applications. (Source Code) GPL-2.0 PHP\nPlausible Analytics - Simple, open-source, lightweight (&lt; 1 KB) and privacy-friendly web analytics. (Source Code) MIT Elixir\nPoeticMetric - Free as in freedom, open source, privacy-first and regulation-compliant web analytics tool. (Demo, Source Code) AGPL-3.0 Docker\nPostHog - Product analytics, session recording, feature flagging and a&#x2F;b testing that you can self-host. Alternative to Mixpanel&#x2F;Amplitude&#x2F;Heap&#x2F;HotJar&#x2F;Optimizely. (Source Code) MIT Python\nRedash - Connect and query your data sources, build dashboards to visualize data and share them with your company. (Source Code) BSD-2-Clause Docker\nRudderStack - Collect, unify, transform, and store your customer data, and route it to a wide range of common, popular marketing, sales, and product tools. alternative to Segment. (Source Code) AGPL-3.0 Docker/K8S/Go/Nodejs\nShynet - Modern, privacy-friendly, and detailed web analytics that works without cookies or JS. Apache-2.0 Python/Docker\nSocioboard ⚠ - Social media management, analytics, and reporting platform supporting nine social media networks out-of-the-box. GPL-3.0 Nodejs\nSuperset - Modern data exploration and visualization platform. (Source Code) Apache-2.0 Python\nSwetrix - Ultimate, open-source web analytics to satisfy all your needs. (Demo, Source Code) AGPL-3.0 Docker\nUmami - Simple, fast, privacy-focused alternative to Google Analytics. (Demo, Source Code) MIT Nodejs/Docker\n\nArchiving and Digital Preservation (DP)^        back to top        ^\nDigital archiving and preservation software.\nRelated: Content Management Systems (CMS)\n\nAccess to Memory (AtoM) - Web-based, open source application for standards-based archival description and access in a multilingual, multi-repository environment. (Demo, Source Code) AGPL-3.0 PHP\nArchiveBox - Self-hosted wayback machine that creates HTML &amp; screenshot archives of sites from your bookmarks, browsing history, RSS feeds, or other sources. (Source Code) MIT Python/Docker\nArchivematica - Mature digital preservation system designed to maintain standards-based, long-term access to collections of digital objects. (Demo, Source Code) AGPL-3.0 Python\nArchivesSpace - Archives information management application for managing and providing Web access to archives, manuscripts and digital objects. (Demo, Source Code) ECL-2.0 Ruby\nCKAN - CKAN is a tool for making open data websites. (Source Code) AGPL-3.0 Python\nCollective Access - Providence - Highly configurable Web-based framework for management, description, and discovery of digital and physical collections supporting a variety of metadata standards, data types, and media formats. (Source Code) GPL-3.0 PHP\nGanymede ⚠ - Twitch VOD and Live Stream archiving platform. Includes a rendered chat for each archive. GPL-3.0 Docker\nLiveStreamDVR ⚠ - An automatic Twitch recorder capable of capturing live streams, chat messages and stream metadata. MIT Python/Nodejs/Docker\nOmeka S - Omeka S is a web publication system for universities, galleries, libraries, archives, and museums. It consists of a local network of independently curated exhibits sharing a collaboratively built pool of items, media, and their metadata. (Source Code) GPL-3.0 Nodejs\nWayback - A self-hosted toolkit for archiving webpages to the Internet Archive, archive.today, IPFS, and local file systems. GPL-3.0 Go\nWebarchive - Lightweight self-hosted wayback machine that creates HTML and PDF files from your bookmarks. BSD-3-Clause Go\n\nAutomation^        back to top        ^\nAutomation software designed to reduce human intervention in processes.\nRelated: Internet of Things (IoT), Software Development - Continuous Integration &amp; Deployment\n\nAccelerated Text - Automatically generate multiple natural language descriptions of your data varying in wording and structure. Apache-2.0 Java\nActionsflow ⚠ - The free Zapier&#x2F;IFTTT alternative for developers to automate your workflows based on Github actions. (Source Code) MIT Docker/Nodejs\nActivepieces - No-code business automation tool like Zapier or Tray. For example, you can send a Slack notification for each new Trello card. (Source Code) MIT Typescript\nActiveWorkflow - An intelligent process and workflow automation platform based on software agents. MIT Ruby\nAmIUnique - Learn how identifiable you are on the Internet (browser fingerprinting tool). (Source Code) MIT Java\nApache Airflow - Airflow is a platform to programmatically author, schedule, and monitor workflows. (Source Code) Apache-2.0 Python/Docker\nAutomatisch - Business automation tool that lets you connect different services like Twitter, Slack, and more to automate your business processes (Open source Zapier alternative). (Source Code) AGPL-3.0 Docker\nbetanin - Music organization man-in-the-middle of your torrent client and music player. Based on beets.io, similar to Sonarr and Radarr. GPL-3.0 Python/Docker\nChiefOnboarding - Employee onboarding platform that allows you to provision user accounts and create sequences with todo items, resources, text&#x2F;email&#x2F;Slack messages, and more! Available as a web portal and Slack bot. (Source Code) AGPL-3.0 Docker\nEonza - Eonza is used to create scripts and automate tasks on servers or VPS hosting. Manage your servers from any browser on any device. (Demo, Source Code) MIT Go\nExadel CompreFace - Face recognition system that provides REST API for face recognition, face detection, and other face services, and is easily deployed with docker. There are SDKs for Python and JavaScript languages. Can be used without prior machine learning skills. (Source Code) Apache-2.0 Docker/Java/Nodejs\nfeed2toot - Feed2toot parses a RSS feed, extracts the last entries and sends them to Mastodon. (Source Code) GPL-3.0 Python\nfeedmixer - FeedMixer is a WSGI (Python3) micro web service which takes a list of feed URLs and returns a new feed consisting of the most recent n entries from each given feed(Returns Atom, RSS, or JSON). (Demo) WTFPL Python\nHeadphones - Automated music downloader for NZB and Torrent, written in Python. It supports SABnzbd, NZBget, Transmission, µTorrent, Deluge and Blackhole. GPL-3.0 Python\nHealthchecks - Django app which listens for pings and sends alerts when pings are late. (Source Code) BSD-3-Clause Python\nhomebank-converter - Web app to convert an export bank file to compatible Homebank csv. (Demo) AGPL-3.0 HTML5\nHRConvert2 - Drag-and-drop file conversion server with session based authentication, automatic temporary file maintenance, and logging capability. GPL-3.0 PHP\nHuginn - Allows you to build agents that monitor and act on your behalf. MIT Ruby\nKibitzr - Lightweight personal web assistant with powerful integrations. (Source Code) MIT Python\nKrayin - Free and Opensource Laravel CRM Application. (Demo, Source Code) MIT PHP\nLazyLibrarian ⚠ - LazyLibrarian is a program to follow authors and grab metadata for all your digital reading needs. It uses a combination of Goodreads Librarything and optionally GoogleBooks as sources for author info and book info. GPL-3.0 Python\nLeon - Open-source personal assistant who can live on your server. (Source Code) MIT Nodejs\nLidarr - Lidarr is a music collection manager for Usenet and BitTorrent users. (Source Code) GPL-3.0 C#/Docker\nMatchering - A containerized web app for automated music mastering. An open-source alternative to LANDR, eMastered, and MajorDecibel. GPL-3.0 Docker\nMedusa - Automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic. (Source Code) GPL-3.0 Python\nMetaTube ⚠ - A Web GUI to automatically download music from YouTube add metadata from Spotify, Deezer or Musicbrainz. GPL-3.0 Python\nMeTube - Web GUI for youtube-dl, with playlist support. Allows downloading videos from dozens of websites. AGPL-3.0 Python/Nodejs/Docker\nnefarious - Web application that automates downloading Movies and TV Shows. GPL-3.0 Python\nOliveTin - OliveTin is a web interface for running Linux shell commands. AGPL-3.0 Go\nPatrowl - Open Source, Smart and Scalable Security Operations Orchestration Platform. AGPL-3.0 Python\nPodgrab - Lightweight podcast manager and automatic podcast episode downloader. It will monitor podcasts for your and download them automatically whenever a new episode goes live. GPL-3.0 Docker/Go\npyLoad - Lightweight, customizable and remotely manageable downloader for 1-click-hosting sites like rapidshare.com or uploaded.to. (Source Code) GPL-3.0 Python\nRadarr - Radarr is an independent fork of Sonarr reworked for automatically downloading movies via Usenet and BitTorrent, à la Couchpotato. (Source Code) GPL-3.0 C#/Docker\nSickChill - SickChill is an automatic video library manager for TV shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic. (Source Code) GPL-3.0 Python/Docker\nSiteInspector - Web-based tool for catching spelling errors, grammatical errors, broken links, and other errors on websites. (Source Code) AGPL-3.0 Docker\nSonarr - Automatic TV Shows downloader and manager for Usenet and BitTorrent. It can grab, sort and rename new episodes and automatically upgrade the quality of files already downloaded when a better quality format becomes available. (Source Code) GPL-3.0 C#/Docker\nStackStorm - StackStorm (aka IFTTT for Ops) is event-driven automation for auto-remediation, security responses, troubleshooting, deployments, and more. Includes rules engine, workflow, 160 integration packs with 6000+ actions and ChatOps. (Source Code) Apache-2.0 Python\nTube Archivist ⚠ - Your self hosted YouTube media server: Subscribe, download, index, search and play your favorite videos. (Source Code) GPL-3.0 Python/Docker\ntubesync ⚠ - Syncs YouTube channels and playlists to a locally hosted media server. AGPL-3.0 Docker/Python\nWebUI-aria2 - Interface to interact with the aria2 downloader. Very simple to use, just download and open index.html in any web browser. (Demo) MIT HTML5\nydl_api_ng - Simple youtube-dl REST API to launch downloads on a distant server. GPL-3.0 Python\nYoutubeDL-Material - Material Design inspired YouTube downloader, based on youtube-dl. Supports playlists, quality select, search, dark mode and much more, all with a clean and modern design. MIT Nodejs/Docker\nYoutubeDL-Server - Web and REST interface for downloading videos onto a server. MIT Python/Docker\nyt-dlp Web UI - Web GUI for yt-dlp. MPL-2.0 Docker/Go/Nodejs\nµTask - Automation engine that models and executes business processes declared in yaml. BSD-3-Clause Go/Docker\n\nBackup^        back to top        ^\nBackup software.\nPlease visit awesome-sysadmin&#x2F;Backups\nBlogging Platforms^        back to top        ^\nA blog is a discussion or informational website consisting of discrete, diary-style text entries (posts).\nRelated: Static Site Generators, Content Management Systems (CMS)\nSee also: WeblogMatrix\n\nAntville - Free, open source project aimed at the development of a high performance, feature rich weblog hosting software. (Source Code) Apache-2.0 Javascript\nBlog - Facebook-styled blog. Free, extremely lightweight, single-user and easy to install. GPL-3.0 PHP\nCastopod - A podcast management hosting platform that includes the latest podcast 2.0 standards, an automated Fediverse feed, analytics, an embeddable player, and more. (Source Code) AGPL-3.0 PHP/Docker\nChyrp Lite - Extra-awesome, extra-lightweight blog engine. (Source Code) BSD-3-Clause PHP\nDotclear - Take control over your blog. (Source Code) GPL-2.0 PHP\nFlatPress - A lightweight, easy-to-set-up flat-file blogging engine. (Source Code) GPL-2.0 PHP\nGhost - Just a blogging platform. (Source Code) MIT Nodejs\nHaven - Private blogging system with markdown editing and built in RSS reader. (Demo, Source Code) MIT Ruby\nhtmly - Databaseless Blogging Platform (Flat-File Blog). (Demo, Source Code) GPL-2.0 PHP\nKnown - A collaborative social publishing platform. (Source Code) Apache-2.0 PHP\nPluXml - XML-based blog&#x2F;CMS platform. (Source Code) GPL-3.0 PHP\nSerendipity - Serendipity (s9y) is a highly extensible and customizable PHP blog engine using Smarty templating. (Source Code) BSD-3-Clause PHP\nWriteFreely - Writing software for starting a minimalist, federated blog — or an entire community. (Source Code) AGPL-3.0 Go\n\nBooking and Scheduling^        back to top        ^\nEvent scheduling, reservation, and appointment management software.\nRelated: Polls and Events\n\nAlf.io - The open source ticket reservation system. (Demo, Source Code) GPL-3.0 Java\nCal.com - The open-source online appointment scheduling system. (Demo, Source Code) MIT Nodejs\nEasy!Appointments - A highly customizable web application that allows your customers to book appointments with you via the web. (Demo, Source Code) GPL-3.0 PHP\nQloApps - An open-source, customizable and intuitive web-based hotel reservation system and a booking engine. (Demo, Source Code) OSL-3.0 PHP/Nodejs\nSeatsurfing - Webbased app to book seats, desks and rooms for offices. (Demo, Source Code) GPL-3.0 Docker\n\nBookmarks and Link Sharing^        back to top        ^\nSoftware which allows users to add, annotate, edit, and share bookmarks of web documents.\n\nBriefkasten - Modern app for saving and managing your own bookmarks. Includes a browser extension. (Demo) MIT Nodejs/Docker\nBuku - A powerful bookmark manager and a personal textual mini-web. GPL-3.0 Python\nEspial - An open-source, web-based bookmarking server. AGPL-3.0 Haskell\nFirefox Account Server - This allows you to host your own Firefox accounts server. (Source Code) MPL-2.0 Nodejs/Java\ngolinks - Web application that allows you to create smart bookmarks, commands and aliases by pointing your web browser’s default search engine at a running instance. Similar to bunny1 or yubnub. (Demo) MIT Go/Docker\nHackershare - Social bookmarks website for hackers. (Demo) MIT Ruby\nLinkAce - A bookmark archive with automatic backups to the Internet Archive, link monitoring, and a full REST API. Installation is done via Docker, or as a simple PHP application. (Demo, Source Code) GPL-3.0 Docker/PHP\nlinkding - Minimal bookmark management with a fast and clean UI. Simple installation through Docker and can run on your Raspberry Pi. MIT Docker/Python/Nodejs\nLinkWarden - A self-hosted bookmark + archive manager to store your useful links. (Demo) MIT Docker/Nodejs\nNeonLink - Self-hosted bookmark service with unique design and simple installation with Docker. MIT Docker\nPinry - The tiling image board system for people who want to save, tag, and share images, videos, and webpages. (Demo, Source Code) BSD-2-Clause Docker/Python\nShaarli - Personal, minimalist, super-fast, no-database bookmarking and link sharing platform. (Demo) Zlib PHP\nShiori - Simple bookmark manager built with Go. MIT Go/Docker\nSyncMarks - Sync and manage your browser bookmarks from Edge, Firefox and Chromium. (Clients) AGPL-3.0 PHP\nxBrowserSync - Open source tool for syncing browser data between browsers and devices. (Source Code) MIT Nodejs\n\nCalendar &amp; Contacts - CalDAV or CardDAV Servers^        back to top        ^\nCalDAV and CardDAV protocol servers Electronic calendar and address book and contact management.\nRelated: Groupware\nSee also: Comparison of CalDAV and CardDAV implementations - Wikipedia\n\nBaïkal - Lightweight CalDAV and CardDAV server based on sabre&#x2F;dav. (Source Code) GPL-3.0 PHP\ncalypso - Python-based CalDAV and CardDAV server, forked from Radicale. (Source Code) GPL-3.0 Python\nDAViCal - Server for calendar sharing (CalDAV) that uses a PostgreSQL database as a data store. (Source Code) GPL-2.0 PHP\nDavis - A simple, dockerizable and fully translatable admin interface for sabre&#x2F;dav based on Symfony 5 and Bootstrap 4, largely inspired by Baïkal. MIT PHP\nEtebase (EteSync) - End-to-end encrypted and journaled personal information server supporting calendar and contact data, offering its own clients. (Source Code) AGPL-3.0 Python/Django\nRadicale - Simple calendar and contact server with extremely low administrative overhead. (Source Code) GPL-3.0 Python\nSabreDAV - Open source CardDAV, CalDAV, and WebDAV framework and server. (Source Code) MIT PHP\nXandikos - Open source CardDAV and CalDAV server with minimal administrative overhead, backed by a Git repository. GPL-3.0 Python\n\nCalendar &amp; Contacts - CalDAV or CardDAV Web-based Clients^        back to top        ^\nCalDAV and CardDAV protocol web clients&#x2F;interfaces.\n\nAgenDAV - Multilanguage CalDAV web client with a rich AJAX interface and shared calendars support. (Source Code) GPL-3.0 PHP\nBloben - CalDAV web client. (Demo, Source Code) AGPL-3.0 Docker\nEteSync Web - EteSync’s official Web-based client (i.e., their Web app). (Demo, Source Code) AGPL-3.0 Javascript\nManage My Damn Life - Manage my Damn Life (MMDL) is a self-hosted front end for managing your CalDAV tasks and calendars. (Source Code) GPL-3.0 Nodejs/Docker\n\nCommunication - Custom Communication Systems^        back to top        ^\nCommunication software used to provide remote access to systems and exchange files and messages in text, audio and&#x2F;or video formats between different computers or users, using their own custom protocols.\n\nApprise - Apprise allows you to send a notification to almost all of the most popular notification services available to us today such as: Telegram, Discord, Slack, Amazon SNS, Gotify, etc. MIT Python/Docker\nBluetoothCommunicatorExample - Bluetooth LE chat app to communicate between android devices with P2P architecture. (Clients) Apache-2.0 Java\nCentrifugo - Language-agnostic real-time messaging (Websocket or SockJS) server. (Demo, Source Code) MIT Go/Docker/K8S\nChatwoot - Self-hosted customer communication platform, an alternative to Intercom &amp; Zendesk. (Source Code) MIT Ruby/Docker/K8S\nChitchatter - A peer-to-peer chat app that is serverless, decentralized, and ephemeral. (Source Code) GPL-2.0 Nodejs\nConduit - A simple, fast, and reliable chat server powered by Matrix. (Source Code) Apache-2.0 Rust\nDarkwire.io - End-to-end encrypted instant web chat. MIT Nodejs\nDatabag - Federated, end-to-end encrypted messaging service for the web, iOS, and Android, supporting text, photos, video, and WebRTC video and audio calls. (Demo) Apache-2.0 Docker\nDendrite - Second-generation Matrix homeserver written in Go. It intends to provide an efficient, reliable and scalable alternative to Synapse. (Source Code) Apache-2.0 Go\nElement - Fully-featured Matrix client for Web, iOS &amp; Android. (Source Code) Apache-2.0 Nodejs\nGNUnet - Free software framework for decentralized, peer-to-peer networking. (Source Code) GPL-3.0 C\nGotify - Self-hosted notification server with Android and CLI clients, similar to PushBullet. (Source Code, Clients) MIT Go/Docker\nHawkpost - HawkPost is a web app that lets you create unique links that you can share with a person that desires to send you important information but doesn’t know how to encrypt it. The message is encrypted in their browser and sent to your email address. (Source Code) MIT Python/Docker\nHyphanet - Anonymously share files, browse and publish freesites (web sites accessible only through Hyphanet) and chat on forums. (Source Code) GPL-2.0 Java\nJam - Jam is an open source alternative to Clubhouse: private audio chat rooms to talk to friends and family. (Demo, Source Code) AGPL-3.0 Docker/Nodejs\nJami - Free and universal communication platform which preserves the user’s privacy and freedoms (formerly GNU Ring). (Source Code) GPL-3.0 C++\nKChat - PHP Based Live Chat Application. Apache-2.0 PHP\nLeapChat - Ephemeral, encrypted, in-browser chat rooms. (Source Code) AGPL-3.0 Docker/Nodejs/Shell\nLive Helper Chat - Live Support chat for your website. (Source Code) Apache-2.0 PHP\nMattermost - Open-source, on-prem Slack-alternative. It can be integrated with Gitlab. (Source Code) AGPL-3.0/Apache-2.0 Go/Docker/K8S\nMiAOU - Multi-room persistent chat server. (Source Code) MIT Nodejs\nMibew - Mibew Messenger is an open-source live support application written in PHP and MySQL. It enables one-on-one chat assistance in real-time directly from your website. (Demo, Source Code) Apache-2.0 PHP\nMumble - Low-latency, high quality voice&#x2F;text chat software. (Source Code, Clients) BSD-3-Clause C++\nNotifo - Multichannel notification server with support for Email, Mobile Push, Web Push, SMS, messaging and a javascript plugin. MIT C#\nNovu - Self-hosted &#x2F; cloud notification infrastructure for developers. (Source Code) MIT Docker/Nodejs\nntfy - Push notifications to phone or desktop using HTTP PUT&#x2F;POST, with Android app, CLI and web app, similar to Pushover and Gotify. (Demo, Source Code, Clients) Apache-2.0/GPL-2.0 Go/Docker/K8S\nOTS - One-Time-Secret sharing platform with a symmetric 256bit AES encryption in the browser. (Source Code) Apache-2.0 Go\nPapercups - An open source live customer chat web app written in Elixir. (Demo, Source Code) MIT Elixir\nPushBits - Self-hosted notification server for relaying push notifications via Matrix, similar to PushBullet and Gotify. ISC Go\nRallly - Rallly is an open-source alternative to Doodle that lets you create polls to vote on dates and times. (Source Code) AGPL-3.0 Nodejs\nRetroShare - Secured and decentralized communication system. Offers decentralized chat, forums, messaging, file transfer. (Source Code) GPL-2.0 C++\nRevolt - Revolt is a user-first chat platform built with modern web technologies. (Source Code) AGPL-3.0 Rust\nRocket.Chat - Teamchat solution similar to Gitter.im or Slack. (Source Code) MIT Nodejs/Docker/K8S\nScreensy - Simple peer-to-peer screen sharing solution for sharing your screen with WebRTC. (Demo) GPL-3.0 Nodejs/Docker\nShhh - Keep secrets out of emails or chat logs, share them using secure links with passphrase and expiration dates. MIT Python\nSimpleX Chat - The most private and secure chat and applications platform - now with double ratchet E2E encryption. AGPL-3.0 Haskell\nSoketi - Soketi is a free, open-source Pusher drop-in alternative. (Source Code) MIT Nodejs/Docker/K8S\nSpectrum 2 - Spectrum 2 is an open source instant messaging transport. It allows users to chat together even when they are using different IM networks. (Source Code) GPL-3.0 C++\nStoneAge Messenger - A self-hosted Android messenger, S3-compatible storage is the only backend needed. (Source Code, Clients) GPL-3.0 Java\nSynapse - Server for Matrix, an open standard for decentralized persistent communication. (Source Code) Apache-2.0 Python\nSyndie - Syndie is a libre system for operating distributed forums. CC0-1.0 Java\nTailchat - Next generation noIM application in your own workspace, not only another Slack&#x2F;Discord&#x2F;rocket.chat. (Demo, Source Code) Apache-2.0 Docker/K8S/Nodejs\nTextBelt ⚠ - Outgoing SMS API that uses carrier-specific gateways to deliver your text messages for free, and without ads. MIT Javascript\nTiledesk - All-in-one customer engagement platform from lead-gen to post-sales, from WhatsApp to your website. With omni-channel live agents and AI-powered chatbots. Self hosted alternative to Intercom, Zendesk, Tawk.to and Tidio. (Source Code) MIT Docker/K8S\nTinode - Instant messaging platform. Backend in Go. Clients: Swift iOS, Java Android, JS webapp, scriptable command line; chatbots. (Demo, Source Code, Clients) GPL-3.0 Go\nTox - Distributed, secure messenger with audio and video chat capabilities. (Source Code) GPL-3.0 C\nTypebot - Typebot is a conversational app builder as an alternative to Typeform or Landbot. (Source Code) AGPL-3.0 Docker\nWBO - Web Whiteboard to collaborate in real-time on schemas, drawings, and notes. (Demo) AGPL-3.0 Nodejs/Docker\nYopass - Secure sharing of secrets, passwords and files. (Demo) Apache-2.0 Go/Docker\nZulip - Zulip is a powerful, open source group chat application. (Source Code) Apache-2.0 Python\n\nCommunication - Email - Complete Solutions^        back to top        ^\nSimple deployment of E-mail servers, e.g. for inexperienced or impatient admins.\n\nAnonAddy - Open source email forwarding service for creating aliases. (Source Code) MIT PHP\nDebOps - Your Debian-based data center in a box. A set of general-purpose Ansible roles that can be used to manage Debian or Ubuntu hosts. (Source Code) GPL-3.0 YAML/Ansible/Python\ndocker-mailserver - Production-ready fullstack but simple mail server (SMTP, IMAP, LDAP, Antispam, Antivirus, etc.) running inside a container. Only configuration files, no SQL database. (Source Code) MIT Docker\nDovel - SMTP server that sends and receives emails according to a simple configuration file, with an optional web interface that you can use to browse your emails. (Source Code) LGPL-3.0 Go\nemailwiz - Luke Smith’s bash script to completely automate the setup of a Postfix&#x2F;Dovecot&#x2F;SpamAssassin&#x2F;OpenDKIM server on debian. GPL-3.0 Bash\nhomebox - Suite of Ansible scripts to deploy a fully functional mail server on Debian. Unobtrusive and automatic as much as possible, focusing on stability and security. GPL-3.0 Shell\nInboxen - Inboxen is a service that provides you with an infinite number of unique inboxes. (Source Code) GPL-3.0 Python\niRedMail - Full-featured mail server solution based on Postfix and Dovecot. (Source Code) GPL-3.0 Shell\nMaddy Mail Server - All-in-one mail server that implements SMTP (both MTA and MX) and IMAP. Replaces Postfix, Dovecot, OpenDKIM, OpenSPF, OpenDMARC with single daemon. GPL-3.0 Go\nMail-in-a-Box - Turns any Ubuntu server into a fully functional mail server with one command. (Source Code) CC0-1.0 Shell\nMailcow - Mail server suite based on Dovecot, Postfix and other open source software, that provides a modern Web UI for administration. (Source Code) GPL-2.0 Docker/PHP\nMailu - Mailu is a simple yet full-featured mail server as a set of Docker images. (Source Code) MIT Docker/Python\nModoboa - Modoboa is a mail hosting and management platform including a modern and simplified Web User Interface. (Source Code) ISC Python\nPostal - A complete and fully featured mail server for use by websites &amp; web servers. (Source Code) MIT Docker/Ruby\nSimple NixOS Mailserver - Complete mailserver solution leveraging the Nix Ecosystem. GPL-3.0 Nix\nSimpleLogin - Open source email alias solution to protect your email address. Comes with browser extensions and mobile apps. (Source Code) MIT Docker/Python\nwildduck - Scalable no-SPOF IMAP&#x2F;POP3 mail server. (Source Code) EUPL-1.2 Nodejs/Docker\n\nCommunication - Email - Mail Delivery Agents^        back to top        ^\nMail Delivery Agents (MDAs) - IMAP&#x2F;POP3 server software.\n\nCyrus IMAP - Email (IMAP&#x2F;POP3), contacts and calendar server. (Source Code) BSD-3-Clause-Attribution C\nDovecot - IMAP and POP3 server written primarily with security in mind. (Source Code) MIT/LGPL-2.1 C\nMailForm - Lightweight self-hosted open source alternative to Formspree and SendGrid. Apache-2.0 Nodejs/Docker\nPiler - Feature-rich open source email archiving solution. (Source Code) GPL-3.0 C\nStalwart JMAP - JMAP and IMAP server designed to be secure, fast, robust and scalable. (Source Code) AGPL-3.0 Rust/Docker\n\nCommunication - Email - Mail Transfer Agents^        back to top        ^\nMail Transfer Agents (MTAs) - SMTP servers.\n\nchasquid - SMTP (email) server with a focus on simplicity, security, and ease of operation. (Source Code) Apache-2.0 Go\nCourier MTA - Fast, scalable, enterprise mail&#x2F;groupware server providing ESMTP, IMAP, POP3, webmail, mailing list, basic web-based calendaring and scheduling services. (Source Code) GPL-3.0 C\nDragonFly - A small MTA for home and office use. Works on Linux and FreeBSD. BSD-3-Clause C\nEmailRelay - A small and easy to configure SMTP and POP3 server for Windows and Linux. (Source Code) GPL-3.0 C++\nExim - Message transfer agent (MTA) developed at the University of Cambridge. (Source Code) GPL-3.0 C\nHaraka - High-performance, pluginable SMTP server written in Javascript. (Source Code) MIT Nodejs\nMailCatcher - Ruby gem that deploys a simply SMTP MTA gateway that accepts all mail and displays in web interface. Useful for debugging or development. (Source Code) MIT Ruby\nMaildrop - Disposable email SMTP server, also useful for development. MIT Scala\nMailHog - Small Golang executable which runs an SMTP MTA gateway that accepts all mail and displays in web interface. Useful for debugging or development. MIT Go/Docker\nOpenSMTPD - Secure SMTP server implementation from the OpenBSD project. (Source Code) ISC C\nPostfix - Fast, easy to administer, and secure Sendmail replacement. IPL-1.0 C\nSendmail - Message transfer agent (MTA). Sendmail C\nSlimta - Mail Transfer Library built on Python. (Source Code) MIT Python\nStalwart SMTP - Modern SMTP server designed with a focus on security, speed, and extensive configurability. (Source Code) AGPL-3.0 Rust\nvSMTP - Next-gen MTA. Secured, Faster and Greener. (Source Code) GPL-3.0 Rust\n\nCommunication - Email - Mailing Lists and Newsletters^        back to top        ^\nMailing list servers and mass mailing software - one message to many recipients.\n\nDada Mail - Web-based list management system that can be used for announcement lists and&#x2F;or discussion lists. (Source Code) GPL-2.0 Perl\nGray Duck Mail - Self hosted email discussion list management that uses external email providers. (Source Code) GPL-3.0 Docker\nHyperKitty - Open source Django application to provide a web interface to access GNU Mailman v3 archives. (Demo, Source Code) GPL-3.0 Python\nKeila - Self-hosted reliable and easy-to-use newsletter tool. Alternative to proprietary services like Mailchimp or Sendinblue. (Demo, Source Code) AGPL-3.0 Docker\nListmonk - High performance, self-hosted newsletter and mailing list manager with a modern dashboard. (Source Code) AGPL-3.0 Go/Docker\nMailman - The Gnu mailing list server. GPL-3.0 Python\nMailtrain - Self hosted newsletter application. GPL-3.0 Nodejs\nMautic - Mautic is marketing automation software (email, social and more). (Source Code) GPL-3.0 PHP\nphpList - Newsletter and email marketing with advanced management of subscribers, bounces, and plugins. (Source Code) AGPL-3.0 PHP\nPostorius - Web user interface to access GNU Mailman. (Source Code) GPL-3.0 Python\nSchleuder - GPG-enabled mailing list manager with resending-capabilities. (Source Code) GPL-3.0 Ruby\nSympa - Mailing list manager. GPL-2.0 Perl\n\nCommunication - Email - Webmail Clients^        back to top        ^\nWebmail clients.\n\nCypht - Feed reader for your email accounts. (Source Code) LGPL-2.1 PHP\nIMP - HORDE application that provides webmail access to IMAP and POP3 accounts. (Demo, Source Code) GPL-2.0 PHP\nMailCare - Open source disposable email address service. (Source Code) MIT PHP\nRoundcube - Browser-based IMAP client with an application-like user interface. (Source Code) GPL-3.0 PHP\nSnappyMail - Simple, modern, lightweight &amp; fast web-based email client. (It is an actively developed fork of RainLoop). (Demo, Source Code) AGPL-3.0 PHP\nSquirrelMail - Another browser-based IMAP client. (Source Code) GPL-2.0 PHP\n\nCommunication - IRC^        back to top        ^\nIRC communication software.\n\nConvos - Always online web IRC client. (Demo, Source Code) Artistic-2.0 Perl/Docker\nErgo - Modern IRCv3 server written in Go, combining the features of an ircd, a services framework, and a bouncer. (Source Code) MIT Go/Docker\nGlowing Bear - A web frontend for WeeChat. (Demo) GPL-3.0 Nodejs\nInspIRCd - Modular IRC server written in C++ for Linux, BSD, Windows, and macOS. (Source Code) GPL-2.0 C++/Docker\nKiwi IRC - Responsive web IRC client with theming support. (Demo, Source Code) Apache-2.0 Nodejs\nngircd - Free, portable and lightweight Internet Relay Chat server for small or private networks. (Source Code) GPL-2.0 C\nQuassel IRC - Distributed IRC client, meaning that one (or multiple) client(s) can attach to and detach from a central core. (Source Code) GPL-2.0 C++\nRobust IRC - RobustIRC is IRC without netsplits. Distributed IRC server, based on RobustSession protocol. (Source Code) BSD-3-Clause Go\nThe Lounge - Self-hosted web IRC client. (Demo, Source Code) MIT Nodejs/Docker\nUnrealIRCd - Modular, advanced and highly configurable IRC server written in C for Linux, BSD, Windows, and macOS. (Source Code) GPL-2.0 C\nWeechat - Fast, light and extensible chat client. (Source Code) GPL-3.0 C/Docker\nZNC - Advanced IRC bouncer. (Source Code) Apache-2.0 C++\n\nCommunication - SIP^        back to top        ^\nSIP&#x2F;IPBX telephony software.\n\nAsterisk - Easy to use but advanced IP PBX system, VoIP gateway and conference server. (Source Code) GPL-2.0 C\nASTPP - VoIP Billing Solution for Freeswitch. It supports prepaid and postpaid billing with call rating and credit control. It also provides many other features. (Source Code) AGPL-3.0 PHP\nEqivo - Eqivo implements an API layer on top of FreeSWITCH facilitating integration between web applications and voice&#x2F;video-enabled endpoints such as traditional phone lines (PSTN), VoIP phones, webRTC clients etc. (Source Code) MIT Docker/PHP\nFlexisip - A complete, modular and scalable SIP server, includes a push gateway, to deliver SIP incoming calls or text messages on mobile device platforms where push notifications are required to receive information when the app is not active in the foreground. (Source Code) AGPL-3.0 C/Docker\nFreepbx - Web-based open source GUI that controls and manages Asterisk. (Source Code) GPL-2.0 PHP\nFreeSWITCH - Scalable open source cross-platform telephony platform. (Source Code) MPL-2.0 C\nFusionPBX - Open source project that provides a customizable and flexible web interface to the very powerful and highly scalable multi-platform voice switch called FreeSWITCH. (Source Code) MPL-1.1 PHP\nKamailio - Modular SIP server (registrar&#x2F;proxy&#x2F;router&#x2F;etc). (Source Code) GPL-2.0 C\nKazoo - KAZOO is an open-source, highly scalable software platform designed to provide carrier-grade VoIP switch functions and features. (Source Code) MPL-1.1 Erlang\nopenSIPS - OpenSIPS is an Open Source SIP proxy&#x2F;server for voice, video, IM, presence and any other SIP extensions. (Source Code) GPL-2.0 C\nRoutr - A lightweight sip proxy, location server, and registrar for a reliable and scalable SIP infrastructure. (Source Code) MIT Docker/K8S\nSIP3 - VoIP troubleshooting and monitoring platform. (Demo, Source Code) Apache-2.0 Kotlin\nSIPCAPTURE Homer - Troubleshooting and monitoring VoIP calls. (Source Code) AGPL-3.0 Angular/C\nWazo - Full-featured IPBX solution built atop Asterisk with integrated Web administration interface and REST-ful API. (Source Code) GPL-3.0 Python\nYeti-Switch - Transit class4 softswitch(SBC) with integrated billing and routing engine and REST API. (Demo, Source Code) GPL-2.0 C++/Ruby\n\nCommunication - Social Networks and Forums^        back to top        ^\nSocial Networking and Forum software.\n\nAkkoma - Federated microblogging server with Mastodon, GNU social, and ActivityPub compatibility. (Source Code) AGPL-3.0 Elixir/Docker\nAnahita - Open Source Social Networking Framework and Platform. (Source Code) GPL-3.0 PHP\nAnswer - An open-source knowledge-based community software. You can use it to quickly build your Q&amp;A community for product technical support, customer support, user communication, and more. (Source Code) Apache-2.0 Docker/Go\nAsmBB - A fast, SQLite-powered forum engine written in ASM. (Source Code) EUPL-1.2 Assembly\nBibliogram ⚠ - An alternative front-end for Instagram. (Source Code) AGPL-3.0 Nodejs\nBuddycloud - Tools, libraries, services and a community to build user-to-user, group and social messaging into your app. Saves time. Scales up. Supports you. (Source Code) Apache-2.0 Java\nBuddyPress - Powerful plugin that takes your WordPress.org powered site beyond the blog with social-network features like user profiles, activity streams, user groups, and more. (Source Code) GPL-2.0 PHP\nCactus Comments - Cactus Comments is a federated comment system for the open web built on Matrix. (Demo, Source Code) GPL-3.0 Docker/Python\nChirpy - Chirpy is an open-source, privacy-friendly and customizable Disqus (comment system) alternate. (Demo, Source Code) AGPL-3.0 Docker/Nodejs\nCommento - Commento is a discussion platform that you can embed on your blog, news articles, and any place where you want your readers to add comments. MIT Go/Docker\nCoral - A better commenting experience from Vox Media. (Source Code) Apache-2.0 Docker/Nodejs\ndiaspora* - Distributed social networking server. (Source Code) AGPL-3.0 Ruby\nDiscourse - Advanced forum &#x2F; community solution based on Ruby and JS. (Demo, Source Code) GPL-2.0 Docker\nElgg - Powerful open source social networking engine. (Source Code) GPL-2.0 PHP\nEnigma 1&#x2F;2 BBS - Enigma 1&#x2F;2 is a modern, multi-platform BBS engine with unlimited “callers” and legacy DOS door game support. (Demo, Source Code) BSD-2-Clause Shell/Docker/Nodejs\nFlarum - Delightfully simple forums. Flarum is the next-generation forum software that makes online discussion fun again. (Source Code) MIT PHP\nFlaskBB - FlaskBB is forum software written in Python using the microframework Flask. You can easily create new topics, posts and send other users private messages. It also includes basic administration and moderation tools. (Source Code) BSD-3-Clause Python\nFriendica - Social Communication Server. (Source Code) AGPL-3.0 PHP\nGNU social - Social communication software for both public and private communications. (Source Code) AGPL-3.0 PHP/Docker\nGoToSocial - ActivityPub federated social network server implementing the Mastodon client API. AGPL-3.0 Docker/Go\nHubzilla - Decentralized identity, privacy, publishing, sharing, cloud storage, and communications&#x2F;social platform. (Source Code) MIT PHP\nHumHub - Flexible kit for private social networks. (Source Code) AGPL-3.0 PHP\nIsso - Lightweight commenting server written in Python and Javascript. It aims to be a drop-in replacement for Disqus. (Source Code) MIT Python/Docker\nkbin - Federated content aggregator and microblogging platform. (Source Code) AGPL-3.0 PHP/Nodejs/Docker\nLemmy - A link aggregator &#x2F; reddit clone for the fediverse. Reddit alternative built in Rust. (Source Code) AGPL-3.0 Docker/Rust\nLibreddit ⚠ - Private front-end for Reddit written in Rust. AGPL-3.0 Rust\nLoomio - Loomio is a collaborative decision-making tool that makes it easy for anyone to participate in decisions which affect them. (Source Code) AGPL-3.0 Docker\nMastodon - Federated microblogging server, an alternative to GNU social. (Source Code) AGPL-3.0 Ruby\nMisago - Misago is fully featured modern forum application that is fast, scalable and responsive. (Source Code) GPL-2.0 Docker\nMisskey - Decentralized app-like microblogging server&#x2F;SNS for the Fediverse, using the ActivityPub protocol like GNU social and Mastodon. (Source Code) AGPL-3.0 Nodejs/Docker\nMovim - Modern, federated social network based on XMPP, with a fully featured group-chat, subscriptions and microblogging. (Source Code) AGPL-3.0 PHP/Docker\nMyBB - Free, extensible forum software package. (Source Code) LGPL-3.0 PHP\nNitter ⚠ - A alternative front end to twitter. (Source Code) AGPL-3.0 Nimble/Docker\nNodeBB - Forum software built for the modern web. (Source Code) GPL-3.0 Nodejs\nOrange Forum - Orange Forum is an easy to deploy forum that has minimal dependencies and uses very little javascript. (Source Code) BSD-3-Clause Go\nOSSN - Open Source Social Network (OSSN) is a social networking software written in PHP. It allows you to make a social networking website and helps your members build social relationships, with people who share similar professional or personal interests. (Source Code) GPL-2.0 PHP\nphpBB - Flat-forum bulletin board software solution that can be used to stay in touch with a group of people or can power your entire website. (Source Code) GPL-2.0 PHP\nPixelFed - Pixelfed is an open-source, federated platform alternate to Instagram. (Source Code) AGPL-3.0 PHP\nPleroma - Federated microblogging server, Mastodon, GNU social, &amp; ActivityPub compatible. (Source Code) AGPL-3.0 Elixir\nqpixel - Q&amp;A-based community knowledge-sharing software. (Source Code) AGPL-3.0 Ruby\nremark42 - A lightweight and simple comment engine, which doesn’t spy on users. It can be embedded into blogs, articles or any other place where readers add comments. (Demo, Source Code) MIT Docker/Go\nRetrospring - A free, open-source social network following the Q&#x2F;A (question and answer) principle of sites like Formspring, ask.fm or CuriousCat. (Demo) AGPL-3.0 Ruby/Nodejs\nschnack - Schnack is simple self-hosted node app for Disqus-like drop-in commenting on static websites. LIL-1.0 Nodejs\nScoold - Stack Overflow in a JAR. An enterprise-ready Q&amp;A platform with full-text search, SAML, LDAP integration and social login support. (Demo, Source Code) Apache-2.0 Java/Docker/K8S\nSimple Machines Forum - Free, professional grade software package that allows you to set up your own online community within minutes. (Source Code) BSD-3-Clause PHP\nSocialhome - Federated and decentralized profile builder and social network engine. (Demo, Source Code) AGPL-3.0 Docker/Python\nTakahē - Federated microblogging server. Mastodon, &amp; ActivityPub compatible. (Source Code) BSD-3-Clause Docker\nTalkyard - Create a community, where your users can suggest ideas and get questions answered. And have friendly open-ended discussions and chat (Slack&#x2F;StackOverflow&#x2F;Discourse&#x2F;Reddit&#x2F;Disqus hybrid). (Demo, Source Code) AGPL-3.0 Docker/Scala\nTeddit ⚠ - Alternative Reddit front-end focused on privacy. (Source Code) AGPL-3.0 Nodejs/Docker\nThredded - Forums, feature-rich and simple. MIT Ruby\nVanilla Forums - Simple and flexible forum software. (Source Code) GPL-2.0 PHP\nyarn.social - Self-Hosted, Twitter™-like Decentralised micro-logging platform. No ads, no tracking, your content, your data. (Source Code) MIT Go\nZusam - Free and open-source way to self-host private forums for groups of friends or family. (Demo) AGPL-3.0 PHP\n\nCommunication - Video Conferencing^        back to top        ^\nVideo&#x2F;Web Conferencing tools and software.\nRelated: Conference Management\n\nBigBlueButton - Supports real-time sharing of audio, video, slides (with whiteboard controls), chat, and the screen. Instructors can engage remote students with polling, emojis, and breakout rooms. (Demo, Source Code) LGPL-3.0 Java\nGalene - Galène (or Galene) is a videoconference server (an “SFU”) that is easy to deploy and that requires moderate server resources. (Source Code) MIT Go\nJitsi Meet - Jitsi Meet is an OpenSource (MIT) WebRTC Javascript application that uses Jitsi Videobridge to provide high quality, scalable video conferences. (Source Code) Apache-2.0 Nodejs/Docker\nJitsi Video Bridge - WebRTC compatible Selective Forwarding Unit (SFU) that allows for multiuser video communication. (Source Code) Apache-2.0 Java\nLiveKit - Modern, scalable WebRTC conferencing platform with client SDKs. (Demo, Source Code) Apache-2.0 Go\nMiroTalk C2C - Real-time cam-2-cam video calls &amp; screen sharing, end-to-end encrypted, to embed in any website with a simple iframe. (Source Code) MIT Nodejs/Docker\nMiroTalk P2P - Simple, secure, fast real-time video conferences up to 4k and 60fps, compatible with all browsers and platforms. (Demo, Source Code) AGPL-3.0 Nodejs/Docker\nMiroTalk SFU - Simple, secure, scalable real-time video conferences up to 4k, compatible with all browsers and platforms. (Demo, Source Code) AGPL-3.0 Nodejs/Docker\nplugNmeet - Scalable, High Performance, Open source web conferencing system. (Demo, Source Code) MIT Docker/Go\nWirow - A full featured self-hosted video web-conferencing platform. AGPL-3.0 Docker/C\n\nCommunication - XMPP - Servers^        back to top        ^\nExtensible Messaging and Presence Protocol servers.\n\nejabberd - XMPP instant messaging server. (Source Code) GPL-2.0 Erlang/Docker\njackal - XMPP server with focus on stability, simple configuration and low resource consumption. Apache-2.0 Go/Docker\nMetronome IM - Fork of Prosody IM. (Source Code) MIT Lua\nMongooseIM - Mobile messaging platform with a focus on performance and scalability. (Source Code) GPL-2.0 Erlang/Docker/K8S\nOpenfire - Real time collaboration (RTC) server. (Source Code) Apache-2.0 Java\nProsody IM - Feature-rich and easy to configure XMPP server. (Source Code) MIT Lua\nSnikket - All-in-one Dockerized easy XMPP solution, including web admin and clients. (Source Code, Clients) Apache-2.0 Docker\nTigase - XMPP server implementation in Java. (Source Code) GPL-3.0 Java\n\nCommunication - XMPP - Web Clients^        back to top        ^\nExtensible Messaging and Presence Protocol Web clients&#x2F;interfaces.\n\nConverse.js - Free and open-source XMPP chat client in your browser. (Source Code) MPL-2.0 Javascript\nJSXC - Real-time XMPP web chat application with video calls, file transfer and encrypted communication. There are also versions for Nextcloud&#x2F;Owncloud and SOGo. (Source Code) MIT Javascript\nLibervia - Web frontend from Salut à Toi. AGPL-3.0 Python\nSalut à Toi - Multipurpose, multi frontend, libre and decentralized communication tool. (Source Code) AGPL-3.0 Python\n\nCommunity-Supported Agriculture (CSA)^        back to top        ^\nManagement and administration tools for community supported agriculture and food cooperatives.\nRelated: E-commerce\n\nACP Admin - CSA administration. Manage members, subscriptions, deliveries, drop-off locations, member participation, invoices and emails. (Source Code) MIT Ruby\nFoodCoopShop - User-friendly open source software for food-coops. (Source Code) AGPL-3.0 PHP/Docker\nFoodsoft - Web-based software to manage a non-profit food coop (product catalog, ordering, accounting, job scheduling). (Source Code) AGPL-3.0 Docker/Ruby\njuntagrico - Management platform for community gardens and vegetable cooperatives. (Source Code) LGPL-3.0 Python\nLocal Food Nodes - Your open source platform for peoples driven local food markets and CSA. (Source Code) MIT PHP\nOpen Food Network - Online marketplace for local food. It enables a network of independent online food stores that connect farmers and food hubs with individuals and local businesses. (Source Code) AGPL-3.0 Ruby\nOpenOlitor - Administration platform for Community Supported Agriculture groups. (Source Code) AGPL-3.0 Scala\nteikei - A web application that maps out community-supported agriculture based on crowdsourced data. (Demo) AGPL-3.0 Nodejs\n\nConference Management^        back to top        ^\nSoftware for submission of abstracts and preparation&#x2F;management of academic conferences.\n\nConference Organizing Distribution (COD) - Create conference and event websites built on top of Drupal. (Source Code) GPL-2.0 PHP\nfrab - Web-based conference planning and management system. It helps to collect submissions, to manage talks and speakers and to create a schedule. (Source Code) MIT Ruby/Docker\nindico - A feature-rich event management system, made @ CERN, the place where the Web was born. (Demo, Source Code) MIT Python\nosem - Event management tailored to free Software conferences. (Source Code) MIT Ruby/Docker\npretalx - Web-based event management, including running a Call for Papers, reviewing submissions, and scheduling talks. Exports and imports for various related tools. (Source Code) Apache-2.0 Python\n\nContent Management Systems (CMS)^        back to top        ^\nContent Management Systems offer a practical way to setup a website with many features, using third party plugins, themes and functionality that are easy to add and customize.\nRelated: Blogging Platforms, Static Site Generators\n\nAlfresco Community Edition - The open source Enterprise Content Management software that handles any type of content, allowing users to easily share and collaborate on content. (Source Code) LGPL-3.0 Java\nApostrophe - CMS with a focus on extensible in-context editing tools. (Demo, Source Code) MIT Nodejs\nb2evolution CMS - The most integrated CMS ever: b2evolution includes everything you need to build websites for publishing, sharing and interacting with your community. (Source Code) GPL-2.0 PHP\nBackdrop CMS - Comprehensive CMS for small to medium sized businesses and non-profits. (Source Code) GPL-2.0 PHP\nBigTree CMS - Straightforward, well documented, and capable written with PHP and MySQL. (Source Code) LGPL-2.1 PHP\nBludit ⚠ - Simple application to build a site or blog in seconds. Bludit uses flat-files (text files in JSON format) to store posts and pages. (Demo, Source Code) MIT PHP\nBolt CMS - Open source Content Management Tool, which strives to be as simple and straightforward as possible. (Source Code) MIT PHP\nCMS Made Simple - Open source content management system, faster and easier management of website contents, scalable for small businesses to large corporations. (Source Code) GPL-2.0 PHP\nCockpit - Simple Content Platform to manage any structured content. (Source Code) MIT PHP\nConcrete 5 CMS - Open source content management system. (Source Code) MIT PHP\nContao - Contao is a powerful open source CMS that allows you to create professional websites and scalable web applications. (Source Code) LGPL-3.0 PHP\nCouchCMS - Simple Open-Source CMS for designers. (Source Code) CPAL-1.0 PHP\nDrupal - Advanced open source content management platform. (Source Code) GPL-2.0 PHP\neLabFTW - Online lab notebook for research labs. Store experiments, use a database to find reagents or protocols, use trusted timestamping to legally timestamp an experiment, export as pdf or zip archive, share with collaborators…. (Demo, Source Code) AGPL-3.0 PHP\nExpressa - Content Management System for powering database driven websites using JSON schemas. Provides permission management and automatic REST APIs. MIT Nodejs\nFlextype - Flextype is an open-source Hybrid Content Management System with the freedom of a headless CMS and with the full functionality of a traditional CMS. (Source Code) MIT PHP\nJoomla! - Advanced Content Management System (CMS). (Source Code) GPL-2.0 PHP\nKeystoneJS - CMS and Web Application Platform. (Source Code) MIT Nodejs\nMODX - MODX is an advanced content management and publishing platform. The current version is called ‘Revolution’. (Source Code) GPL-2.0 PHP\nNeos - Neos or TYPO3 Neos (for version 1) is a modern, open source CMS. (Source Code) GPL-3.0 PHP\nNoosfero - Noosfero is a web platform for social and solidarity economy networks with blog, e-Portfolios, CMS, RSS, thematic discussion, events agenda and collective intelligence for solidarity economy in the same system. AGPL-3.0 Ruby\nOmeka - Create complex narratives and share rich collections, adhering to Dublin Core standards with Omeka on your server, designed for scholars, museums, libraries, archives, and enthusiasts. (Demo, Source Code) GPL-3.0 PHP\nPayload CMS - Developer-first headless CMS and application framework. (Demo, Source Code) MIT Nodejs\nPico - Stupidly simple, blazing fast, flat file CMS. (Source Code) MIT PHP\nPimcore - Multi-Channel Experience and Engagement Management Platform. (Source Code) GPL-3.0 PHP/Docker\nPlone - Powerful open-source CMS system. (Source Code) ZPL-2.0 Python/Docker\nPropertyWebBuilder - Ultimate Ruby on Rails engine for creating real estate websites. (Source Code) MIT Ruby\nPublify - Simple but full featured web publishing software. (Source Code) MIT Ruby\nRapido - Create your website with Rapido. Edit, publish and share collaborative content. AGPL-3.0 Go\nREDAXO - Simple, flexible and useful content management system (documentation only available in German). (Source Code) MIT PHP/Docker\nRoadiz - Modern CMS based on a node system which can handle many types of services. (Source Code) MIT PHP\nSilverStripe - Easy to use CMS with powerful MVC framework underlying. (Demo, Source Code) BSD-3-Clause PHP\nSPIP - Publication system for the Internet aimed at collaborative work, multilingual environments, and simplicity of use for web authors. (Source Code) GPL-3.0 PHP\nSquidex - Headless CMS, based on MongoDB, CQRS and Event Sourcing. (Demo, Source Code) MIT .NET\nStrapi - The most advanced open-source Content Management Framework (headless-CMS) to build powerful API with no effort. (Source Code) MIT Nodejs\nTextpattern - Flexible, elegant and easy-to-use CMS. (Demo, Source Code) GPL-2.0 PHP\nTypemill - Author-friendly flat-file-cms with a visual markdown editor based on vue.js. (Source Code) MIT PHP\nTYPO3 - Powerful and advanced CMS with a large community. (Source Code) GPL-2.0 PHP\nUmbraco - The friendly CMS. Free and open source with an amazing community. (Source Code) MIT .NET\nWagtail - Django content management system focused on flexibility and user experience. (Source Code) BSD-3-Clause Python\nWinterCMS - Speedy and secure content management system built on the Laravel PHP framework. (Source Code) MIT PHP\nWonderCMS - WonderCMS is the smallest flat file CMS since 2008. (Demo, Source Code) MIT PHP\nWordPress - World’s most-used blogging and CMS engine. (Source Code) GPL-2.0 PHP\n\nDatabase Management^        back to top        ^\nWeb interfaces for database management. Includes tools for database analytics and visualization.\nRelated: Analytics, Automation\nSee also: dbdb.io - Database of Databases\n\nAdminer - Database management in a single PHP file. Available for MySQL, MariaDB, PostgreSQL, SQLite, MS SQL, Oracle, Elasticsearch, MongoDB and others. (Source Code) Apache-2.0/GPL-2.0 PHP\nBaserow - Open source online database tool and Airtable alternative. Create your own database without technical experience. (Source Code) MIT Docker\nBytebase - Safe database schema change and version control for DevOps teams, supports MySQL, PostgreSQL, TiDB, ClickHouse, and Snowflake. (Demo, Source Code) MIT Docker/K8S/Go\nChartbrew - Web application that can connect directly to databases and APIs and use the data to create beautiful charts. (Demo, Source Code) MIT Nodejs/Docker\nCloudBeaver - Self-hosted management of databases, supports PostgreSQL, MySQL, SQLite and more. A web&#x2F;hosted version of DBeaver. (Source Code) Apache-2.0 Docker\nDatabunker - Network-based, self-hosted, GDPR compliant, secure database for personal data or PII. (Source Code) MIT Docker\nDatasette - An open source multi-tool for exploring and publishing data, easy import and export and database management. (Demo, Source Code) Apache-2.0 Python/Docker\nDirectus - An Instant App &amp; API for your SQL Database. Directus wraps your new or existing SQL database with a realtime GraphQL+REST API for developers, and an intuitive admin app for non-technical users. (Source Code) GPL-3.0 Nodejs\nEvidence - Evidence is a code-based BI tool. Write reports using SQL and markdown and they render as a website. (Source Code) MIT Nodejs\nLimbas - Limbas is a database framework for creating database-driven business applications. As a graphical database frontend, it enables the efficient processing of data stocks and the flexible development of comfortable database applications. (Source Code) GPL-2.0 PHP\nMathesar - An intuitive UI for managing data collaboratively, for users of all technical skill levels. Built on Postgres – connect an existing DB or set up a new one. (Demo, Source Code) GPL-3.0 Docker/Python\nMindsDB - MindsDB is an open source self hosted AI layer for existing databases that allows you to effortlessly develop, train and deploy state-of-the-art machine learning models using standard queries. (Source Code) GPL-3.0 Docker/Python\nNocoDB - No-code platform that turns any database into a smart spreadsheet. It can be considered as an Airtable or Smartsheet alternative. (Source Code) GPL-3.0 Nodejs/Docker\n\nDNS^        back to top        ^\nDNS servers and management tools with advertisement blocking funtionality, primarly aimed at home or small networks.\nSee also: awesome-sysadmin&#x2F;DNS - Servers, awesome-sysadmin&#x2F;DNS - Control Panels &amp; Domain Management\n\nAdGuard Home - Free and open source, userfriendly ads &amp; trackers blocking DNS server. (Source Code) GPL-3.0 Docker\nblocky - Fast and lightweight DNS proxy (like Pi-hole) as ad-blocker for local network with many features. Apache-2.0 Go/Docker\nMaza ad blocking - Local ad blocker. Like Pi-hole but local and using your operating system. (Source Code) Apache-2.0 Bash\nPi-hole - A blackhole for Internet advertisements with a GUI for management and monitoring. (Source Code) EUPL-1.2 Shell/PHP\nTechnitium DNS Server - Authoritative&#x2F;recursive DNS server with ad blocking functionality. (Source Code) GPL-3.0 Docker/C#\n\nDocument Management^        back to top        ^\nA document management system (DMS) is a system used to receive, track, manage and store documents and reduce paper.\n\nDOCAT - Host your docs. Simple. Versioned. Fancy. MIT Python/Docker\nDocspell - Auto-tagging document organizer and archive. (Source Code) GPL-3.0 Scala/Java/Docker\nEveryDocs - A simple Document Management System for private use with basic functionality to organize your documents digitally. GPL-3.0 Docker/Ruby\nI, Librarian - I, Librarian can organize PDF papers and office documents. It provides a lot of extra features for students and research groups both in industry and academia. (Demo, Source Code) GPL-3.0 PHP\nMayan EDMS - Free Open Source Electronic Document Management System. An electronic vault for your documents with preview generation, OCR, and automatic categorization among other features. (Source Code) Apache-2.0 Python\nPaperless-ngx - A fork of paperless, adding a new interface and many other changes under the hood. Scan, index, and archive all of your paper documents. (Demo, Source Code) GPL-3.0 Python/Docker\nPapermerge - Open Source Document Management System focused on scanned documents (electronic archives). Features file browsing in similar way to dropbox&#x2F;google drive. OCR, full text search, text overlay&#x2F;selection. (Source Code) Apache-2.0 Python/Docker/K8S\npaper{s}pace - Small web application to manage all your offline documents. Provides a searchable storage for your documents and reminds you of upcoming tasks. (Source Code) MIT Java\nStirling-PDF - Local hosted web application that allows you to perform various operations on PDF files, such as merging, splitting, file conversions and OCR. Apache-2.0 Docker/Java\nTeedy - Lightweight document management system packed with all the features you can expect from big expensive solutions (Ex SismicsDocs). (Demo, Source Code) GPL-2.0 Docker/Java\n\nDocument Management - E-books^        back to top        ^\nEbook library management software.\n\nAtsumeru - Free and open source self-hosted manga&#x2F;comic&#x2F;light novel media server with clients for Windows, Linux, macOS and Android. (Source Code, Clients) MIT Java\nCalibre Web - Web app providing a clean interface for browsing, reading and downloading eBooks using an existing Calibre database. GPL-3.0 Python\nCalibre - E-book library manager that can view, convert, and catalog e-books in most of the major e-book formats and provides a built-in Web server for remote clients. (Demo, Source Code) GPL-3.0 Python\nKavita - Cross-platform e-book&#x2F;manga&#x2F;comic&#x2F;pdf server and web reader with user management, ratings and reviews, and metatdata support. (Demo, Source Code) GPL-3.0 .NET Core/Docker\nKomga - Media server for comics&#x2F;mangas&#x2F;BDs with API and OPDS support, a modern web interface for exploring your libraries, as well as a web reader. (Source Code) MIT Java/Docker\nMango - Manga server and web reader with a built-in MangaDex downloader. MIT Crystal/Docker\npyShelf - Lightweight Ebook Server. GPL-3.0 Python\nStump - A fast, free and open source comics, manga and digital book server with OPDS support. (Source Code) MIT Rust\nTanoshi - Selfhosted web manga reader with extensions. MIT Rust/Docker\nThe Epube - Self-hosted web EPUB reader using EPUB.js, Bootstrap, and Calibre. (Source Code) GPL-3.0 PHP\n\nDocument Management - Institutional Repository and Digital Library Software^        back to top        ^\nInstitutional repository and digital library management software.\n\nDSpace - Turnkey repository application providing durable access to digital resources. (Source Code) BSD-3-Clause Java\nEPrints - Digital document management system with a flexible metadata and workflow model primarily aimed at academic institutions. (Demo, Source Code) GPL-3.0 Perl\nFedora Commons Repository - Robust and modular repository system for the management and dissemination of digital content especially suited for digital libraries and archives, both for access and preservation. (Source Code) Apache-2.0 Java\nInvenioRDM - Highly scalable turn-key research data management platform with a beautiful user experience. (Demo, Source Code, Clients) MIT Python\nIslandora - Drupal module for browsing and managing Fedora-based digital repositories. (Demo, Source Code) GPL-3.0 PHP\nSamvera Hyrax - Front-end for the Samvera framework, which itself is a Ruby on Rails application for browsing and managing Fedora-based digital repositories. (Source Code) Apache-2.0 Ruby\n\nDocument Management - Integrated Library Systems (ILS)^        back to top        ^\nAn integrated library system is an enterprise resource planning system for a library, used to track items owned, orders made, bills paid, and patrons who have borrowed.\nRelated: Content Management Systems (CMS), Archiving and Digital Preservation (DP)\n\nEvergreen - Highly-scalable software for libraries that helps library patrons find library materials, and helps libraries manage, catalog, and circulate those materials. (Source Code) GPL-2.0 PL/pgSQL\nKoha - Enterprise-class ILS with modules for acquisitions, circulation, cataloging, label printing, offline circulation for when Internet access is not available, and much more. (Demo, Source Code) GPL-3.0 Perl\nRERO ILS - Large-scale ILS that can be run as a service with consortial features, intended primarily for library networks. Includes most standard modules (circulation, acquisitions, cataloging,…) and a web-based public and professional interface. (Demo, Source Code) AGPL-3.0 Python/Other\n\nE-commerce^        back to top        ^\nE-commerce software.\nRelated: Community-Supported Agriculture (CSA)\n\nAimeos - Ultra fast, Open Source e-commerce framework for building custom online shops, market places and complex B2B applications scaling to billions of items with Laravel. (Demo, Source Code) LGPL-3.0/MIT PHP\nAttendize - Ticket selling and event management platform. (Source Code) AAL Docker/PHP\nBagisto - Leading Laravel open source e-commerce framework with multi-inventory sources, taxation, localization, dropshipping and more exciting features. (Demo, Source Code) MIT PHP\nCoreShop - CoreShop is a e-commerce plugin for Pimcore. (Source Code) GPL-3.0 PHP\nDrupal Commerce - Drupal Commerce is a popular e-commerce module for Drupal CMS, with support for dozens of payment, shipping, and shopping related modules. (Source Code) GPL-2.0 PHP\nMagento Open Source - Leading provider of open omnichannel innovation. OSL-3.0 PHP\nMailchimp Open Commerce - Customizable, real-time reactive, Javascript commerce platform (formerly Reaction Commerce). (Source Code) GPL-3.0 Nodejs\nMedusaJs - Medusa is an open-source headless commerce engine that enables developers to create amazing digital commerce experiences. (Demo, Source Code) MIT Nodejs\nMicroweber - Drag and Drop CMS and online shop. (Demo, Source Code) Apache-2.0 PHP\nOpen Source POS - Open Source Point of Sale is a web based point of sale system. MIT PHP\nOpenCart - Free open source shopping cart solution. (Source Code) GPL-3.0 PHP\nOXID eShop - OXID eShop is a flexible open source e-commerce software with a wide range of functionalities. (Source Code) GPL-3.0 PHP\nPrestaShop - PrestaShop offers a free, open-source and fully scalable e-commerce solution. (Demo, Source Code) OSL-3.0 PHP\nPretix - Django based ticket sales platform for events. (Source Code) Apache-2.0 Python\ns-cart - S-Cart is a free e-commerce website project for individuals and businesses, built on top of Laravel Framework. (Demo, Source Code) MIT PHP\nSaleor - Django based open-sourced e-commerce storefront. (Demo, Source Code) BSD-3-Clause Docker/Python\nShopware Community Edition - PHP based open source e-commerce software made in Germany. (Demo, Source Code) MIT PHP\nSolidus - A free, open-source ecommerce platform that gives you complete control over your store. (Demo, Source Code) BSD-3-Clause Ruby/Docker\nSpree Commerce - Spree is a complete, modular &amp; API-driven open source e-commerce solution for Ruby on Rails. (Demo, Source Code) BSD-3-Clause Ruby\nSylius - Symfony2 powered open source full-stack platform for eCommerce. (Demo, Source Code) MIT PHP\nThelia - Thelia is an open source and flexible e-commerce solution. (Demo, Source Code) LGPL-3.0 PHP\nVendure - A headless commerce framework. (Demo, Source Code) MIT Nodejs\nWooCommerce - WordPress based e-commerce solution. (Source Code) GPL-3.0 PHP\n\nFederated Identity &amp; Authentication^        back to top        ^\nFederated identity and authentication software.\nPlease visit awesome-sysadmin&#x2F;Identity Management\nFeed Readers^        back to top        ^\nA news aggregator, also termed a feed aggregator, feed reader, news reader, RSS reader, is an application that aggregates web content such as newspapers&#x2F;blogs&#x2F;vlogs&#x2F;podcasts in one location for easy viewing.\n\nBubo Reader - Open source, “irrationally minimal” RSS feed reader. (Demo) MIT Nodejs\nCommaFeed - Google Reader inspired self-hosted RSS reader. (Source Code) Apache-2.0 Java\nFeedpushr - Powerful RSS aggregator, able to transform and send articles to many outputs. Single binary, extensible with plugins. GPL-3.0 Go\nFreshRSS - Self-hostable RSS feed aggregator. (Demo, Source Code, Clients) AGPL-3.0 PHP\nGoeland - Reads RSS&#x2F;Atom feeds and filter&#x2F;digest them to create beautiful emails. MIT Go\nJARR - JARR (Just Another RSS Reader) is a web-based news aggregator and reader (fork of Newspipe). (Demo, Source Code) AGPL-3.0 Python\nKriss Feed - Simple and smart (or stupid) feed reader. CC0-1.0 PHP\nLeed - Leed (for Light Feed) is a Free and minimalist RSS aggregator. AGPL-3.0 PHP\nMiniflux - Miniflux is a minimalist and open source news reader, written in Go and PostgreSQL. (Source Code) Apache-2.0 Go\nNewsBlur - NewsBlur is a personal news reader that brings people together to talk about the world. A new sound of an old instrument. (Source Code) MIT Python\nnewsdash - A news dashboard inspired by iGoogle and Netvibes. AGPL-3.0 Nodejs\nNewspipe - Newspipe is a web news reader. (Demo) AGPL-3.0 Python\nPolitePol - Online tool for creation of RSS feeds for any web page. (Demo) MIT Python\nreader - A Python feed reader web app and library (so you can use it to build your own), with only standard library and pure-Python dependencies. BSD-3-Clause Python\nRSS-Bridge - Generate RSS&#x2F;ATOM feeds for websites which don’t have one. Unlicense PHP\nRSS Fulltext Proxy - Mirrors RSS feeds to return the full content of the items, extracted from the website. MIT Nodejs\nRSS Monster - RSS Monster is an easy to use web-based RSS aggregator and reader compatible with the Fever API, created as an alternative for Google Reader. MIT PHP\nRSS2EMail - Fetches RSS&#x2F;Atom-feeds and pushes new Content to any email-receiver, supports OPML. GPL-2.0 Python\nSelfoss - New multipurpose rss reader, live stream, mashup, aggregation web application. (Source Code) GPL-3.0 PHP\nSismics Reader - Free and open source feeds reader, including all major Google Reader features. (Demo, Source Code) GPL-2.0 Java\nStringer - Work-in-progress self-hosted, anti-social RSS reader. MIT Ruby\nTemboz - Two-column feed reader emphasizing filtering capabilities to manage information overload. MIT Python\nTiny Tiny RSS - Open source web-based news feed (RSS&#x2F;Atom) reader and aggregator. (Demo, Source Code) GPL-3.0 Docker/PHP\nYarr - Yarr (yet another rss reader) is a web-based feed aggregator which can be used both as a desktop application and a personal self-hosted server. MIT Go\n\nFile Transfer &amp; Synchronization^        back to top        ^\nFile transfer, sharing and synchronization software software.\nRelated: Groupware\n\nGit Annex - File synchronization between computers, servers, external drives. (Source Code) GPL-3.0 Haskell\nKinto - Kinto is a minimalist JSON storage service with synchronisation and sharing abilities. (Source Code) Apache-2.0 Python\nNextcloud - Access and share your files, calendars, contacts, mail and more from any device, on your terms. (Demo, Source Code) AGPL-3.0 PHP\nOpenSSH SFTP server - Secure File Transfer Program. (Source Code) BSD-2-Clause C\nownCloud - All-in-one solution for saving, synchronizing, viewing, editing and sharing files, calendars, address books and more. (Source Code, Clients) AGPL-3.0 PHP\nPeergos - Secure and private space online where you can store, share and view your photos, videos, music and documents. Also includes a calendar, news feed, task lists, chat and email client. (Source Code) AGPL-3.0 Java\nPydio - Turn any web server into a powerful file management system and an alternative to mainstream cloud storage providers. (Demo, Source Code) AGPL-3.0 Go\nSamba - Samba is the standard Windows interoperability suite of programs for Linux and Unix. It provides secure, stable and fast file and print services for all clients using the SMB&#x2F;CIFS protocol. (Source Code) GPL-3.0 C\nSeafile - File hosting and sharing solution primary for teams and organizations. (Source Code) GPL-2.0/GPL-3.0/AGPL-3.0/Apache-2.0 C\nSyncthing - Syncthing is an open source peer-to-peer file synchronisation tool. (Source Code) MPL-2.0 Go\nUnison - Unison is a file-synchronization tool for OSX, Unix, and Windows. (Source Code) GPL-3.0 OCaml\n\nFile Transfer - Distributed Filesystems^        back to top        ^\nNetwork distributed filesystems.\nPlease visit awesome-sysadmin&#x2F;Distributed Filesystems\nFile Transfer - Object Storage &amp; File Servers^        back to top        ^\nObject storage is a computer data storage that manages data as objects, as opposed to other storage architectures like file systems which manages data as a file hierarchy, and block storage which manages data as blocks within sectors and tracks.\n\nGarageHQ - An open-source geo-distributed storage service you can self-host to fulfill many needs - S3 compatible. (Source Code) AGPL-3.0 Rust\nMinio - Minio is an open source object storage server compatible with Amazon S3 APIs. (Source Code) AGPL-3.0 Go\nSeaweedFS - SeaweedFS is an open source distributed file system supporting WebDAV, S3 API, FUSE mount, HDFS, etc, optimized for lots of small files, and easy to add capacity. Apache-2.0 Go\nSFTPGo - Flexible, fully featured and highly configurable SFTP server with optional FTP&#x2F;S and WebDAV support. AGPL-3.0 Go\nZenko CloudServer - Zenko CloudServer, an open-source implementation of a server handling the Amazon S3 protocol. (Source Code) Apache-2.0 Nodejs\n\nFile Transfer - Peer-to-peer Filesharing^        back to top        ^\nPeer-to-peer file sharing is the distribution and sharing of digital media using peer-to-peer (P2P) networking technology.\n\nbittorrent-tracker - Simple, robust, BitTorrent tracker (client and server) implementation. (Source Code) MIT Nodejs\nDat Project - Powerful decentralized file sharing applications built from a large ecosystem of modules. (Source Code) MIT Nodejs\nexatorrent - BitTorrent client written in Go that can be run locally or hosted on a remote server, and supports streaming via HTTP. GPL-3.0 Go\ninstant.io - Streaming file transfer over WebTorrent. (Demo) MIT Nodejs\nqBittorrent - Free cross-platform bittorrent client with a feature rich Web UI for remote access. (Source Code) GPL-2.0 C++\nSend - Simple, private, end to end encrypted temporary file sharing, originally built by Mozilla. (Clients) MPL-2.0 Nodejs\nTransmission - Fast, easy, Free Bittorrent client. (Source Code) GPL-3.0 C\n\nFile Transfer - Single-click &amp; Drag-n-drop Upload^        back to top        ^\nSimplified file servers for sharing of one-time&#x2F;short-lived&#x2F;temporary files, providing single-click or drag-and-drop updload functionality.\n\nass - The superior self-hosted ShareX server. For use with clients such as ShareX (Windows), Flameshot (Linux), &amp; MagicCap (Linux, macOS). ISC Nodejs\nelixire - Simple yet advanced screenshot uploading and link shortening service. (Source Code, Clients) AGPL-3.0 Python\nFiles Sharing - Open Source and self-hosted files sharing application based on unique and temporary links. GPL-3.0 PHP\nFileShelter - FileShelter is a self-hosted software that allows you to easily share files over the Internet. GPL-3.0 C++\nGokapi - Lightweight server to share files, which expire after a set amount of downloads or days. Similar to the discontinued Firefox Send, with the difference that only the admin is allowed to upload files. GPL-3.0 Go\ngoploader - Easy file sharing with server-side encryption, curl&#x2F;httpie&#x2F;wget compliant. MIT Go\nGoSƐ - GoSƐ is a modern file-uploader focusing on scalability and simplicity. It only depends on a S3 storage backend and hence scales horizontally without the need for additional databases or caches. (Demo) Apache-2.0 Go\nJirafeau - Jirafeau is a web site permitting to upload a file in a simple way and give an unique link to it. (Demo) AGPL-3.0 PHP\nKleeja - File Upload&#x2F;sharing application, used by thousands of webmasters since 2007. (Source Code) GPL-2.0 PHP\nlufi - Let’s Upload that FIle, client-side encrypted. (Demo, Source Code) AGPL-3.0 Perl\nOnionShare - Securely and anonymously share a file of any size. GPL-2.0 Python\nPairdrop - Local file sharing in your browser. Inspired by Apple’s AirDrop. Fork of Snapdrop. GPL-3.0 Docker\nPicoShare - A minimalist, easy-to-host service for sharing images and other files. (Demo, Source Code) AGPL-3.0 Go\nPicsur - A simple imaging hosting playtfom that allows you to easily host, edit, and share images. GPL-3.0 Docker\nPictShare - PictShare is a multi lingual, open source image hosting service with a simple resizing and upload API. (Source Code) Apache-2.0 PHP\nPingvin Share - A self-hosted file sharing platform that combines lightness and beauty, perfect for seamless and efficient file sharing. (Demo) BSD-2-Clause Docker/Nodejs\nPlik - Plik is a scalable and friendly temporary file upload system. (Demo) MIT Go\nPomf - Pomf is a simple file uploading and sharing platform. MIT PHP\nProjectSend - Upload files and assign them to specific clients you create. Give access to those files to your clients. (Source Code) GPL-2.0 PHP\nPsiTransfer - Simple open source self-hosted file sharing solution with robust up-&#x2F;download-resume and password protection. BSD-2-Clause Nodejs\nQuickShare - Quick and simple file sharing between different devices. LGPL-3.0 Go\nShare - Simple yet advanced uploader - upload files, images and text with moderation tools for admins. Can be used for friends and family or just for you. Integration with ShareX and more. MIT Nodejs\nSharry - Share files easily over the internet between authenticated and anonymous users (both ways) with resumable up- and downloads. GPL-3.0 Scala/Java\nShifter - A simple, self-hosted file-sharing web app, powered by Django. MIT Docker\ntransfer.sh - Easy file sharing from the command line. (Source Code) MIT Go\nUguu - Stores files and deletes after X amount of time. MIT PHP\nUploady - Uploady is a simple file uploader script with multi file upload support. MIT PHP\nVoid - Lightweight, fast and elegant file hosting service for ShareX with Web UI and REST API. (Source Code) MIT Nodejs\nXBackBone - A simple, fast and lightweight file manager with instant sharing tools integration, like ShareX (a free and open-source screenshot utility for Windows). (Source Code) AGPL-3.0 PHP\nZipline - A lightweight, fast and reliable file sharing server that is commonly used with ShareX, offering a react-based Web UI and fast API. MIT Nodejs\n\nFile Transfer - Web-based File Managers^        back to top        ^\nWeb-based file managers.\nRelated: Groupware\n\nApaxy - Theme built to enhance the experience of browsing web directories, using the mod_autoindex Apache module and some CSS to override the default style of a directory listing. (Source Code) GPL-3.0 HTML\ncopyparty - Portable file server with accelerated resumable uploads, deduplication, WebDAV, FTP, zeroconf, media indexer, video thumbnails, audio transcoding, and write-only folders, in a single file with no mandatory dependencies. (Demo) MIT Python\nDirectoryLister - Simple PHP based directory lister that lists a directory and all its sub-directories and allows you to navigate there within. (Source Code) MIT PHP\nfilebrowser - Web File Browser with a Material Design web interface. (Source Code) Apache-2.0 Go\nFileGator - FileGator is a powerful multi-user file manager with a single page front-end. (Demo, Source Code) MIT PHP\nFilestash - A web file manager that lets you manage your data anywhere it is located: FTP, SFTP, WebDAV, Git, S3, Minio, Dropbox, or Google Drive . (Demo, Source Code) AGPL-3.0 Go\nGossa - Gossa is a light and simple webserver for your files. MIT Go\nIFM - Single script file manager. MIT PHP\nminiserve - CLI tool to serve files and dirs over HTTP. MIT Rust\nResourceSpace - ResourceSpace open source digital asset management software is the simple, fast, and free way to organise your digital assets. (Demo, Source Code) BSD-4-Clause PHP\nSurfer - Simple static file server with webui to manage files. MIT Nodejs\nTagSpaces - TagSpaces is an offline, cross-platform file manager and organiser that also can function as a note taking app. The WebDAV version of the application can be installed on top of a WebDAV servers such as Nextcloud or ownCloud. (Demo, Source Code) AGPL-3.0 Nodejs\n\nGames^        back to top        ^\nMultiplayer game servers and browser games.\n\n0 A.D. - A free, open-source game of ancient warfare. (Source Code) MIT/GPL-2.0/Zlib C++/C\nA Dark Room - Minimalist text adventure game for your browser. (Demo) MPL-2.0 HTML5\nEmuLinkerSF - EmuLinkerSF is an open source Kaillera server. Kaillera is a client&#x2F;server system that any emulator can implement to enable netplay over the Internet. (Source Code) GPL-2.0 Java\nHextris - Fast paced HTML5 puzzle game inspired by Tetris. GPL-3.0 HTML5\nLila - The forever free, adless and open source chess server powering lichess.org, with official iOS and Android client apps. (Source Code) AGPL-3.0 Scala\nMindustry - Factorio-like tower defense game. Build production chains to gather more resources, and build complex facilities. (Source Code) GPL-3.0 Java\nMinetest - An open source voxel game engine. Play one of our many games, mod a game to your liking, make your own game, or play on a multiplayer server. (Source Code) LGPL-2.1/MIT/Zlib C++\nMTA:SA ⚠ - Multi Theft Auto (MTA) is a software project that adds network play functionality to Rockstar North’s Grand Theft Auto game series, in which this functionality is not originally found. (Source Code) GPL-3.0 C++\npiqueserver - Server for openspades, the first-person shooter in a destructible voxel world. (Clients) GPL-3.0 Python/C++\nPosio - Geography multiplayer game. MIT Python\nQuakeJS - QuakeJS is a port of ioquake3 to Javascript that can be played in a browser. MIT Nodejs\nQuizmaster - A web-app for conducting a quiz, including a page for players to enter their answers. Apache-2.0 Scala\nRed Eclipse 2 - A FOSS Arena First-Person Shooter Similar to Unreal Tournament. (Source Code) Zlib/MIT/CC-BY-SA-4.0 C/C++\nRomm ⚠ - RomM (Rom Manager) is a web based retro roms manager integrated with IGDB. GPL-3.0 Docker\nTeeworlds - Open source 2D retro multiplayer shooter. (Source Code) Zlib C++\nThe Battle for Wesnoth - The Battle for Wesnoth is an Open Source, turn-based tactical strategy game with a high fantasy theme, featuring both singleplayer and online&#x2F;hotseat multiplayer combat. GPL-2.0 C++\nVeloren - Multiplayer RPG. Open-source game inspired by Cube World, Legend of Zelda, Dwarf Fortress and Minecraft. (Source Code) GPL-3.0 Rust\nWord Mastermind - Wordle clone. A Mastermind-like game, but instead of colors you need to guess words. (Demo) MIT Nodejs\nWordle - An Open Source Wordle game. Guess the Wordle in six tries. Each guess must be a valid five-letter word. (Source Code) MIT Nodejs\nZero-K - Open Source on Springrts engine. Zero-K is a traditional real time strategy game with a focus on player creativity through terrain manipulation, physics, and a large roster of unique units - all while being balanced to support competitive play. (Source Code) GPL-2.0 Lua\n\nGames - Administrative Utilities &amp; Control Panels^        back to top        ^\nUtilities for managing game servers.\n\nARRCON - Terminal-based RCON client compatible with any game servers using the Source RCON Protocol. GPL-3.0 C++\nCrafty Controller - Crafty Controller is a free and open-source Minecraft launcher and manager that allows users to start and administer Minecraft servers from a user-friendly interface. (Source Code) GPL-3.0 Docker/Python\nEasyWI - Easy-Wi is a Web-interface that allows you to manage server daemons like gameservers. In addition it provides you with a CMS which includes a fully automated game- and voiceserver lending service. (Source Code) GPL-3.0 PHP/Bash\nKubek - Web management panel for Minecraft servers. (Source Code) GPL-3.0 Nodejs\nLancache ⚠ - LAN Party game caching made easy. (Source Code) MIT Docker/Shell\nLinuxGSM - CLI tool for deployment and management of dedicated game servers on Linux: more than 120 games are supported. (Source Code) MIT Shell\nLodestone - A free, open source server hosting tool for Minecraft and other multiplayers. AGPL-3.0 Docker/Rust\nPterodactyl - Management panel for game servers, with an intuitive UI for end users. (Source Code) MIT PHP\nPufferPanel - PufferPanel is an open source game server management panel, designed for both small networks and game server providers. (Source Code) Apache-2.0 Go\nRconCli - CLI for executing queries on a remote Valve Source dedicated server using the RCON Protocol. MIT Go\nSourceBans++ - Admin, ban, and communication management system for games running on the Source engine. (Source Code) CC-BY-SA-4.0 PHP\n\nGenealogy^        back to top        ^\nGenealogy software used to record, organize, and publish genealogical data.\n\nGenea.app - Genea is a privacy by design and open source tool anyone can use to author or edit their family tree. Data is stored in the GEDCOM format and all processing is done in the browser. (Source Code) MIT Javascript\nGeneWeb - GeneWeb is an open source genealogy software written in OCaml. It comes with a Web interface and can be used off-line or as a Web service. (Demo, Source Code) GPL-2.0 OCaml\nGramps Web - Web app for collaborative genealogy, based on and interoperable with Gramps, the open source genealogy desktop application. (Demo, Source Code). AGPL-3.0 Docker\nwebtrees - Webtrees is the web’s leading on-line collaborative genealogy application. (Demo, Source Code) GPL-3.0 PHP\n\nGroupware^        back to top        ^\nCollaborative software or groupware is designed to help people working on a common task to attain their goals. Groupware often regroups multiple services such as file sharing, calendar&#x2F;events management, address books… in a single, integrated application.\n\nBlueMind - Groupware with email, calendar, addressbooks, exchange active sync, exchange MAPI protocol support. (Source Code) AGPL-3.0 Java\nCitadel - Groupware including email, calendar&#x2F;scheduling, address books, forums, mailing lists, IM, wiki and blog engines, RSS aggregation and more. (Source Code) GPL-3.0 C\nCorteza - CRM including a unified workspace, enterprise messaging and a low code environment for rapidly and securely delivering records-based management solutions. (Demo, Source Code) Apache-2.0 Go\nCozy Cloud - Personal cloud where you can manage and sync your contact, files and calendars, and manage your budget with an app store full of community contributions. (Source Code) GPL-3.0 Nodejs\negroupware - Software suite including calendars, address books, notepad, project management tools, client relationship management tools (CRM), knowledge management tools, a wiki and a CMS. (Source Code) GPL-2.0 PHP\nEspoCRM - CRM with a frontend designed as a single page application, and a REST API. (Demo, Source Code) GPL-3.0 PHP\nGroup Office - Group-Office is an enterprise CRM and groupware tool. Share projects, calendars, files and e-mail online with co-workers and clients. (Source Code) AGPL-3.0 PHP\nHorde - The Horde Project is about creating high quality Open Source applications and libraries, based on PHP and the Horde Framework. (Demo, Source Code) GPL-2.0 PHP\nHRCloud2 - Full-featured home hosted Cloud Drive, Personal Assistant, App Launcher, File Converter, Streamer, Share Tool and more. GPL-3.0 PHP\nKolab - Kolab community is a unified communication and collaboration system. (Source Code) GPL-2.0/LGPL-2.1/GPL-3.0 C++/Python/PHP\nOpenmeetings - Openmeetings provides video conferencing, instant messaging, white board, collaborative document editing and other groupware tools using API functions of the Red5 Streaming Server for Remoting and Streaming. (Source Code) Apache-2.0 Java\nSOGo - SOGo offers multiple ways to access the calendaring and messaging data. CalDAV, CardDAV, GroupDAV, as well as ActiveSync, including native Outlook compatibility and Web interface. (Demo, Source Code) LGPL-2.1 Objective-C\nSuiteCRM - The award-winning, enterprise-class open source CRM. (Source Code) AGPL-3.0 PHP\ntine - Community Edition - Contacts, Calendar, Tasks, WebDAV, ActiveSync, VoIP, Mail-Client, CRM, Sales, Projects, Timetracker. AGPL-3.0 PHP\nTracim - Collaborative Platform for team collaboration: file,threads,notes,agenda,etc. AGPL-3.0/LGPL-3.0/MIT Python\nZimbra Collaboration - Email, calendar, collaboration server with Web interface and lots of integrations. (Source Code) GPL-2.0/CPAL-1.0 Java\n\nHuman Resources Management (HRM)^        back to top        ^\nA human resources management system combines a number of systems and processes to ensure the easy management of human resources, business processes and data.\n\nadmidio - Admidio is a free open source user management system for websites of organizations and groups. The system has a flexible role model so that it’s possible to reflect the structure and permissions of your organization. (Demo, Source Code) GPL-2.0 PHP\nIceHrm - IceHrm employee management system allows companies to centralize confidential employee information. (Demo, Source Code) Apache-2.0 PHP\nOrangeHRM - OrangeHRM is a comprehensive HRM system that captures all the essential functionalities required for any enterprise. (Demo, Source Code) GPL-2.0 PHP\nTimeOff.Management - Simple yet powerful absence management software for small and medium size business. (Demo, Source Code) MIT Nodejs\n\nInternet of Things (IoT)^        back to top        ^\nInternet of Things describes physical objects with sensors, processing ability, software, and other technologies that connect and exchange data with other devices over the Internet.\n\nDeviceHive - Open Source IoT Platform with a wide range of integration options. (Demo, Source Code) Apache-2.0 Java\nDomoticz - Home Automation System that lets you monitor and configure various devices like: Lights, Switches, various sensors&#x2F;meters like Temperature, Rain, Wind, UV, Electra, Gas, Water and much more. (Source Code, Clients) GPL-3.0 C/C++\nEMQX - An ultra-scalable open-source MQTT broker. Connect 100M+ IoT devices in one single cluster, move and process real-time IoT data with 1M msg&#x2F;s throughput at 1ms latency. (Demo, Source Code) Apache-2.0 Docker/Erlang\nFHEM - FHEM is used to automate common tasks in the household like switching lamps and heating. It can also be used to log events like temperature or power consumption. You can control it via web or smartphone frontends, telnet or TCP&#x2F;IP directly. (Source Code) GPL-3.0 Perl\nFlowForge - FlowForge allows companies to deploy Node-RED applications in a reliable, scalable and secure manner. The FlowForge platform provides DevOps capabilities for Node-RED development teams. (Source Code) Apache-2.0 Nodejs/Docker/K8S\nGladys - Gladys is a privacy-first, open-source home assistant. (Source Code) Apache-2.0 Nodejs\nHome Assistant - Open-source home automation platform. (Demo, Source Code) Apache-2.0 Python\nioBroker - Integration platform for the Internet of Things, focused on building automation, smart metering, ambient assisted living, process automation, visualization and data logging. (Source Code) MIT Nodejs\nNode RED - Browser-based flow editor that helps you wiring hardware devices, APIs and online services to create IoT solutions. (Source Code) Apache-2.0 Nodejs\nopenHAB - Vendor and technology agnostic open source software for home automation. (Source Code) EPL-2.0 Java\nOpenRemote - Open-Source IoT Platform - IoT Asset management, Flow Rules and WHEN-THEN rules, Data visualization, Edge Gateway. (Demo, Source Code) AGPL-3.0 Java\nSIP Irrigation Control - Open source software for sprinkler&#x2F;irrigation control. (Source Code) GPL-3.0 Python\nThingsboard - Open-source IoT Platform - Device management, data collection, processing and visualization. (Demo, Source Code) Apache-2.0 Java\nWebThings Gateway - WebThings is an open source implementation of the Web of Things, including the WebThings Gateway and the WebThings Framework. (Source Code) MPL-2.0 Nodejs\n\nInventory Management^        back to top        ^\nInventory management software.\nRelated: Money, Budgeting &amp; Management, Resource Planning, Resource Planning - Enterprise Resource Planning\nSee also: awesome-sysadmin&#x2F;IT Asset Management\n\nInventaire - Collaborative resources mapper project, while yet only focused on exploring books mapping with wikidata and ISBNs. (Source Code) AGPL-3.0 Nodejs\nInventree - InvenTree is an open-source inventory management system which provides intuitive parts management and stock control. (Demo, Source Code) MIT Python\nPartKeepr - PartKeepr is an electronic part inventory management software. It helps you to keep track of your available parts and assist you with re-ordering parts. (Demo, Source Code) GPL-3.0 PHP\n\nKnowledge Management Tools^        back to top        ^\nKnowledge management is the collection of methods relating to creating, sharing, using and managing the knowledge and information.\nRelated: Note-taking &amp; Editors, Wikis, Database Management\n\nAtomic Server - Knowledge graph database with documents (similar to Notion), tables, search, and a powerful linked data API. Lightweight, very fast and no runtime dependencies. (Demo) MIT Docker/Rust\nMindmaps - Open source, offline capable, mind mapping application. (Demo) AGPL-3.0 HTML5\nMy Mind - Web application for creating and managing mind maps. (Demo) MIT Javascript\nTeamMapper - Host and create your own mindmaps. Share your mindmap sessions with your team and collaborate live on mindmaps. (Demo) MIT Docker/Nodejs\n\nLearning and Courses^        back to top        ^\nTools and software to help with education and learning.\n\nCanvas LMS - Canvas is the trusted, open-source learning management system (LMS) that is revolutionizing the way we educate. (Demo, Source Code) AGPL-3.0 Ruby\nChamilo LMS - Chamilo LMS allows you to create a virtual campus for the provision of online or semi-online training. (Source Code) GPL-3.0 PHP\nDalton Plan - Dalton Plan is a modern adoption of a free teaching method developed by Helen Parkhurst in the 20th century. (Source Code) AGPL-3.0 PHP\nedX - The Open edX platform is open-source code that powers edX.org. (Source Code) AGPL-3.0 Python\nGibbon - The flexible, open source school management platform designed to make life better for teachers, students, parents and leaders. (Source Code) GPL-3.0 PHP\nILIAS - ILIAS is the Learning Management System that can cope with anything you throw at it. (Demo, Source Code) GPL-3.0 PHP\nMahara - Open Source fully featured web application to build students electronic portfolio. (Source Code) GPL-3.0 PHP\nMoodle - Moodle is a learning and courses platform with one of the largest open source communities worldwide. (Demo, Source Code) GPL-3.0 PHP\nOpen eClass - Open eClass is an advanced e-learning solution that can enhance the teaching and learning process. (Demo, Source Code) GPL-2.0 PHP\nOpenOLAT - OpenOLAT is a web-based learning management system for teaching, education, assessment and communication. (Demo, Source Code) Apache-2.0 Java\nRELATE - RELATE is a web-based courseware package, includes features such as: flexible rules, statistics, multi-course support, class calendar. (Source Code) MIT Python\nRosarioSIS - RosarioSIS, free Student Information System for school management. (Demo, Source Code) GPL-2.0 PHP\n\nMaps and Global Positioning System (GPS)^        back to top        ^\nMaps, cartography, GIS and GPS software.\nSee also: awesome-openstreetmap, awesome-gis\n\nBicimon - Bike Speedometer as Progressive Web App. (Demo) MIT HTML5\nGeo2tz - Get the timezone from geo coordinates (lat, lon). MIT Go/Docker\nGraphHopper - Fast routing library and server using OpenStreetMap. (Source Code) Apache-2.0 Java\nH3 Viewer - View&#x2F;search Uber H3 (Hexagonal Hierarchical Spatial Index) cells on a map. (Demo) Apache-2.0 HTML5\nHauk - Easy to setup location sharing platform that lets you temporarily share your location with anyone in real-time. (Demo) Apache-2.0 PHP\nMapBBCodeShare - Tool for sharing custom OSM maps. Support for annotated markers, polygons, lines, multi-format import&#x2F;export, multiple layers, shortlinks. (Demo) WTFPL PHP\nNominatim - Server application for geocoding (address -&gt; coordinates) and reverse geocoding (coordinates -&gt; address) on OpenStreetMap data. (Source Code) GPL-2.0 C\nOpen Source Routing Machine (OSRM) - High performance routing engine designed to run on OpenStreetMap data and offering an HTTP API, C++ library interface, and Nodejs wrapper. (Demo, Source Code) BSD-2-Clause C++\nOpenGTS - Entry-level fleet tracking system. Supports variety of tracking devices and protocols. Comes with rich web-interface and reporting features. (Demo, Source Code) Apache-2.0 Java\nOpenStreetMap - Collaborative project to create a free editable map of the world. (Source Code, Clients) GPL-2.0 Ruby\nOpenTripPlanner - Multimodal trip planning software based on OpenStreetMap data and consuming published GTFS-formatted data to suggest routes using local public transit systems. (Source Code) LGPL-3.0 Java/Javascript\nOwnTracks Recorder ⚠ - Store and access data published by OwnTracks location tracking apps. GPL-2.0 C/Lua\nTileServer GL - Vector and raster maps with GL styles. Server side rendering by Mapbox GL Native. Map tile server for Mapbox GL JS, Android, iOS, Leaflet, OpenLayers, GIS via WMTS, etc. (Source Code) BSD-2-Clause Nodejs\nTileServer PHP - Serve map tiles from any PHP hosting. (Source Code) BSD-2-Clause PHP\nTraccar - Java application to track GPS positions. Supports loads of tracking devices and protocols, has an Android and iOS App. Has a web interface to view your trips. (Demo, Source Code) Apache-2.0 Java\nμlogger - Collect geolocation from users in real-time and display their GPS tracks on a website. (Demo) GPL-3.0 PHP\n\nMedia Streaming^        back to top        ^\nStreaming media is multimedia that is delivered and consumed in a continuous manner from a source, with little or no intermediate storage in network elements.\nPlease visit Media streaming - Audio Streaming, Media streaming - Multimedia Streaming, Media streaming - Video Streaming\nSee also: List of streaming media systems - Wikipedia, Comparison of streaming media systems - Wikipedia\nMedia Streaming - Audio Streaming^        back to top        ^\nAudio streaming tools and software.\n\nAirsonic Advanced - Open-source web-based media streamer and jukebox based on Airsonic, with several key performance and feature enhancements. GPL-3.0 Java\nAmpache - Web based audio&#x2F;video streaming application. (Demo, Source Code) AGPL-3.0 PHP\nAudiobookshelf - Fully open-source self-hosted audiobook and podcast server. It streams all audio formats, keeps and syncs progress across devices. Comes with open-source apps for Android and iOS. (Source Code, Clients) GPL-3.0 Docker/Nodejs\nAudioserve - Simple personal server to serve audio files from directories (audiobooks, music, podcasts…). Focused on simplicity and supports sync of play position between clients. MIT Rust\nAzuraCast - A modern and accessible self-hosted web radio management suite. (Source Code) Apache-2.0 PHP\nBeets - Music library manager and MusicBrainz tagger (command-line and Web interface). (Source Code) MIT Python\nBlack Candy - Music streaming server built with Rails and Stimulus. MIT Ruby\nBsimp - Minimalistic S3-backed audio library. Apache-2.0 Go\neuterpe - Self-hosted music streaming server with RESTful API and Web interface. (Demo, Source Code) GPL-3.0 Go\nFunkwhale - Modern, web-based, convivial, multi-user and free music server. BSD-3-Clause Python/Django\nGNU FM - Running music community websites, alternative to last.fm. (Source Code) AGPL-3.0 PHP\ngonic - Lightweight music streaming server. Subsonic compatible. GPL-3.0 Go\nkoel - Personal music streaming server that works. (Demo, Source Code) MIT PHP\nLibreTime - Simple, open source platform that lets you broadcast streaming radio on the web (fork of Airtime). (Source Code) AGPL-3.0 PHP\nLMS - Access your self-hosted music using a web interface. GPL-3.0 C++\nMaloja - Self-hosted music scrobble database, alternative to Last.fm. (Demo) GPL-3.0 Python/Docker\nmoOde Audio - Audiophile-quality music playback for the wonderful Raspberry Pi family of single board computers. (Source Code) GPL-3.0 PHP\nMopidy - Extensible music server. Offers a superset of the mpd API, as well as integration with 3rd party services like Spotify, SoundCloud etc. (Source Code) Apache-2.0 Python\nmpd - Daemon to remotely play music, stream music, handle and organize playlists. Many clients available. (Source Code, Clients) GPL-2.0 C++\nmStream - Music streaming server with GUI management tools. Runs on Mac, Windows, and Linux. (Source Code) GPL-2.0 Nodejs\nmusikcube - Streaming audio server with Linux&#x2F;macOS&#x2F;Windows&#x2F;Android clients. (Source Code) BSD-3-Clause C++\nNavidrome Music Server - Modern Music Server and Streamer, compatible with Subsonic&#x2F;Airsonic. (Demo, Source Code, Clients) GPL-3.0 Docker/Go\nPolaris - Music browsing and streaming application optimized for large music collections, ease of use and high performance. MIT Rust\nRaveberry - A multi-user music server with a focus on participation. (Demo) LGPL-3.0 Python\nSnapcast - Synchronous multiroom audio server. GPL-3.0 C++\nStretto - Music player with Youtube&#x2F;Soundcloud import and iTunes&#x2F;Spotify discovery. (Demo, Clients) MIT Nodejs\nSupysonic - Python implementation of the Subsonic server API. AGPL-3.0 Python\nSwingMusic - Swing Music is a beautiful, self-hosted music player and streaming server for your local audio files. Like a cooler Spotify … but bring your own music. (Source Code) MIT Python\nvod2pod-rss ⚠ - Convert YouTube and Twitch channels to podcasts, no storage required. Transcodes VoDs to MP3 192k on the fly, generates an RSS feed to use in podcast clients. MIT Docker\nVolumio - A free and open source linux distribution, designed and fine-tuned exclusively for music playback. (Source Code) GPL-3.0 Nodejs\n\nMedia Streaming - Multimedia Streaming^        back to top        ^\nMultimedia streaming tools and software.\n\nDim - Dim is a self-hosted media manager fueled by dark forces. With minimal setup, Dim will organize and beautify your media collections, letting you access and play them anytime from anywhere. GPL-2.0 Rust\nGerbera - Gerbera is an UPnP Media Server. It allows you to stream your digital media throughout your home network and listen to&#x2F;watch it on a variety of UPnP compatible devices. (Source Code) GPL-2.0 C++\nhomehost ⚠ - Self-hosted React + Redux app that streams your media collection (music, movies, books, podcasts, comics etc). MIT Nodejs\nIcecast 2 - Streaming audio&#x2F;video server which can be used to create an Internet radio station or a privately running jukebox and many things in between. (Source Code, Clients) GPL-2.0 C\nJellyfin - Media server for audio, video, books, comics, and photos with a sleek interface and robust transcoding capabilities. Almost all modern platforms have clients, including Roku, Android TV, iOS, and Kodi. (Demo, Source Code) GPL-2.0 C#\nKaraoke Eternal - Host awesome karaoke parties where everyone can easily find and queue songs from their phone’s browser. The player is also fully browser-based with support for MP3+G, MP4 and WebGL visualizations. (Source Code) ISC Nodejs\nKodi - Multimedia&#x2F;Entertainment center, formerly known as XBMC. Runs on Android, BSD, Linux, macOS, iOS and Windows. (Source Code) GPL-2.0 C++\nLBRY - Is a secure, open, and community-run digital marketplace that aims to replace Youtube and Amazon. (Demo, Source Code, Clients) MIT PHP\nMistServer - Streaming media server that works well in any streaming environment. (Source Code) AGPL-3.0 C++\nNymphCast - NymphCast is a Chromecast alternative which turns your choice of Linux-capable hardware into an audio and video source for a television or powered speakers. (Source Code) BSD-3-Clause C++\nPodify - Allows you to download videos and audio from any source supported by youtube-dl and subscribe to and watch these downloads using your favorite podcast app. (Source Code) GPL-3.0 Ruby\nReadyMedia - Simple media server software, with the aim of being fully compliant with DLNA&#x2F;UPnP-AV clients. Formerly known as MiniDLNA. (Source Code) GPL-2.0 C\nRygel - Rygel is a UPnP AV MediaServer that allows you to easily share audio, video, and pictures. Media player software may use Rygel to become a MediaRenderer that may be controlled remotely by a UPnP or DLNA Controller. (Source Code) GPL-3.0 C\nSheetAble - Self-hosted music sheet organizing software for all music enthusiasts. Upload and organize your sheets for any kind of instrument. (Source Code) AGPL-3.0 Go\nStash - A web-based library organizer and player for your adult media stash, with auto-tagging and metadata scraping support. (Source Code) AGPL-3.0 Go\nµStreamer - Lightweight and very quick server to stream MJPEG video from any V4L2 device to the net. GPL-3.0 C\nüWave ⚠ - Self-hosted collaborative listening platform. Users take turns playing media—songs, talks, gameplay videos, or anything else—from a variety of media sources like YouTube and SoundCloud. (Demo, Source Code) MIT Nodejs\n\nMedia Streaming - Video Streaming^        back to top        ^\nVideo streaming tools and software.\n\nBluecherry - Closed-circuit television (CCTV) software application which supports IP and Analog cameras. (Source Code) GPL-2.0 PHP\ncmyflix ⚠ - Self-hosted, super lightweight Netflix alternative. AGPL-3.0 C\nCyTube - CyTube is a web application providing media synchronization, chat, and more for an arbitrary number of channels. (Demo) MIT Nodejs\nFrigate - Monitor your security cameras with locally processed AI. (Source Code) MIT Docker/Python/Nodejs\nInvidious ⚠ - Invidious is an alternative front-end to YouTube. (Demo) AGPL-3.0 Crystal\nKerberos.io - Kerberos.io is a video surveillance solution, which works with any camera and on every Linux based machine (Raspberry Pi, Docker, Kubernetes cluster). (Demo, Source Code) MIT Docker\nMediaCMS - MediaCMS is a modern, fully featured open source video and media CMS, written in Python&#x2F;Django&#x2F;React, featuring a REST API. (Source Code) AGPL-3.0 Python/Docker\nOblecto ⚠ - Media server for Movies and TV Shows with a responsive Vue.js frontend. It has robust transcoding support as well as federation capabilities to share your library with your friends. AGPL-3.0 Nodejs\nOddworks - Oddworks is an open source video distribution platform built to destroy the barriers to streaming television with SDKs for Roku, Apple iOS&#x2F;tvOS, Google Android, and Amazon FireTV. MIT Nodejs\nOlaris - Olaris is an open-source, community driven, media manager and transcoding server. GPL-3.0 Go\nOpen Streaming Platform - Self-Hosted alternative to Twitch and Youtube Live for live and on-demand video streaming. (Source Code) MIT Python\nOvenMediaEngine - OvenMediaEngine is a selfhostable Open-Source Streaming Server with Sub-Second Latency. (Demo, Source Code) GPL-3.0 C++\nOwncast - Owncast is an open source, self-hosted, decentralized, single user live video streaming and chat server for running your own live streams similar in style to the large mainstream options. MIT Go\nPeerTube - Decentralized video streaming platform using P2P (BitTorrent) directly in the web browser. (Source Code) AGPL-3.0 Nodejs\nRadium - Synced stream and video playback with VOD capabilities utilizing HLS. Developed for movie nights but has many use cases. MIT Nodejs/Docker\nRapidbay - Self-hosted torrent videostreaming service&#x2F;torrent client that allows searching and playing videos from torrents in the browser or from a Chromecast&#x2F;AppleTV&#x2F;Smart TV. MIT Python/Docker\nRestreamer - Restreamer allows you to do h.264 real-time video streaming on your website without a streaming provider. (Source Code) Apache-2.0 Nodejs/Docker\nShinobiCE - Open Source CCTV software written in Node with both IP and local camera support. AGPL-3.0/GPL-3.0 Nodejs\nSRS - A simple, high efficiency and real-time video server, supports RTMP, WebRTC, HLS, HTTP-FLV and SRT. (Source Code) MIT Docker/C++\nStreama - Self hosted streaming media server. MIT Java\nSyncTube - Lightweight and very simple to setup CyTube alternative to watch videos with friends and chat. MIT Nodejs/Haxe\nTube - Youtube-like (without censorship and features you don’t need!) Video Sharing App written in Go which also supports automatic transcoding to MP4 H.265 AAC, multiple collections and RSS feed. (Demo) MIT Go\nVideoLAN Client (VLC) - Cross-platform multimedia player client and server supporting most multimedia files as well as DVDs, Audio CDs, VCDs, and various streaming protocols. (Source Code) GPL-2.0 C\nZoneminder - Closed-circuit television (CCTV) software application which supports IP, USB and Analog cameras. (Source Code) GPL-2.0 PHP\n\nMiscellaneous^        back to top        ^\nSoftware that does not fit in another section.\n\n2FAuth - A web app to manage your Two-Factor Authentication (2FA) accounts and generate their security codes. (Demo) AGPL-3.0 PHP\nAlertHub ⚠ - AlertHub is a simple tool to get alerted from GitHub releases. MIT Nodejs\nAnchr - Anchr is a toolbox for tiny tasks on the internet, including bookmark collections, URL shortening and (encrypted) image uploads. (Source Code) GPL-3.0 Nodejs\nApache Solr - Solr is the popular, blazing-fast, open source enterprise search platform built on Apache Lucene. (Source Code) Apache-2.0 Java\nasciiflow - Flow Diagram Drawing Tool. (Source Code) MIT Nodejs\nasciinema - Web app for hosting asciicasts. (Demo) Apache-2.0 Elixir/Docker\nCapRover - Build your own PaaS in a few minutes. (Demo, Source Code) Apache-2.0 Docker/Nodejs\nchangedetection.io - Self-hosted tool for staying up-to-date with web-site content changes. Apache-2.0 Python/Docker\nCloudlog - Cloudlog is a self-hosted PHP application that allows you to log your amateur radio contacts anywhere. (Source Code) MIT PHP\nCUPS - The Common Unix Print System uses Internet Printing Protocol (IPP) to support printing to local and network printers. (Source Code) GPL-2.0 C\nCyberChef - Perform all manner of operations within a web browser such as AES, DES and Blowfish encryption and decryption, creating hexdumps, calculating hashes, and much more. (Demo) Apache-2.0 Javascript\nDailyTxT - Encrypted Diary Web-App to save your personal memories of each day. Includes a search-function and encrypted file-upload. MIT Python\nDomainMOD - Application to manage your domains and other internet assets in a central location. DomainMOD includes a Data Warehouse framework that allows you to import your WHM&#x2F;cPanel web server data so that you can view, export, and report on your data. (Demo, Source Code) GPL-3.0 PHP\nDOMJudge - A system for running a programming contest, like the ICPC regional and world championship programming contests. (Demo, Source Code) GPL-2.0/BSD-3-Clause/MIT PHP\nF-Droid - Server tools for maintaining an F-Droid repository system. (Source Code) AGPL-3.0 Python/Docker\nFlagsmith - Flagsmith provides a dashboard, API and SDKs for adding Feature Flags to your applications. Alternative to LaunchDarkly. (Source Code) BSD-3-Clause Docker\nGO Feature Flag - Simple, complete, and lightweight feature flag solution. Alternative to LaunchDarkly. (Source Code) MIT Go\ngoogle-webfonts-helper ⚠ - Hassle-Free Way to Self-Host Google Fonts. Get eot, ttf, svg, woff and woff2 files + CSS snippets. (Demo) MIT Nodejs\nGophish - Gophish is a powerful, open-source phishing framework that makes it easy to test your organization’s exposure to phishing. (Source Code) MIT Go/Docker\ngraph-vl - Identity document verification using Machine Learning and GraphQL. MIT Python\nIconCaptcha - IconCaptcha is a self-hosted, fast, simple and user-friendly captcha for PHP. (Source Code) MIT PHP\nJellyseerr - A free and open source software application for managing requests for your media library. It is a a fork of Overseerr built to bring support for Jellyfin &amp; Emby media servers. MIT Docker\nJournal - Simple journaling with encrypted entries and sharing capabilities. MIT Ruby\nKasm Workspaces - Streaming containerized apps and desktops to end-users. Examples include Ubuntu in your browser, or simply single apps such as Chrome, OpenOffice, Gimp, Filezilla etc. (Demo, Source Code) GPL-3.0 Docker\nKing Phisher - King Phisher is a tool for testing and promoting user awareness by simulating real world phishing attacks. BSD-3-Clause Python\nKoillection - Koillection is a service allowing users to manage any kind of collections. (Source Code) MIT PHP\nLama-Cleaner ⚠ - A free and open-source inpainting tool powered by SOTA AI model. Apache-2.0 Python/Docker\nLibre Translate - Free and Open Source Machine Translation API, entirely self-hosted. (Source Code) AGPL-3.0 Docker/Python\nMailyGo - MailyGo is a small tool written in Go that allows to send HTML forms, for example from static websites without a dynamic backend, via email. MIT Go\nMere Medical ⚠ - With Mere Medical, you can finally manage all of your medical records from Epic MyChart, Cerner, and OnPatient patient portals in one place. Privacy-focused, self-hosted, and offline-first. (Demo, Source Code) GPL-3.0 Docker/Nodejs\nMonica - Personal relationship manager, and a new kind of CRM to organize interactions with your friends and family. (Source Code) AGPL-3.0 PHP\nmosparo - The modern spam protection tool. It replaces other captcha methods with a simple and easy to use spam protection solution. (Source Code) MIT PHP\nMusical Artifacts - Helping to catalog, preserve and free the artifacts you need to produce music. (Source Code) MIT Ruby\nMyPaas - Run your own PaaS using Docker, Traefik, and great monitoring. BSD-2-Clause Python/Docker\nNATS - Publish&#x2F;Subscribe event bus, durable queues, key-value store, object store, and more. Native multi-tenancy, multiple authentication and authorization mechanisms. Easy to self-host and federate. (Source Code, Clients) Apache-2.0 Go\nNeko - A self hosted virtual browser (rabb.it clone) that runs in Docker. (Source Code) Apache-2.0 Docker/Go\nNoisedash - Self-hostable web tool for generating ambient noises&#x2F;sounds using audio tools and user-uploadable samples. AGPL-3.0 Nodejs\nNotica - Lets you send browser notifications from your terminal to your desktop or phone. No installation or registration is required. (Source Code) MIT Nodejs\nOctave Online - Infrastracture behind a web UI for GNU Octave, the libre alternative to MATLAB. (Source Code) AGPL-3.0 Docker/Nodejs\nOmbi - A content request system for Plex&#x2F;Emby, connects to SickRage, CouchPotato, Sonarr, with a growing feature set. (Demo, Source Code) GPL-2.0 C#\nOpen-Meteo - Open-source weather API with open-data forecasts, historical and climate data from all major national weather services. (Demo, Source Code) AGPL-3.0 Docker\nOpenZiti - Fully-featured, self-hostable, zero trust, full mesh overlay network. Includes a 2FA support out of the box, clients for all major desktop&#x2F;mobile OS’es. (Source Code) Apache-2.0 Go\nOS.js - Desktop implementation for your browser with a fully-fledged window manager, Application APIs, GUI toolkits and filesystem abstraction. (Demo, Source Code) BSD-2-Clause Nodejs\nOTS-Share - A self-hosting app to share secrets with file support upto 1MB. MIT Docker\nOverseerr ⚠ - Overseerr is a free and open source software application for managing requests for your media library. It integrates with your existing services, such as Sonarr, Radarr, and Plex!. (Source Code) MIT Docker\nPassCheck - A web application featuring some handy password tools, including a password generator, strength checker and HaveIBeenPwned breach checker. (Source Code) MIT Javascript\npenpot - A web based design and prototyping platform meant for cross-domain teams. (Source Code) MPL-2.0 Docker\nPOMjs - Random Password Generator. (Source Code) GPL-2.0 Javascript\nReactive Resume - A one-of-a-kind resume builder that keeps your privacy in mind. Completely secure, customizable, portable, open-source and free forever. (Demo, Source Code) MIT Docker/Nodejs\nReadflow - Lightweight news reader with modern interface and features: full-text search, automatic categorization, archiving, offline support, notifications… (Source Code) MIT Go\nReleaseBell - Send release notifications for starred Github repos. (Source Code) MIT Nodejs\nrevealjs - Framework for easily creating beautiful presentations using HTML. (Demo, Source Code) MIT Javascript\nRevive Adserver - World’s most popular free, open source ad serving system. Formerly known as OpenX Adserver and phpAdsNew. (Source Code) GPL-2.0 PHP\nSANE Network Scanning - Allow remote clients to access image acquisition devices (scanners) available on the local host. (Source Code) GPL-2.0 C\nSpeed Test by OpenSpeedTest™ - Free &amp; Open-Source HTML5 Network Performance Estimation Tool. (Source Code) MIT Docker\nstring.is - An open-source, privacy-friendly online string toolkit for developers. (Source Code) AGPL-3.0 Nodejs\nTeleport - Certificate authority and access plane for SSH, Kubernetes, web applications, and databases. (Source Code) Apache-2.0 Go\nTeslaMate - A powerful data logger for Tesla vehicles. MIT Elixir\ntmate - Instant terminal sharing. (Source Code) ISC C\nUpsnap - A simple Wake on LAN (WOL) dashboard app. Wake up devices on your network and see current status. MIT Svelte/Go/Docker\nVanDAM - Digital asset manager for 3d print files; STL, OBJ, 3MF and more. MIT Ruby/Docker\nViMbAdmin - Provides a web based virtual mailbox administration system to allow mail administrators to easily manage domains, mailboxes and aliases. (Source Code) GPL-3.0 PHP\nWallabag - Wallabag, formerly Poche, is a web application allowing you to save articles to read them later with improved readability. (Source Code) MIT PHP\nWeeWX - Open source software for your weather station. (Demo, Source Code) GPL-3.0 Python\nWeTTY - Terminal in browser over http&#x2F;https. (Source Code) MIT Docker/Nodejs\n\nMoney, Budgeting &amp; Management^        back to top        ^\nMoney management and budgeting sofware.\nRelated: Inventory Management, Resource Planning - Enterprise Resource Planning\n\nActual - Actual is a local-first personal finance tool based on zero-sum budgeting. It support synchronization across devices, custom rules, manual transaction importing (from QIF, OFX, and QFX files), and optional automatic synchronization with many banks. (Source Code) MIT Nodejs\nAkaunting - Akaunting is a free, online and open source accounting software designed for small businesses and freelancers. (Source Code) GPL-3.0 PHP\nBigcapital - A self-hosted financial accounting and inventory management software for small to medium businesses. (Source Code) AGPL-3.0 Docker\nBitcart - A self-hosted cryptocurrencies payment processor and development platform. (Demo, Source Code) MIT Docker/Python/Nodejs\nBTCPay Server - A self-hosted Bitcoin and other cryptocurrencies payment processor. (Demo, Source Code) MIT C#\nBudget Zen - End-to-end encrypted and simple expense manager. (Demo, Source Code) AGPL-3.0 Deno\nbudgetzero - Free, self-hosted, open-source, envelope-budgeting web and desktop app. (Demo) AGPL-3.0 Nodejs\nCrater - Free &amp; Open Source Invoice App for Freelancers &amp; Small Businesses. (Demo) AAL PHP\nDePay - Accept Web3 Payments directly into your wallet. Peer-to-peer, free, self-hosted &amp; open-source. (Demo, Source Code) MIT Nodejs\nFamily Accounting Tool - Web-based finance management tool for partners with partially shared expenses. Apache-2.0 Scala\nFava - Fava is the web frontend of Beancount, a text based double-entry accounting system. (Demo, Source Code) MIT Python\nFirefly III - Firefly III is a modern financial manager. It helps you to keep track of your money and make budget forecasts. It supports credit cards, has an advanced rule engine and can import data from many banks. (Demo, Source Code) AGPL-3.0 PHP\nGalette - Galette is a membership management web application towards non profit organizations. (Source Code) GPL-3.0 PHP\nGhostfolio - Wealth management software to keep track of stocks, ETFs and cryptocurrencies. (Source Code) AGPL-3.0 Docker/Nodejs\nGRR - Assets management and booking for small&#x2F;medium companies. (Source Code) GPL-2.0 PHP\nHub20 - A self-hosted payment processor for Ethereum and ERC20 Tokens. (Source Code) AGPL-3.0 Docker/Python\nHyperSwitch ⚠ - HyperSwitch is an Open Source Financial Switch to make payments Fast, Reliable and Affordable. It lets you connect with multiple payment processors and route traffic effortlessly, all with a single API integration. (Source Code) Apache-2.0 Docker/Rust\nIHateMoney - Manage your shared expenses, easily. (Demo, Source Code) BSD-3-Clause Docker/Python\nInvoice Ninja - Powerful tool to invoice clients online. (Demo, Source Code) AAL PHP\nInvoicePlane - Manage quotes, invoices, payments and customers for your small business. MIT PHP\nKill Bill - Open-Source Subscription Billing &amp; Payments Platform. Have access to real-time analytics and financial reports. (Source Code) Apache-2.0 Java/Docker\nKresus - Open source personal finance manager. (Demo, Source Code) MIT Nodejs\nLago - Open-source metering and usage-based billing. (Source Code) AGPL-3.0 Docker\nOctoBot - Open-source cryptocurrency trading bot. (Source Code) GPL-3.0 Python/Docker\nOnTrack - A simple app to track spend and set goals. MIT Ruby/React\nOpenBudgeteer - A budgeting app based on the Bucket Budgeting Principle. MIT Docker/C#\nREI3 - Open source, expandable Business Management Software. Manage tasks, time, assets and much more. (Demo, Source Code) MIT Go\nSilverStrike - Personal finance management made easy. (Demo, Source Code) MIT Python/Django\nSolidInvoice - Open source invoicing and quote application. (Source Code) MIT PHP\n\nMonitoring^        back to top        ^\nSoftware for monitoring systems, networks, applications and websites.\nPlease visit awesome-sysadmin&#x2F;Monitoring, awesome-sysadmin&#x2F;Metrics and Metric Collection\nNote-taking &amp; Editors^        back to top        ^\nNote taking editors.\nRelated: Wikis\n\nBenotes - An open source self hosted notes and bookmarks taking web app. (Source Code) MIT PHP\nDailyNotes - App for taking notes and tracking tasks on a daily basis in Markdown. MIT Python\ndillinger - The last Markdown editor, ever. (Source Code) MIT Nodejs\nDnote - A simple command line notebook with multi-device sync and web interface. (Source Code) AGPL-3.0 Go\nDocPHT - With DocPHT you can take notes and quickly document anything and without the use of any database. (Demo, Source Code) MIT PHP\ndraw.io - Diagram software for making flowcharts, process diagrams, org charts, UML, ER and network diagrams. (Source Code) Apache-2.0 Javascript\nflatnotes - A self-hosted, database-less note-taking web app that utilises a flat folder of markdown files for storage. (Demo) MIT Docker\nHedgeDoc - Realtime collaborative markdown notes on all platforms, formerly known as CodiMD and HackMD CE. (Source Code) AGPL-3.0 Docker/Nodejs\nJoplin - Joplin is a note taking application with Markdown editor and encryption support for mobile and desktop platforms. Runs client-side and syncs through self hosted Nextcloud or similar. Consider it like open source alternative to Evernote. (Source Code) MIT Nodejs\nkiwix-serve - HTTP daemon for serving wikis from ZIM files. (Source Code) GPL-3.0 C++\nLivebook - Realtime collaborative notebook app based on Markdown that supports running Elixir codesnippets, TeX and Mermaid Diagrams. Easily deployed using Docker or Elixir. (Source Code) Apache-2.0 Elixir\nMarkdown Edit - Online markdown editor&#x2F;viewer. MIT HTML5\nMeemo - Personal notes stream with Markdown support. (Source Code) MIT Nodejs\nMemos - An open source, self-hosted knowledge base that works with a SQLite db file. (Source Code) MIT Docker/Go\nminimalist-web-notepad - Minimalist notepad.cc clone. (Demo) Apache-2.0 PHP\nMiniNote - Simple Markdown note-taking app with persistence. MIT Nodejs\nNotes’n’Todos - Write notes and todos online in markdown with tag filtering and date sorting. (Demo) MIT Python\nOddmuse - A simple wiki engine written in Perl. No database required. (Source Code) GPL-3.0 Perl\nOverleaf - Web-based collaborative LaTeX editor. (Source Code) AGPL-3.0 Ruby\nPlainpad - A modern note taking application for the cloud, utilizing the best features of progressive web apps technology. (Demo, Source Code) GPL-3.0 PHP\nsavepad - Minimalist notepad based on notepad.cc. MIT PHP\nStandard Notes - Simple and private notes app. Protect your privacy while getting more done. That’s Standard Notes. (Demo, Source Code) GPL-3.0 Ruby\nTrilium Notes - Trilium Notes is a hierarchical note taking application with focus on building large personal knowledge bases. AGPL-3.0 Nodejs\nturndown - HTML to Markdown converter written in Javascript. (Source Code) MIT Javascript\nTurtl - Totally private personal database and note taking app. (Source Code) GPL-3.0 CommonLisp\nWreeto - Wreeto is an open source note-taking, knowledge management and wiki system built on top of Ruby on Rails framework. (Source Code) AGPL-3.0 Ruby\nWriting - Lightweight distraction-free text editor, in the browser (Markdown and LaTeX supported). No lag when writing. (Source Code) MIT Javascript\n\nOffice Suites^        back to top        ^\nAn office suite is a collection of productivity software usually containing at least a word processor, spreadsheet and a presentation program.\n\nCollabora Online Development Edition - Collabora Online Development Edition (CODE) is a powerful LibreOffice-based online office that supports all major document, spreadsheet and presentation file formats, which you can integrate in your own infrastructure. (Source Code) MPL-2.0 C++\nCryptPad - CryptPad is a collaboration suite that is end-to-end-encrypted and open-source. It is built to enable collaboration, synchronizing changes to documents in real time. (Source Code) AGPL-3.0 Nodejs\nEtherpad - Etherpad is a highly customizable Open Source online editor providing collaborative editing in really real-time. (Demo, Source Code) Apache-2.0 Nodejs\nGrist - Grist is a next-generation spreadsheet with relational structure, formula-based access control, and a portable, self-contained format. Alternative to Airtable. (Demo, Source Code) Apache-2.0 Nodejs/Python\nInfinoted - Server for Gobby, a multi-platform collaborative text editor. (Source Code) MIT C++\nONLYOFFICE - Office suite that enables you to manage documents, projects, team and customer relations in one place. (Source Code) AGPL-3.0 Nodejs\nPHPOffice - PHPOffice contains libraries which permits to write and read files from most office suites. LGPL-3.0 PHP\nRustpad - Efficient and minimal collaborative code editor, self-hosted, no database required. (Source Code) MIT Rust\n\nPassword Managers^        back to top        ^\nA password manager allows users to store, generate, and manage their passwords for local applications and online services.\n\nBitwarden ⚠ - Password manager with webapp, browser extension, and mobile app. (Source Code) AGPL-3.0 C#\nkeeweb - This webapp is a browser and desktop password manager compatible with KeePass databases. (Source Code) MIT HTML5\nPadloc - A modern, open source password manager for individuals and teams. (Source Code) GPL-3.0 Nodejs\nPassbolt - Password manager dedicated for managing passwords in a collaborative way on any Web server, using a MySQL database backend. (Source Code) AGPL-3.0 PHP\nPassIt - Simple password manage with sharing features by group and user, but no administration interface. (Demo, Source Code) AGPL-3.0 Python\nPassky - Simple, modern and open source password manager with website, browser extension, android and desktop application. (Demo, Source Code) GPL-3.0 PHP\nPassWall - Open source password manager. AGPL-3.0 Go\nPsono - A promising password managers fully featured for teams. (Demo, Source Code) Apache-2.0 Python\nsysPass - Multiuser password management system. (Demo, Source Code) GPL-3.0 PHP\nTeampass - Password manager dedicated for managing passwords in a collaborative way. One symmetric key is used to encrypt all shared&#x2F;team passwords and stored server side in a file and the database. works on any server Apache, MySQL and PHP. (Source Code) GPL-3.0 PHP\nvaults - Password manager featuring client side AES-256 encryption, PBKDF2 hashing, vaults, password generation &amp; more. GPL-3.0 PHP\nVaultwarden - Lightweight Bitwarden server API implementation written in Rust. GPL-3.0 Rust\n\nPastebins^        back to top        ^\nA pastebin is a type of online content-hosting service used for sharing and storing code and text.\n\nbepasty - A pastebin for all kinds of files. (Source Code) BSD-2-Clause Python\nbin - A paste bin that’s actually minimalist. WTFPL/0BSD Rust\ndpaste - Simple pastebin with multiple text and code option, with short url result easy to remember. (Source Code) MIT Docker\nDrift - Self-hosted Github Gist clone. (Demo) MIT Nodejs\nEdPaste - Self-hosted pastebin written in Laravel (PHP Framework). MIT PHP\nExBin - A pastebin with public&#x2F;private snippets and netcat server. MIT Elixir\nfiche - Command line pastebin, all you need is netcat. (Demo) MIT C\nfilite - A simple, light and standalone pastebin, URL shortener and file-sharing service. MIT Rust\nFlashPaper - A one-time encrypted zero-knowledge password&#x2F;secret sharing application focused on simplicity and security. No database or complicated set-up required. (Demo) MIT PHP\nHasty Paste - A place to quickly paste some text and share it. Mostly used for sharing debug logs and such to help developers provide tech support. The project aims to be both fast and minimal. (Source Code) AGPL-3.0 Docker/Python\nLenpaste - Web service that allows you to share notes anonymously, an alternative to pastebin. (Demo) AGPL-3.0 Docker/Go\nLogPaste - Minimal pastebin web app that’s easy to self-host and persists data to any S3-compatible backend. (Demo) MIT Go\nMicroBin - Simple, performant, configurable, entirely self-contained pastebin and URL shortener. BSD-3-Clause Rust\nmojopaste - Perl based pastebin. (Demo, Source Code) Artistic-2.0 Perl\nMokinToken - Clientside encrypted pastebin using tweetnacl. Unlicense PHP\nOpengist - Self-hosted pastebin powered by Git. (Demo) AGPL-3.0 Docker/Go/Nodejs\npaaster - Paaster is a secure by default end-to-end encrypted pastebin built with the objective of simplicity. (Source Code) GPL-3.0 Docker\npacebin - A dead-simple, self-hostable, filesystem-backed pastebin, written in C using Mongoose. (Source Code) AGPL-3.0 C\nPassword Pusher - A dead-simple application to securely communicate passwords (or text) over the web. Passwords automatically expire after a certain number of views and&#x2F;or time has passed. (Source Code) GPL-3.0 Docker\nPastefy - Beautiful, simple and easy to deploy Pastebin with optional Client-Encryption, Multitab-Pastes, an API, a highlighted Editor and more. (Source Code, Clients) MIT Java\nPastila - Minimalistic paste service. Single page, zero click experience. (Source Code) Apache-2.0 SQL\npasty - Pasty is a fast and lightweight code pasting server. (Demo) MIT Go\nPrivateBin - PrivateBin is a minimalist, opensource online pastebin&#x2F;discussion board where the server has zero knowledge of hosted data. (Demo, Source Code) Zlib PHP\nprologic pastebin - Simple pastebin service with convenient api and CLI. (Demo) MIT Go\nPurritoBin - Ultra fast, minimalistic, encrypted command line paste-bin, where the server has no knowledge of the paste data. ISC C++\nrustypaste - A minimal file upload&#x2F;pastebin service. MIT Rust\nSnyPy - Open source on-prem code snippet manager. (Demo, Source Code) MIT Docker\nSpacebin - Text-sharing for the final frontier — Reliable Pastebin server in Golang and Fiber. (Source Code) Apache-2.0 Go\nSup3rS3cretMes5age - Very simple (to deploy and to use) secret message service using Hashicorp Vault as a secrets storage. MIT Go\nwantguns&#x2F;bin - Minimal pastebin for both textual and binary files shipped in a single statically linked binary. (Demo) GPL-3.0 Rust\nWastebin - Lightweight, minimal and fast pastebin with an SQLite backend. (Demo) MIT Rust\nYABin - A pastebin that contains plentiful features while remaining simple. Supports optional E2E encryption, a client-side CLI app, syntax highlighting, minimalistic UI, APIs, keyboard shortcuts, and more. It can even be run in serverless environments. (Demo) MIT Nodejs\n\nPersonal Dashboards^        back to top        ^\nDashboards for accessing information and applications.\nRelated: Monitoring, Bookmarks and Link Sharing\n\nBaby Buddy - Helps caregivers track baby sleep, feedings, diaper changes, and tummy time. (Demo) BSD-2-Clause Python\nDashboard - Minimalist homepage for organizing your web applications and bookmarks using JSON-files. MIT Nodejs/Docker\nDashy - Feature-rich homepage for your homelab, with easy YAML configuration. (Demo) MIT Nodejs/Docker\nenvlinks - A minimalist link dashboard showing links from environment variables. (Demo) MIT Docker\nFenrus - A self hosted personal home page that allows for multiple users, guest access and multiple dashboards for each user. It also has “Smart Apps” which display live data for those apps. GPL-3.0 Nodejs\nHabitica - Habit tracker app which treats your goals like a Role Playing Game. Previously called HabitRPG. (Source Code) GPL-3.0/CC-BY-SA-3.0 Nodejs\nHeimdall - Heimdall is an elegant solution to organise all your web applications. (Source Code) MIT PHP\nHiccup - A beautiful static homepage to get to your links and services quickly. It has built-in search, editing, PWA support and localstorage caching to easily organize your start page. (Source Code) MIT HTML5\nHomarr - Sleek, modern dashboard with many integrations and web-based config. (Demo, Source Code) MIT Docker/Nodejs\nHomepage by benphelps - A highly customizable homepage (or startpage &#x2F; application dashboard) with Docker and service API integrations. GPL-3.0 Docker/Nodejs\nHomepage by tomershvueli - Simple, standalone, self-hosted PHP page that is your window to your server and the web. MIT PHP\nHomer - A dead simple static homepage to expose your server services, with an easy yaml configuration and connectivity check. Apache-2.0 HTML5\nHubleys - Self-hosted personal dashboards to organize links for multiple users via a central yaml config. MIT Docker\nJump - Yet another self-hosted startpage for your server designed to be simple, stylish, fast and secure. MIT PHP\nLinkStack - Open-source, customizable, self-hosted alternative to services like Linktree and Manylink with an intuitive, easy to use user&#x2F;admin interface. LinkStack allows you to link all your social media platforms easily accessible on one page. (Demo, Source Code) AGPL-3.0 PHP\nLittleLink - DIY Linktree alternative. A simplistic approach for links in bio with 100+ branded buttons. (Demo, Source Code) MIT HTML5\nOrganizr - Organizr aims to be your one stop shop for your Servers Frontend. GPL-3.0 PHP\nSmashing - Smashing, the spiritual successor to Dashing, is a Sinatra based framework that lets you build excellent dashboards. It looks especially great on TVs. (Source Code) MIT Ruby\nStarbase 80 - A simple homepage with an iPad-style application grid, for mobile and desktop. One JSON configuration file. MIT Docker\nWeb-Portal - A python web app designed to allow a easy way to manage the links to all of your web services. AGPL-3.0 Docker/Python\nwger - Web-based personal workout, fitness and weight logger&#x2F;tracker. It can also be used as a simple gym management utility and offers a full REST API as well. (Demo, Source Code) AGPL-3.0 Python\nYour Spotify ⚠ - Allows you to record your Spotify listening activity and have statistics about them served through a Web application. MIT Nodejs/Docker\n\nPhoto and Video Galleries^        back to top        ^\nA gallery is software that helps the user publish or share photos, pictures, videos or other digital media.\n\nChevereto - Ultimate image sharing software. Create your very own personal image hosting website in just minutes. (Source Code) AGPL-3.0 PHP\nCoppermine - Multilingual photo gallery that integrates with various bulletin boards. Includes upload approval and password protected albums. (Demo, Source Code) GPL-3.0 PHP\nDamselfly - Fast server-based photo management system for large collections of images. Includes face detection, face &amp; object recognition, powerful search, and EXIF Keyword tagging. Runs on Linux, MacOS and Windows. GPL-3.0 C#/.NET\nFussel - Self-hosted, no-backend static photo gallery. Face tag recognition, albums and more. (Demo) MIT Python/Docker\nHomeGallery - Self-hosted open-source web gallery to browse personal photos and videos featuring tagging, mobile-friendly, and AI powered image discovery. (Demo, Source Code) MIT Nodejs\nImmich - Self-hosted photo and video backup solution directly from your mobile phone. (Source Code) MIT Docker\nLibrePhotos - Self hosted wannabe Google Photos clone, with a slight focus on cool graphs. MIT Python\nLychee - Open source grid and album based photo-management-system. (Source Code) MIT PHP\nMediagoblin - Free software media publishing platform that anyone can run. You can think of it as a decentralized alternative to Flickr, YouTube, SoundCloud, etc. (Source Code) AGPL-3.0 Python\nMediaHut - A truly single-file, no-database, drop-in PHP media gallery. (Demo) MIT PHP\nMejiro - An easy-to-use PHP web application for instant photo publishing. GPL-3.0 PHP\nNextcloud Memories - Fast, modern and advanced photo management suite. Runs as a Nextcloud app. (Demo, Source Code) AGPL-3.0 PHP\nPhoto Stream - Minimalist self-hosted photo stream. (Demo) MIT Ruby\nPhotoPrism - Personal photo management powered by Go and Google TensorFlow. Browse, organize, and share your personal photo collection, using the latest technologies to automatically tag and find pictures. (Demo, Source Code) AGPL-3.0 Go\nPhotoview - A simple and user-friendly Photo Gallery for personal servers. It is made for photographers and aims to provide an easy and fast way to navigate directories, with thousands of high resolution photos. (Source Code) GPL-3.0 Go\nPiGallery 2 - A directory-first photo gallery website, with a rich UI, optimised for running on low resource servers. (Source Code) MIT Docker/Nodejs\nPiwigo - Photo gallery software for the web, built by an active community of users and developers. (Source Code) GPL-2.0 PHP\nQuru Image Server - High performance dynamically resizing image server offering directory based access control cropping, rotation, color management and other tools. (Demo, Source Code) AGPL-3.0 Python\nsigal - Yet another simple static gallery generator. MIT Python\nSPIS - A simple, lightweight and fast media server with decent mobile support. GPL-3.0 Rust\nThis week in past - Aggregates images taken this week, from previous years and presents them on a web page with a simple slideshow. (Demo) MIT Docker/Rust\nThumbor - A smart imaging service and enables on-demand cropping, resizing, applying filters and optimizing images. (Source Code) MIT Python/Docker\nUberGallery - UberGallery is an easy to use, simple to manage, web photo gallery. UberGallery does not require a database and supports JPEG, GIF and PNG file types. Simply upload your images and UberGallery will automatically generate thumbnails and output HTML. (Source Code) MIT PHP\nZenphoto - Open-source gallery and CMS project. (Source Code) GPL-2.0 PHP\n\nPolls and Events^        back to top        ^\nSoftware for organising polls and events.\nRelated: Booking and Scheduling\n\nBitpoll - A web application for scheduling meetings and general polling. (Demo) GPL-3.0 Python\nCalagator - Event aggregator. (Source Code) MIT Ruby\nChristmas Community - Create a simple place for your entire family to use to find gifts that people want, and to avoid double-gifting. AGPL-3.0 Docker/Nodejs\nClaper - The ultimate tool to interact with your audience. An open-source alternative to Slido, AhaSlides and Mentimeter. (Source Code) GPL-3.0 Elixir/Docker\nClearFlask - Community-feedback tool for managing incoming feedback and prioritizing a public roadmap. Alternative to Canny, UserVoice, Upvoty. (Demo, Source Code) AGPL-3.0 Docker\ndocassemble - A free, open-source expert system for guided interviews and document assembly, based on Python, YAML, and Markdown. (Demo, Source Code) MIT Docker\ndudle - Online scheduling application. (Demo, Source Code) AGPL-3.0 Ruby\nFeedka ⚠ - Open-source web application that can serve as a platform to get authentic, kindful, and constructive feedback from your friends, family, and co-workers. AGPL-3.0 Ruby\nFider - Open source alternative to UserVoice for customer feedback. (Demo, Source Code) MIT Go\nFramadate - Online service for planning an appointment or make a decision quickly and easily: Make a poll, Define dates or subjects to choose, Send the poll link to your friends or colleagues, Discuss and make a decision. (Demo, Source Code) CECILL-B PHP\nGancio - A shared agenda for local communities. (Source Code) AGPL-3.0 Nodejs\nhitobito - A web application to manage complex group hierarchies with members, events and a lot more. (Demo, Source Code) AGPL-3.0 Ruby\nInput - A privacy-focused, no-code, open-source form builder designed for simplicity and brand consistency. (Source Code) AGPL-3.0 PHP/Nodejs/Docker\nLimeSurvey - Feature-rich Open Source web based polling software. Supports extensive survey logic. (Demo, Source Code) GPL-2.0 PHP\nMeetable - A minimal events aggregator. (Source Code) MIT PHP\nMobilizon - A federated tool that helps you find, create and organise events and groups. (Demo, Source Code) GPL-3.0 Elixir\nOhMyForms - An open source alternative to TypeForm that can create stunning mobile-ready forms, surveys and questionnaires. (Source Code) AGPL-3.0 Docker\nOpen Event Server - Enables organizers to manage events from concerts to conferences and meet-ups. GPL-3.0 Python\n\nProxy^        back to top        ^\nA proxy is a server application that acts as an intermediary between a client requesting a resource and the server providing that resource.\nRelated: Web Servers\n\nimgproxy - Fast and secure standalone server for resizing and converting remote images. It works great when you need to resize multiple images on the fly without preparing a ton of cached resized images or re-doing it every time the design changes. (Source Code) MIT Go/Docker\ninlets - Expose your local endpoints to the Internet - with a Kubernetes integration, Docker image and CLI available. MIT Go/Docker\niodine - IPv4 over DNS tunnel solution, enabling you to start up a socks5 proxy listener. (Source Code) ISC C\nKoblas - Lightweight SOCKS5 proxy server. MIT Rust/Docker\nNginx Proxy Manager - Nginx Proxy Manager is an easy way to accomplish reverse proxying hosts with SSL termination. (Source Code) MIT Nodejs/Docker\nOutline Server - A proxy server that runs a Shadowsocks instance for each access key and a REST API to manage the access keys. (Source Code) Apache-2.0 Docker/Nodejs\nPomerium - An identity-aware reverse proxy, successor to now obsolete oauth_proxy. It inserts an OAuth step before proxying your request to the backend, so that you can safely expose your self-hosted websites to public Internet. (Source Code) Apache-2.0 Go\nPrivoxy - Non-caching web proxy with advanced filtering capabilities for enhancing privacy, modifying web page data and HTTP headers, controlling access, and removing ads and other obnoxious Internet junk. GPL-2.0 C\nsish - Open source serveo&#x2F;ngrok alternative providing HTTP(S)&#x2F;WS(S)&#x2F;TCP tunnels to localhost using only SSH. MIT Go\nsocks5-proxy-server - SOCKS5 proxy server with built-in authentication and Telegram-bot for user management and user statistics on data spent (handy when you pay per GB of data). It is dockerised and simple to install. Apache-2.0 Nodejs\nSquid - Caching proxy for the Web supporting HTTP, HTTPS, FTP, and more. It reduces bandwidth and improves response times by caching and reusing frequently-requested web pages. (Source Code) GPL-2.0 C\nSWAG (Secure Web Application Gateway) - Nginx webserver and reverse proxy with PHP support, built-in Certbot (Let’s Encrypt) client and fail2ban integration. GPL-3.0 Docker\nTinyproxy - Light-weight HTTP&#x2F;HTTPS proxy daemon. (Source Code) GPL-2.0 C\n\nRecipe Management^        back to top        ^\nSoftware and tools for managing recipes.\n\nBar Assistant - Bar assistant is a self hosted application for managing your home bar. It allows you to add your ingredients, search for cocktails and create custom cocktail recipes. (Demo) MIT PHP/Docker\nChowdown.io - Simple recipes in Markdown format. (Source Code) Unlicense Ruby\nGroceri.es - Web-based application to manage your recipes and plan your meals ahead. groceri.es keeps track of your menu plans and generates a groceries list for you. (Source Code) MIT Docker/Python\nkcal - Track nutritional information about foods and recipes, set goals, and record a food journal to help along the way. Kcal is a personal system that focuses on direct control of inputs and a minimal, easy to use recipe presentation for preparing meals. MPL-2.0 PHP\nKitchenOwl - A cross-platform shopping list, recipe storage, expense tracker, and meal planner following the material design language. (Source Code) AGPL-3.0 Docker\nMealie - Material design inspired recipe manager with category and tag management, shopping-lists, meal-planner, and site customizations. Mealie is focused on simple user interactions to keep the whole family using the app. (Source Code) MIT Python\nRecepturer ⚠ - Let Recepturer help you organize all your recipes in one place. You can add, edit and delete recipes, and create meal plans. Simply type your recipe and all ingredients will be listed as you go. Data is stored on Dropbox. (Source Code) MIT Javascript\nRecipeSage - A recipe keeper, meal plan organizer, and shopping list manager that can import recipes directly from any URL. (Demo) AGPL-3.0 Nodejs\nreciphpes! - A lightweight, Symfony-based recipes indexing software supporting search and tags, using a SQLite database. MIT Docker\nTandoor Recipes - Django application to manage, tag and search recipes using either built-in models or external storage providers hosting PDFs, Images or other files. (Demo, Source Code) MIT Python\n\nRemote Access^        back to top        ^\nRemote desktop and SSH servers and web interfaces for remote management of computer systems.\n\nFirezone - Self-hosted secure remote access gateway that supports the WireGuard protocol. It offers a Web GUI, 1-line install script, multi-factor auth (MFA), and SSO. (Source Code) Apache-2.0 Elixir\nGuacamole - Guacamole is a clientless remote desktop gateway. It supports standard protocols like VNC and RDP. (Source Code) Apache-2.0 Java/C\nhttprd - Single-script remote desktop via web browser. GPL-3.0 Python\nMeshCentral - A full computer management website. With MeshCentral, you can run your own web server to remotely manage and control computers on a local network or anywhere on the internet. (Source Code) Apache-2.0 Nodejs\nRPort - Self-hosted open source remote management solution for Windows, macOS &amp; Linux. (Source Code) MIT Go\nRustDesk - An open source TeamViewer alternative, works out of the box, no configuration required. (Source Code) AGPL-3.0 Rust/Docker\nShellHub - ShellHub is a modern SSH server for remotely accessing linux devices via command line (using any SSH client) or web-based user interface, designed as an alternative to sshd. (Source Code) Apache-2.0 Go/Other\nSshwifty - Sshwifty is a SSH and Telnet connector made for the Web. AGPL-3.0 Go/Docker\nWarpgate - Smart SSH and HTTPS bastion that works with any SSH client. Apache-2.0 Rust/Docker\n\nResource Planning^        back to top        ^\nSoftware and tools to help with resource and supply planning.\n\nfarmOS - Web-based farm record keeping application. (Demo, Source Code) GPL-2.0 PHP\ngrocy - ERP beyond your fridge - grocy is a web-based self-hosted groceries &amp; household management solution for your home. (Demo, Source Code) MIT PHP\nTania - Tania is a free and open source farming management system for everyone. You can manage your areas, reservoirs, farm tasks, inventories, and the crop growing progress. (Source Code) Apache-2.0 Go\n\nResource Planning - Enterprise Resource Planning^        back to top        ^\nSoftware and tools to help with enterprise resource and supply planning.\n\nDolibarr - Dolibarr ERP CRM is a modern software package to manage your company or foundation activity (contacts, suppliers, invoices, orders, stocks, agenda, accounting, …). (Demo, Source Code) GPL-3.0 PHP\nERPNext - Free open source ERP system. (Source Code) GPL-3.0 Python\nLedgerSMB - Integrated accounting and ERP system for small and midsize businesses, with double entry accounting, budgeting, invoicing, quotations, projects, orders and inventory management, shipping and more. (Demo, Source Code) GPL-2.0 Perl\nOdoo - Free open source ERP system. (Demo, Source Code) LGPL-3.0 Python\nOFBiz - FOSS enterprise resource planning system with a suite of business applications flexible enough to be used across any industry. (Source Code) Apache-2.0 Java\nTryton - Free open source business solution. (Demo, Source Code) GPL-3.0 Python\n\nSearch Engines^        back to top        ^\nA search engine is an information retrieval system designed to help find information stored on a computer system. This includes Web search engines.\n\nFess - Fess is a very powerful and easily deployable Enterprise Search Server. (Demo, Source Code) Apache-2.0 Java/Docker\nGigablast - Open-source search engine. Apache-2.0 C++\nHound - Lightning fast code searching made easy. MIT Go/Docker\nJina - Cloud-native neural search framework for any kind of data. Apache-2.0 Python\nlibrengine - Private web search engine. GPL-3.0 C++\nLibreX ⚠ - Framework and javascript free privacy respecting meta search engine. AGPL-3.0 PHP/Docker\nManticore Search - Much faster alternative to Elasticsearch for full-text search and data analytics. Provides much lower response time for small, medium and big data. GPL-2.0 Docker/C++\nMeiliSearch - Ultra relevant, instant and typo-tolerant full-text search API. (Source Code) MIT Rust\nOpenSearch - Open source distributed and RESTful search engine. (Source Code) Apache-2.0 Java\nSearx ⚠ - Privacy-respecting, hackable metasearch engine. (Source Code) AGPL-3.0 Python\nSearXNG ⚠ - Internet metasearch engine which aggregates results from various search services and databases. (Fork of Searx). (Source Code) AGPL-3.0 Python/Docker\nsist2 - Lightning-fast file system indexer and search tool. GPL-3.0 C\nTypesense - Blazing fast, typo-tolerant open source search engine optimized for developer happiness and ease of use. (Source Code) GPL-3.0 C++\nWhoogle ⚠ - A self-hosted, ad-free, privacy-respecting metasearch engine. MIT Python\nYacy - Peer based, decentralized search engine server. (Source Code) GPL-2.0 Java\nZincSearch - A lightweight alternative to elasticsearch that requires minimal resources, written in Go. (Demo, Source Code) Apache-2.0 Go\n\nSelf-hosting Solutions^        back to top        ^\nSoftware for easy installation, management and configuration of self-hosted services and applications.\n\nAnsible-NAS - Build a full-featured home server with this playbook and an Ubuntu box. MIT YAML/Docker\nBitsii Bridge ⚠ - Easy to install self-hosting platform for Windows, MacOS, and Linux. Depends on a dynamic DNS provider and Let’s Encrypt. (Source Code) MPL-2.0 Java/Other\nCasaOS - A simple, easy-to-use, elegant open-source Home Cloud system. (Source Code) Apache-2.0 Go/Docker\nCloudbox - Ansible-based solution for rapidly deploying a Docker containerized cloud media server. (Source Code) GPL-3.0 Shell/Ansible\nDietPi - Minimal Debian OS optimized for single-board computers, which allows you to easily install and manage several services for selfhosting at home. (Source Code) GPL-2.0 Shell\nDockSTARTer - DockSTARTer helps you get started with home server apps running in Docker. (Source Code) MIT Shell\nFLAP - Low maintenance framework to manage self-hosted services. (Source Code) AGPL-3.0 Docker/Shell\nFreedomBox - Community project to develop, design and promote personal servers running free software for private, personal, communications. (Source Code) AGPL-3.0 Python/Other\nHomelabOS - Your very own offline-first privacy-centric open-source data-center. Deploy over 100 services with a few commands. (Source Code) MIT Docker\nLibreServer - Home server configuration based on Debian. (Source Code) AGPL-3.0 Shell\nMars Server - Managed home server with Docker, Docker Compose, Make and Bash. MIT Docker\nMistborn - Mistborn is your own virtual private cloud platform and WebUI that manages self hosted services. MIT Bash/Docker\nNextCloudPi - Nextcloud preinstalled and preconfigured, with a text and web management interface and all the tools needed to self host private data. With installation images for Raspberry Pi, Odroid, Rock64, Docker, and a curl installer for Armbian&#x2F;Debian. GPL-2.0 Bash/PHP\nOpenMediaVault - OpenMediaVault is the next generation network attached storage (NAS) solution based on Debian Linux. It contains services like SSH, (S)FTP, SMB&#x2F;CIFS, DAAP media server, RSync, BitTorrent client and many more. (Source Code) GPL-3.0 PHP\nSandstorm - Personal server for running self-hosted apps easily and securely. (Demo, Source Code) Apache-2.0 C++/Other\nSyncloud - Your own online file storage, social network or email server. (Source Code) GPL-3.0 Python/Other\nTipi - Homeserver manager. One command setup, one click installs for your favorites self-hosted apps. (Source Code) GPL-3.0 Shell\nUBOS - Linux distro that runs on indie boxes (personal servers and IoT devices). Single-command installation and management of apps - Jenkins, Mediawiki, Owncloud, WordPress, etc., and other features. GPL-3.0 Perl/Other\nWikiSuite - The most comprehensive and integrated Free &#x2F; Libre &#x2F; Open Source enterprise software suite. (Source Code) GPL-3.0/LGPL-2.1/Apache-2.0/MPL-2.0/MPL-1.1/MIT/AGPL-3.0 ClearOS\nxsrv - Install and manage self-hosted services&#x2F;applications, on your own server(s). (Source Code) GPL-3.0 Shell/Ansible\nYunoHost - Server operating system aiming to make self-hosting accessible to everyone. (Demo, Source Code) AGPL-3.0 Python/Other\n\nSoftware Development^        back to top        ^\nSoftware development is the process of conceiving, specifying, designing, programming, documenting, testing, and bug fixing involved in creating and maintaining applications, frameworks, or other software components.\nPlease visit Software Development - API Management, Software Development - Continuous Integration &amp; Deployment, Software Development - FaaS &amp; Serverless, Software Development - IDE &amp; Tools, Software Development - Localization, Software Development - Low Code, Software Development - Project Management, Software Development - Testing\nSoftware Development - API Management^        back to top        ^\nAPI management is the process of creating and publishing application programming interfaces (APIs), enforcing their usage policies, controlling access, nurturing the subscriber community, collecting and analyzing usage statistics, and reporting on performance.\n\nDreamFactory - Turns any SQL&#x2F;NoSQL&#x2F;Structured data into Restful API. (Source Code) Apache-2.0 PHP\nform.io - A REST API building platform that utilizes a drag &amp; drop form builder, and is application framework agnostic. Contains open source and enterprise version. (Demo, Source Code) MIT Nodejs\nFusio - Open-source API management platform which helps to build and manage REST APIs. (Demo, Source Code) AGPL-3.0 PHP\nHasura - Fast, instant realtime GraphQL APIs on Postgres with fine grained access control, also trigger webhooks on database events. (Source Code) Apache-2.0 Haskell\nHoppscotch - A free, fast and beautiful API request builder. (Source Code) MIT Nodejs/Vue/Nuxt\nKong - The World’s Most Popular Open Source Microservice API Gateway and Platform. (Source Code) Apache-2.0 Lua\nLura - Open source High-Performance API Gateway. (Source Code) Apache-2.0 Go\nPara - Flexible and modular backend framework&#x2F;server for object persistence, API development and authentication. (Source Code) Apache-2.0 Java\nPsychic - Universal API to connect large language models to dynamic data sources. (Source Code) GPL-3.0 Python\nSvix - Open-source webhooks as a service that makes it super easy for API providers to send webhooks. (Source Code) MIT Docker/Rust\nTyk - Fast and scalable open source API Gateway. Out of the box, Tyk offers an API Management Platform with an API Gateway, API Analytics, Developer Portal and API Management Dashboard. (Source Code) MPL-2.0 Go\nYaade - Yaade is an open-source, self-hosted, collaborative API development environment. (Source Code) MIT Docker\n\nSoftware Development - Continuous Integration &amp; Deployment^        back to top        ^\nContinuous integration and Continuous deployment software and tools.\nPlease visit awesome-sysadmin&#x2F;Continuous Integration &amp; Continuous Deployment\nRelated: Automation\nSoftware Development - FaaS &amp; Serverless^        back to top        ^\nServerless computing - Wikipedia.\n\nAppwrite - End to end backend server for web, native, and mobile developers 🚀. (Source Code) BSD-3-Clause PHP\nCoolify - An open-source &amp; self-hostable Heroku &#x2F; Netlify alternative (and even more). (Source Code) Apache-2.0 Docker\nDokku - An open source PAAS alternative to Heroku. (Source Code) MIT Docker/Shell/Go\nfx - A tool to help you do Function as a Service with painless on your own servers. MIT Go\nKubero - A self-hosted Heroku PaaS alternative for Kubernetes that implements GitOps. (Demo, Source Code) GPL-3.0 K8S/Nodejs/Go\nLocalStack - LocalStack is a fully functional local AWS cloud stack. This includes Lambda for serverless computation. (Source Code) Apache-2.0 Python/Other\nNhost - The Open Source Firebase Alternative with GraphQL. Get a database and backend configured and ready in minutes. (Source Code) MIT Docker/Nodejs/Go\nOpenFaaS - Serverless Functions Made Simple for Docker &amp; Kubernetes. (Source Code) MIT Go\nTrusted-CGI - Lightweight self-hosted lambda&#x2F;applications&#x2F;cgi&#x2F;serverless-functions platform. MIT Go\n\nSoftware Development - IDE &amp; Tools^        back to top        ^\nAn integrated development environment (IDE) is a software application that provides comprehensive facilities to computer programmers for software development.\nRelated: Software Development - Low Code\n\nAtheos - Web-based IDE framework with a small footprint and minimal requirements, continued from Codiad. (Source Code) MIT PHP\ncode-server - VS Code in the browser, hosted on a remote server. MIT Nodejs/Docker\nCoder - Remote development machines on your own infrastructure. (Source Code) AGPL-3.0 Go\nEclipse Che - Open source workspace server and cloud IDE. (Source Code) EPL-1.0 Docker/Java\nHakatime - WakaTime server implementation with analytics dashboard. Unlicense Haskell\nHttPlaceholder - Quickly mock away any webservice using HttPlaceholder. HttPlaceholder lets you specify what the request should look like and what response needs to be returned. MIT C#\nICEcoder - ICEcoder is a web IDE &#x2F; browser based code editor, which allows you to develop websites directly within the web browser. (Demo, Source Code) MIT PHP\nJudge0 CE - Open source API to compile and run source code. (Source Code) GPL-3.0 Ruby\nJupyterLab - Web-based environment for interactive and reproducible computing. (Demo, Source Code) BSD-3-Clause Python/Docker\nLowdefy - Build internal tools, BI dashboards, admin panels, CRUD apps and workflows in minutes using YAML &#x2F; JSON on an self-hosted, open-source platform. Connect to your data sources, host via Serverless, Netlify or Docker. (Source Code) Apache-2.0 Nodejs\nRStudio Server - Web browser based IDE for R. (Source Code) AGPL-3.0 Java/C++\nsourcegraph - Sourcegraph is a fast, open-source, fully-featured code search and navigation engine written in Go. (Source Code) Apache-2.0 Go\nWakapi - Tracking tool for coding statistics, compatible with WakaTime. (Source Code) GPL-3.0 Go\n\nSoftware Development - Localization^        back to top        ^\nLocalization is the proccess of adapting code and software to other languages.\n\nAccent - Open-source, self-hosted, developer-oriented translation tool. (Source Code) BSD-3-Clause Elixir\nPootle - Online translation and localization tool. (Source Code) GPL-3.0 Python\nTolgee - Developer &amp; translator friendly web-based localization platform enabling users to translate directly in the app they develop. (Source Code) Apache-2.0 Docker/Java\nTraduora - Translation management platform for teams. (Source Code) AGPL-3.0 Docker/Nodejs\nWeblate - Web-based translation tool with tight version control integration. (Demo, Source Code) GPL-3.0 Python\n\nSoftware Development - Low Code^        back to top        ^\nA low-code development platform (LCDP) provides a development environment used to create application software through a graphical user interface.\nRelated: Software Development - IDE &amp; Tools\n\nAppsmith - Cloud or self-hosted open-source platform to build admin panels, CRUD apps and workflows. Build everything you need, 10x faster. (Source Code) Apache-2.0 Java/Docker\nBudibase - Build and automate internal tools, admin panels, dashboards, CRUD apps, and more, in minutes. Budibase is the open source alternative to Outsystems, Retool, Mendix, Appian. (Source Code) GPL-3.0 Nodejs\nHadmean - Don’t build in hours but generate in seconds your fully functional admin apps without any technical knowledge with just a single command npx hadmean. (Demo, Source Code) AGPL-3.0 Nodejs\nMotor Admin - No-code admin panel and business intelligence software - search, create, update, and delete data entries, create custom actions, and build reports. (Source Code) AGPL-3.0 Ruby\nPocketBase - Open Source backend for your next SaaS and Mobile app in 1 file. (Source Code) MIT Go/Docker\nSQLPage - SQL-only dynamic website builder. (Source Code) MIT Rust/Docker\nToolJet - ToolJet is the open-source low-code framework alternative to Retool &amp; Mendix to build &amp; deploy internal tools with minimal engineering effort. (Source Code) GPL-3.0 Nodejs\n\nSoftware Development - Project Management^        back to top        ^\nTools and software for software project management.\nRelated: Ticketing, Task Management &amp; To-do Lists\n\nCgit - A fast lightweight web interface for git repositories. (Source Code) GPL-2.0 C\nFossil - Distributed version control system featuring wiki and bug tracker. BSD-2-Clause-FreeBSD C\nGerrit - A code review and project management tool for Git based projects. (Source Code) Apache-2.0 Java/Docker\nGitblit - Pure Java stack for managing, viewing, and serving Git repositories. (Source Code) Apache-2.0 Java\ngitbucket - Easily installable GitHub clone powered by Scala. (Source Code) Apache-2.0 Scala/Java\nGitea - Community managed fork of Gogs, lightweight code hosting solution. (Demo, Source Code) MIT Go\nGitLab - Self Hosted Git repository management, code reviews, issue tracking, activity feeds and wikis. (Demo, Source Code) MIT Ruby\nGitlist - Web-based git repository browser - GitList allows you to browse repositories using your favorite browser, viewing files under different revisions, commit history and diffs. (Source Code) BSD-3-Clause PHP\nGitolite - Gitolite allows you to setup git hosting on a central server, with fine-grained access control and many more powerful features. (Source Code) GPL-2.0 Perl\nGitPrep - Portable Github clone. (Demo) Artistic-2.0 Perl\nGogs - Painless self-hosted Git Service written in Go. (Demo, Source Code) MIT Go\nKallithea - Source code management system that supports two leading version control systems, Mercurial and Git, with a web interface. (Source Code) GPL-3.0 Python\nKlaus - Simple, easy-to-set-up Git web viewer that Just Works. ISC Python\nLavagna - Lavagna is an open-source issue&#x2F;project management tool designed for small teams. Lightweight, pure Java, easy to install, easy to use. (Source Code) GPL-3.0 Java\nLazylead ⚠ - Eliminate the annoying work within ticketing systems (Jira, GitHub, Trello). Allows to automate daily actions like tickets fields verification, email notifications by JQL&#x2F;GQL, meeting requests to your (or teammates) calendar. (Source Code) MIT Ruby\nLeantime - Leantime is a lean project management system for small teams and startups helping to manage projects from ideation through delivery. (Source Code) GPL-2.0 PHP\nMindwendel - Brainstorm and upvote ideas and thoughts within your team. (Demo, Source Code) AGPL-3.0 Docker/Elixir\nOctobox ⚠ - Take back control of your GitHub Notifications. (Source Code) AGPL-3.0 Ruby\nOneDev - All-In-One DevOps Platform. With Git Management, Issue Tracking, and CI&#x2F;CD. Simple yet Powerful. (Source Code) MIT Java\nOpenProject - OpenProject is a web-based project management system. (Source Code) GPL-3.0 Ruby\nPagure - A lightweight, powerful, and flexible git-centric forge with features laying the foundation for federated and decentralized development. (Demo) GPL-2.0 Python\nParty Poker - Agile &#x2F; Scrum Planning Poker WebApp. Estimate User Stories in real time. (Demo) MIT C#\nPhorge - Phorge is an open source, community driven platform for collaborating, managing, organizing and reviewing software development projects. (Source Code) Apache-2.0 PHP\nPhproject - High performance full-featured project management system. (Source Code) GPL-3.0 PHP\nPlane - Open Source JIRA, Linear and Height Alternative. Plane helps you track your issues, epics, and product roadmaps in the simplest way possible. (Demo, Source Code) Apache-2.0 Docker\nProjeQtOr - A complete, mature, multi-user project management system with extensive functionality for all phases of a project. (Demo, Source Code) AGPL-3.0 PHP\nRedmine - Redmine is a flexible project management web application. (Source Code) GPL-2.0 Ruby\nRhodeCode - RhodeCode is an open source platform for software development teams. It unifies and simplifies repository management for Git, Subversion, and Mercurial. (Source Code) AGPL-3.0 Python\nRukovoditel - Configurable open source project management, web-based application. (Source Code) GPL-2.0 PHP\nSCM Manager - The easiest way to share and manage your Git, Mercurial and Subversion repositories over http. (Source Code) BSD-3-Clause Java\nSourcehut - A full web git interface with no javascript. (Demo, Source Code) GPL-2.0 Go\nTaiga - Agile Project Management Tool based on the Kanban and Scrum methods. (Source Code) MPL-2.0 Docker/Python/Nodejs\nTitra - Time-tracking solution for freelancers and small teams. (Source Code) GPL-3.0 Javascript\nTrac - Trac is an enhanced wiki and issue tracking system for software development projects. BSD-3-Clause Python\nTraq - Project management and issue tracking system written in PHP. (Source Code) GPL-3.0 PHP/Nodejs\nTuleap - Tuleap is a libre suite to plan, track, code and collaborate on software projects. (Source Code) GPL-2.0 PHP\nUVDesk - UVDesk community is a service oriented, event driven extensible opensource helpdesk system that can be used by your organization to provide efficient support to your clients effortlessly whichever way you imagine. (Demo, Source Code) MIT PHP\nZenTao - An agile(scrum) project management system&#x2F;tool. (Demo, Source Code) AGPL-3.0 PHP\n\nSoftware Development - Testing^        back to top        ^\nTools and software for software testing.\n\nBencher - Bencher is a suite of continuous benchmarking tools designed to catch performance regressions in CI. (Source Code) MIT/Apache-2.0 Rust\nDeepfakeHTTP - A web server that uses HTTP dumps as a source for responses. MIT Java\nSelenoid - Lightweight Selenium hub implementation launching browsers within Docker containers. (Source Code) Apache-2.0 Go\nSorry Cypress - Alternative open-source dashboard for the Cypress browser automation framework, featuring unlimited parallelization, recording and debugging of tests. (Source Code) MIT Typescript\nTouca - Continuous regression testing for engineering teams. Get feedback when you write code that could break your software. (Source Code) Apache-2.0 Docker/Nodejs\n\nStatic Site Generators^        back to top        ^\nStatic site generators generate full static HTML websites based on raw data, plain text files and a set of templates.\nPlease visit staticsitegenerators.net, staticgen.com\nStatus &#x2F; Uptime pages^        back to top        ^\nUptime is a measure of system reliability, expressed as the percentage of time a machine, typically a computer, has been working and available.\nRelated: Monitoring\n\ncState - Static status page for hyperfast Hugo. Clean design, minimal JS, super light HTML&#x2F;CSS, high customization, optional admin panel, read-only API, IE8+. Best used with Netlify, Docker. (Demo, Source Code) MIT Go\nGatus - Automated service health dashboard. (Demo) Apache-2.0 Docker\nStatPing.ng - An easy to use Status Page for your websites and applications. Statping will automatically fetch the application and render a beautiful status page with tons of features for you to build an even better status page. (Source Code) GPL-3.0 Docker/Go\nUptime Kuma - Self-hosted website monitoring tool like “Uptime Robot”. (Demo) MIT Nodejs\nVigil - Microservices Status Page. Monitors a distributed infrastructure and sends alerts (Slack, SMS, etc.). (Demo, Source Code) MPL-2.0 Rust/Docker\n\nTask Management &amp; To-do Lists^        back to top        ^\nTask management software.\nRelated: Software Development - Project Management, Ticketing\n\nFocalboard - An open source, self-hosted alternative to Trello, Notion, and Asana. It helps define, organize, track and manage work across individuals and teams. (Source Code, Clients) MIT/AGPL-3.0/Apache-2.0 Nodejs/Go\nKanbana - Create boards to track users and projects from flat markdown files. Forked from Crepido. MIT Nodejs\nKanboard - Simple and open source visual task board. (Source Code) MIT PHP\nMinimalist Online Markdown Editor - The simplest and slickest online Markdown editor. (Source Code) MIT Nodejs\nmyTinyTodo - Simple way to manage your todo list in AJAX style. Uses PHP, jQuery, SQLite&#x2F;MySQL. GTD compliant. (Demo, Source Code) GPL-2.0 PHP\nNullboard - Single-page minimalist kanban board; compact, highly readable and quick to use. BSD-2-Clause Javascript\nOur Shopping List - Simple shared list application. Typical uses include shopping lists of course, and any other small todo-list that needs to be used collaboratively. (Demo) AGPL-3.0 Docker\nPlanka - Open source Trello alternative. (Demo, Source Code) AGPL-3.0 Nodejs\nRestyaboard - Open source Trello-like kanban board. OSL-3.0 PHP\nTask Keeper - List editor for power users, backed by a self-hosted server. Apache-2.0 Scala\nTasks.md - A self-hosted, file based task management board that supports Markdown syntax. MIT Docker\nTaskwarrior - Taskwarrior is Free and Open Source Software that manages your TODO list from your command line. It is flexible, fast, efficient, and unobtrusive. It does its job then gets out of your way. (Source Code) MIT C++\ntodo - Simple todo list manager. (Demo) MIT Go\nTracks - Web-based application to help you implement David Allen’s Getting Things Done™ methodology. (Source Code) GPL-2.0 Ruby\nVikunja - The to-do app to organize your life. (Demo, Source Code) GPL-3.0 Go\nWekan - Open-source Trello-like kanban. (Source Code) MIT Nodejs\n\nTicketing^        back to top        ^\nHelpdesk, bug and issue tracking software to help the tracking of user requests, bugs and missing features.\nRelated: Task Management &amp; To-do Lists, Software Development - Project Management\n\nBugzilla - General-purpose bugtracker and testing tool originally developed and used by the Mozilla project. MPL-2.0 Perl\ndjango-todo - Pluggable, multi-user, multi-group, multi-list todo and ticketing system - a reusable app designed to be dropped into any existing Django project. (Source Code) BSD-3-Clause Python/Django\nErxes - Marketing, sales, and customer service platform designed to help businesses attract more engaged customers. (Source Code) GPL-3.0 Docker\nFreeScout - Open source clone of Help Scout: email-based customer support application, help desk and shared mailbox. AGPL-3.0 PHP\nGlitchTip - Open source error-tracking app. GlitchTip collects errors reported by your app. (Source Code) MIT Python\nIguana - Iguana is an open source issue management system with a kanban board. CC-BY-SA-4.0 Python/Docker\nITFlow - Client IT Documentation, Ticketing, Invoicing and Accounting Web Application for MSPs (Managed Service Providers). (Demo, Source Code) GPL-3.0 PHP\nMantisBT - Self hosted bug tracker, fits best for software development. (Demo, Source Code) GPL-2.0 PHP\nosTicket - Manage, organize and archive all your support requests and responses in one place. (Source Code) GPL-2.0 PHP\nOTOBO - Flexible web-based ticketing system used for Customer Service, Help Desk, IT Service Management. (Demo, Source Code) GPL-3.0 Perl\nPachno - Bring your team together to design, build and deliver your project with a tool that works with you and your team, and adapts when you need to. (Source Code) MPL-2.0 PHP\nPeppermint - A simple ticket management tool with support for logs and multi-deployment. (Source Code) AGPL-3.0 Docker\nRequest Tracker - An enterprise-grade issue tracking system. (Source Code) GPL-2.0 Perl\nRoundup Issue Tracker - A simple-to-use and -install issue-tracking system with command-line, web, REST, XML-RPC, and e-mail interfaces. Designed with flexibility in mind - not just another bug tracker. (Source Code) MIT/ZPL-2.0 Python\nTrudesk - Trudesk is an open-source help desk&#x2F;ticketing solution. (Source Code) Apache-2.0 Nodejs\nZammad - Easy to use but powerful open-source support and ticketing system. (Source Code) AGPL-3.0 Ruby\n\nTime Tracking^        back to top        ^\nTime-tracking software is a category of computer software that allows its users to record time spent on tasks or projects.\n\nActivityWatch - An app that automatically tracks how you spend time on your devices. (Source Code) MPL-2.0 Python\nKimai - Kimai is a free &amp; open source timetracker. It tracks work time and prints out a summary of your activities on demand. (Demo, Source Code) MIT PHP\nTimeTagger - An open source time-tracker based on an interactive timeline and powerful reporting. (Demo, Source Code) GPL-3.0 Python\nTraggo - Traggo is a tag-based time tracking tool. In Traggo there are no tasks, only tagged time spans. (Source Code) GPL-3.0 Docker/Go\n\nURL Shorteners^        back to top        ^\nURL shortening is the action of shortening a URL to make it substantially shorter and still direct to the required page. Before hosting one, please see shortcomings of URL shorteners.\n\nBlink - Easy-to-host, SSO-integrated, CDN-powered link shortener (+decoupled analytics) for teams. (Source Code) AGPL-3.0 Nodejs\nEasyshortener - A simple URL shortener. MIT PHP/Nodejs/Docker\ngoshorly - An easy self-hosted Link shortener in Golang. MIT Go\nJust Short It! - A KISS, single-user URL shortener that runs in just one container. MIT Docker\nKutt - A modern URL shortener with support for custom domains. (Source Code) MIT Nodejs\nliteshort - User-friendly, actually lightweight, and configurable URL shortener. MIT Python\nLstu - Lightweight URL shortener. WTFPL Perl\nLynx - URL shortener with many functions such as multiple accounts, ShareX support and an attractive but simple interface. (Demo, Source Code) MIT Nodejs/Docker\nPastr - Super-minimal URL shortener and paste tool that uses a flat-file storage and has no dependencies. (Demo) MIT Go\nReducePy - URL shortener service using Tornado and Redis runs on Docker and Kubernetes. MIT Python\nschort - No login, no javascript, just short links. CC0-1.0 Python\nShlink - URL shortener with REST API and command line interface. Includes official progressive web application and docker images. (Source Code, Clients) MIT PHP\nshorturl - Simple URL shortener with very tiny URLs. (Demo) MIT Go\nShort{Paste} - A Go based URL shortener, pastebin and file uploader. MIT Docker\nSimple-URL-Shortener - KISS URL shortener, public or private (with account). Minimalist and lightweight. No dependencies. (Demo) MIT PHP\nSimply Shorten - A simple URL shortener that just shortens links. MIT Java\nYOURLS - YOURLS is a set of PHP scripts that will allow you to run Your Own URL Shortener. Features include password protection, URL customization, bookmarklets, statistics, API, plugins, jsonp. (Source Code) MIT PHP\n\nVPN^        back to top        ^\nA virtual private network (VPN) extends a private network across a public network and enables users to send and receive data across shared or public networks as if their computing devices were directly connected to the private network.\nPlease visit awesome-sysadmin&#x2F;VPN\nWeb Servers^        back to top        ^\nA web server is a piece of software and underlying hardware that accepts requests via HTTP (the network protocol created to distribute web content) or its secure variant HTTPS.\nPlease visit awesome-sysadmin&#x2F;Web\nWikis^        back to top        ^\nA wiki is a publication collaboratively edited and managed by its own audience directly using a web browser.\nRelated: Static Site Generators\nSee also: Wikimatrix, Wiki Engines - WikiIndex, List of wiki software - Wikipedia, Comparison of wiki software - Wikipedia\n\nAmuseWiki - Amusewiki is based on the Emacs Muse markup, remaining mostly compatible with the original implementation. It can work as a read-only site, as a moderated wiki, or as a fully open wiki or even as a private site. (Demo, Source Code) GPL-1.0 Perl/Docker\nBookStack - BookStack is a simple, self-hosted, easy-to-use platform for organizing and storing information. It allows for documentation to be stored in a book like fashion. (Demo, Source Code) MIT PHP\ndjango-wiki - Wiki system with complex functionality for simple integration and a superb interface. Store your knowledge with style: Use django models. (Demo) GPL-3.0 Python\nDocumize - Modern Docs + Wiki software with built-in workflow, single binary executable, just bring MySQL&#x2F;Percona. (Source Code) AGPL-3.0 Go\nDokuwiki - Easy to use, lightweight, standards-compliant wiki engine with a simple syntax allowing reading the data outside the wiki. All data is stored in plain text files, therefore no database is required. (Source Code) GPL-2.0 PHP\nGitit - Wiki program that stores pages and uploaded files in a git repository, which can then be modified using the VCS command line tools or the wiki’s web interface. GPL-2.0 Haskell\nGollum - Simple, Git-powered wiki with a sweet API and local frontend. MIT Ruby\nInstiki - Instiki is a wiki clone so pretty and easy to set up, you’ll wonder if it’s really a wiki. Runs on Rails and focuses on portability and stability. (Source Code) Ruby Ruby\nMediawiki - MediaWiki is a free and open-source wiki software package written in PHP. It serves as the platform for Wikipedia and the other Wikimedia projects, used by hundreds of millions of people each month. (Demo, Source Code) GPL-2.0 PHP\nMycorrhiza Wiki - Filesystem and git-based wiki engine written in Go using Mycomarkup as its primary markup language. (Source Code) AGPL-3.0 Go\nOutline ⚠ - An open, extensible, wiki for your team. (Source Code) BSD-3-Clause Nodejs\nPepperminty Wiki - Complete markdown-powered wiki contained in a single PHP file. (Demo) MPL-2.0 PHP\nPineDocs - Simple, fast, customizable and lightweight site for browsing files. GPL-3.0 PHP\nPmWiki - Wiki-based system for collaborative creation and maintenance of websites. GPL-3.0 PHP\nRaneto - Raneto is an open source Knowledgebase platform that uses static Markdown files to power your Knowledgebase. (Source Code) MIT Nodejs\nTiddlyWiki - Reusable non-linear personal web notebook. (Source Code) BSD-3-Clause Nodejs\nTiki - Wiki CMS Groupware with the most built-in features. (Demo, Source Code) LGPL-2.1 PHP\nTWiki - TWiki is a Perl-based structured wiki application, typically used to run a collaboration platform, knowledge or document management system, a knowledge base, or team portal. (Demo, Source Code) GPL-2.0 Perl\nWackoWiki - WackoWiki is a light and easy to install multilingual Wiki-engine. (Source Code) BSD-3-Clause PHP\nWiki.js - Modern, lightweight and powerful wiki app using Git and Markdown. (Demo, Source Code) AGPL-3.0 Nodejs\nwiki - Simple Markdown based wiki engine. (Demo) MIT Go\nWiKiss - Wiki, simple to use and install. (Source Code) GPL-2.0 PHP\nWikmd - Modern and simple file based wiki that uses Markdown and Git. MIT Python\nXWiki - Second generation wiki that allows the user to extend its functionalities with a powerful extension-based architecture. (Demo, Source Code) LGPL-2.1 Java\nZim - Graphical text editor used to maintain a collection of wiki pages. Each page can contain links to other pages, simple formatting and images. (Source Code) GPL-2.0 Python\n\n\nList of Licenses^        back to top        ^\n\n0BSD - BSD Zero-Clause Licence\nAAL - Attribution Assurance License\nAGPL-3.0 - GNU Affero General Public License 3.0\nApache-2.0 - Apache, Version 2.0\nAPSL-2.0 - Apple Public Source License, Version 2.0\nArtistic-2.0 - Artistic License Version 2.0\nBeerware - Beerware License\nBSD-2-Clause - BSD 2-clause “Simplified”\nBSD-2-Clause-FreeBSD - BSD 2-Clause FreeBSD License\nBSD-3-Clause - BSD 3-Clause “New” or “Revised”\nBSD-3-Clause-Attribution - BSD with attribution\nBSD-4-Clause - BSD 4-clause “Original”\nCC-BY-SA-3.0 - Creative Commons Attribution-ShareAlike 3.0 License\nCC-BY-SA-4.0 - Creative Commons Attribution-ShareAlike 4.0 License\nCC0-1.0 - Public Domain&#x2F;Creative Common Zero 1.0\nCDDL-1.0 - Common Development and Distribution License\nCECILL-B - CEA CNRS INRIA Logiciel Libre\nCPAL-1.0 - Common Public Attribution License Version 1.0\nECL-2.0 - Educational Community License, Version 2.0\nEPL-1.0 - Eclipse Public License, Version 1.0\nEPL-2.0 - Eclipse Public License, Version 2.0\nEUPL-1.2 - European Union Public License 1.2\nGPL-1.0 - GNU General Public License 1.0\nGPL-2.0 - GNU General Public License 2.0\nGPL-3.0 - GNU General Public License 3.0\nIPL-1.0 - IBM Public License\nISC - Internet Systems Consortium License\nLIL-1.0 - The Lil License v1\nLGPL-2.1 - Lesser General Public License 2.1\nLGPL-3.0 - Lesser General Public License 3.0\nMIT - MIT License\nMPL-1.1 - Mozilla Public License Version 1.1\nMPL-2.0 - Mozilla Public License\nOSL-3.0 - Open Software License 3.0\nSendmail - Sendmail License\nRuby - Ruby License\nUnlicense - The Unlicense\nWTFPL - Do What the Fuck You Want to Public License\nZlib - Zlib&#x2F;libpng License\nZPL-2.0 - Zope Public License 2.0\n\n\nAnti-features\n⚠  - Depends on a proprietary service outside the user’s control\n\n\nExternal Links^        back to top        ^\n\nAwesome Sysadmin - Curated list of amazingly awesome open source sysadmin resources.\nLists of software aimed at privacy and decentralization in some form: PRISM Break, privacytools.io, Alternative Internet, Libre Projects, Easy Indie App\nOther Awesome lists: Awesome Big Data, Awesome Public Datasets\nDynamic Domain Name services: Afraid.org, Pagekite\nCommunities&#x2F;forums: &#x2F;c&#x2F;selfhosted on lemmy.world, &#x2F;c&#x2F;selfhost on lemmy.ml, &#x2F;m&#x2F;selfhosted on kbin.social, &#x2F;r&#x2F;selfhosted on reddit, r-selfhosted forum, &#x2F;r&#x2F;selfhosted Matrix Channel, Homelab forum, &#x2F;r&#x2F;homelab on reddit, IndieWeb\nMirrors: GitHub.com, Gitlab.com\ntheme.park - A collection of themes&#x2F;skins for 50 selfhosted apps! (Source Code) MIT CSS\nTrack Awesome Selfhosted - Get the latest updates of awesome-selfhosted.\n\n\nContributingContributing guidelines can be found in .github&#x2F;CONTRIBUTING.md.\nAuthorsThe list of authors can be found in the AUTHORS file.\nLicenseThis list is under the Creative Commons Attribution-ShareAlike 3.0 Unported License.\n", "slug": "awesome-selfhosted", "date": "2023-07-28 09:29:00", "categories_index": "Devops", "tags_index": "self-hosted", "author_index": "倪传方"}, {"id": "00fb2df139ade064036e614bfc314c4c", "title": "python学习之re模块", "content": "一、正则表达式正则表达式本身是一种小型的、高度专业化的编程语言，它并不是 Python 的一部分。正则表达式是用于处理字符串的强大工具，拥有自己独特的语法以及一个独立的处理引擎，效率上可能不如 str 自带的方法，但功能十分强大。得益于这一点，在提供了正则表达式的语言里，正则表达式的语法都是一样的，区别只在于不同的编程语言实现支持的语法数量不同；但不用担心，不被支持的语法通常是不常用的部分。如果已经在其他语言里使用过正则表达式，只需要简单看一看就可以上手了。而在 python 中，通过内嵌集成 re 模块，程序员们可以直接调用来实现正则匹配。正则表达式模式被编译成一系列的字节码，然后由用 C 编写的匹配引擎执行。\n1.1 数量词的贪婪模式与非贪婪模式正则表达式通常用于在文本中查找匹配的字符串。Python 里数量词默认是贪婪的（在少数语言里也可能是默认非贪婪），总是尝试匹配尽可能多的字符；非贪婪的则相反，总是尝试匹配尽可能少的字符。例如：正则表达式”ab*”如果用于查找”abbbc”，将找到”abbb”。而如果使用非贪婪的数量词”ab*?”，将找到”a”。\n1.2 反斜杠的困扰与大多数编程语言相同，正则表达式里使用\\作为转义字符，这就可能造成反斜杠困扰。假如你需要匹配文本中的字符\\，那么使用编程语言表示的正则表达式里将需要 4 个反斜杠\\\\\\\\：前两个和后两个分别用于在编程语言里转义成反斜杠，转换成两个反斜杠后再在正则表达式里转义成一个反斜杠。Python 里的原生字符串很好地解决了这个问题，这个例子中的正则表达式可以使用r&#39;\\\\&#39;表示。同样，匹配一个数字的\\\\d可以写成r&#39;\\d&#39;。有了原生字符串，你再也不用担心是不是漏写了反斜杠，写出来的表达式也更直观。\n1.3 匹配模式正则表达式提供了一些可用的匹配模式，比如忽略大小写、多行匹配等，这部分内容将在 Pattern 类的工厂方法 re.compile(pattern[, flags])中一起介绍。\n二、re 模块的基本使用正则表达式是用来匹配处理字符串的 python 中使用正则表达式需要引入 re 模块\nimport re  # 第一步，要引入re模块\na &#x3D; re.findall(&quot;匹配规则&quot;, &quot;这个字符串是否有匹配规则的字符&quot;)  # 第二步，调用模块函数\nprint(a)  # 以列表形式返回匹配到的字符串\n[&#39;匹配规则&#39;]\n\n^元字符\n字符串开始位置与匹配规则符合就匹配，否则不匹配\n匹配字符串开头。在多行模式中匹配每一行的开头（Python3+已经失效，配合 compile 使用）\n^元字符如果写到[]字符集里就是反取\nimport re\na &#x3D; re.findall(&quot;^匹配规则&quot;, &quot;匹配规则这个字符串是否匹配&quot;)  # 字符串开始位置与匹配规则符合就匹配，否则不匹配\nprint(a)\n#打印出 [&#39;匹配规则&#39;]\n[&#39;匹配规则&#39;]\n\n[^a-z]反取\n匹配出除字母外的字符，^元字符如果写到字符集里就是反取\nimport re\na &#x3D; re.findall(&quot;[^a-z]&quot;, &quot;匹配s规则这s个字符串是否s匹配f规则则re则则则&quot;)  # 反取，匹配出除字母外的字符\nprint(a)\nCopy[&#39;匹&#39;, &#39;配&#39;, &#39;规&#39;, &#39;则&#39;, &#39;这&#39;, &#39;个&#39;, &#39;字&#39;, &#39;符&#39;, &#39;串&#39;, &#39;是&#39;, &#39;否&#39;, &#39;匹&#39;, &#39;配&#39;, &#39;规&#39;, &#39;则&#39;, &#39;则&#39;, &#39;则&#39;, &#39;则&#39;, &#39;则&#39;]\n\n$元字符\n字符串结束位置与匹配规则符合就匹配，否则不匹配\n匹配字符串末尾，在多行模式中匹配每一行的末尾\nimport re\na &#x3D; re.findall(&quot;匹配规则$&quot;, &quot;这个字符串是否匹配规则&quot;)  # 字符串结束位置与匹配规则符合就匹配，否则不匹配\nprint(a)\n[&#39;匹配规则&#39;]\n\n*元字符\n需要字符串里完全符合，匹配规则，就匹配，（规则里的*元字符）前面的一个字符可以是 0 个或多个原本字符\n匹配前一个字符 0 或多次，贪婪匹配前导字符有多少个就匹配多少个很贪婪\n如果规则里只有一个分组，尽量避免用*否则会有可能匹配出空字符串\nimport re\n# 需要字符串里完全符合，匹配规则，就匹配，（规则里的*元字符）前面的一个字符可以是0或多个原本字符\na &#x3D; re.findall(&quot;匹配规则*&quot;, &quot;这个字符串是否匹配规则则则则则&quot;)\nprint(a)\n[&#39;匹配规则则则则则&#39;]\n\n+元字符\n需要字符串里完全符合，匹配规则，就匹配，（规则里的+元字符）前面的一个字符可以是 1 个或多个原本字符\n匹配前一个字符 1 次或无限次，贪婪匹配前导字符有多少个就匹配多少个很贪婪\nimport re\n# 需要字符串里完全符合，匹配规则，就匹配，（规则里的+元字符）前面的一个字符可以是1个或多个原本字符\na &#x3D; re.findall(&quot;匹配+&quot;, &quot;匹配配配配配规则这个字符串是否匹配规则则则则则&quot;)\nprint(a)\n[&#39;匹配配配配配&#39;, &#39;匹配&#39;]\n\n?元字符(防止贪婪匹配)\n需要字符串里完全符合，匹配规则，就匹配，（规则里的?元字符）前面的一个字符可以是 0 个或 1 个原本字符\n匹配一个字符 0 次或 1 次\n还有一个功能是可以防止贪婪匹配，详情见防贪婪匹配\nimport re\n# 需要字符串里完全符合，匹配规则，就匹配，（规则里的?元字符）前面的一个字符可以是0个或1个原本字符\na &#x3D; re.findall(&quot;匹配规则?&quot;, &quot;匹配规这个字符串是否匹配规则则则则则&quot;)\nprint(a)\n[&#39;匹配规&#39;, &#39;匹配规则&#39;]\n\n{}元字符(范围)\n需要字符串里完全符合，匹配规则，就匹配，（规则里的 {} 元字符）前面的一个字符，是自定义字符数，位数的原本字符\n{m}匹配前一个字符 m 次，{m,n}匹配前一个字符 m 至 n 次，若省略 n，则匹配 m 至无限次\n{0,}匹配前一个字符 0 或多次,等同于*元字符{+,}匹配前一个字符 1 次或无限次,等同于+元字符{0,1}匹配前一个字符 0 次或 1 次,等同于?元字符\nimport re\n# &#123;m&#125;匹配前一个字符m次，&#123;m,n&#125;匹配前一个字符m至n次，若省略n，则匹配m至无限次\na &#x3D; re.findall(&quot;匹配规则&#123;3&#125;&quot;, &quot;匹配规这个字符串是否匹配规则则则则则&quot;)\nprint(a)\n[&#39;匹配规则则则&#39;]\n\n[]元字符(字符集)\n需要字符串里完全符合，匹配规则，就匹配，（规则里的 [] 元字符）对应位置是[]里的任意一个字符就匹配\n字符集。对应的位置可以是字符集中任意字符。字符集中的字符可以逐个列出，也可以给出范围，如[abc]或[a-c]。[^abc]表示取反，即非 abc。所有特殊字符在字符集中都失去其原有的特殊含义。用\\反斜杠转义恢复特殊字符的特殊含义。\nimport re\n# 需要字符串里完全符合，匹配规则，就匹配，（规则里的 [] 元字符）对应位置是[]里的任意一个字符就匹配\na &#x3D; re.findall(&quot;匹配[a,b,c]规则&quot;, &quot;匹配a规则这个字符串是否匹配b规则则则则则&quot;)\nprint(a)\n[&#39;匹配a规则&#39;, &#39;匹配b规则&#39;]\n\n[^]\n非，反取，匹配出除[]里面的字符，元字符如果写到字符集里就是反取\nCopyimport re\na &#x3D; re.findall(&quot;[^a-z]&quot;, &quot;匹配s规则这s个字符串是否s匹配f规则则re则则则&quot;)  # 反取，匹配出除字母外的字符\nprint(a)\nCopy[&#39;匹&#39;, &#39;配&#39;, &#39;规&#39;, &#39;则&#39;, &#39;这&#39;, &#39;个&#39;, &#39;字&#39;, &#39;符&#39;, &#39;串&#39;, &#39;是&#39;, &#39;否&#39;, &#39;匹&#39;, &#39;配&#39;, &#39;规&#39;, &#39;则&#39;, &#39;则&#39;, &#39;则&#39;, &#39;则&#39;, &#39;则&#39;]\n\n反斜杠后边跟普通字符实现特殊功能(预定义字符)\n预定义字符是在字符集和组里都是有用的\n\\d 匹配任何十进制数，它相当于类[0-9]\nimport re\na &#x3D; re.findall(&quot;\\d&quot;, &quot;匹配规则这2个字符串3是否匹配规则5则则则7则&quot;)  # \\d匹配任何十进制数，它相当于类[0-9]\nprint(a)\n[&#39;2&#39;, &#39;3&#39;, &#39;5&#39;, &#39;7&#39;]\n\n\\d+\n匹配一位或者多位数的数字时用\nimport re\na &#x3D; re.findall(&quot;\\d+&quot;, &quot;匹配规则这2个字符串134444是否匹配规则5则则则7则&quot;)  # \\d+如果需要匹配一位或者多位数的数字时用\nprint(a)\n[&#39;2&#39;, &#39;134444&#39;, &#39;5&#39;, &#39;7&#39;]\n\n\\D\n匹配任何非数字字符，它相当于类[^0-9]\nimport re\na &#x3D; re.findall(&quot;\\D&quot;, &quot;匹配规则这2个字符串3是否匹配规则5则则则7则&quot;)  # \\D匹配任何非数字字符，它相当于类[^0-9]\nprint(a)\n[&#39;匹&#39;, &#39;配&#39;, &#39;规&#39;, &#39;则&#39;, &#39;这&#39;, &#39;个&#39;, &#39;字&#39;, &#39;符&#39;, &#39;串&#39;, &#39;是&#39;, &#39;否&#39;, &#39;匹&#39;, &#39;配&#39;, &#39;规&#39;, &#39;则&#39;, &#39;则&#39;, &#39;则&#39;, &#39;则&#39;, &#39;则&#39;]\n\n\\s\n匹配任何空白字符，它相当于类[\\t\\n\\r\\f\\v]\nimport re\n# \\s匹配任何空白字符，它相当于类[\\t\\n\\r\\f\\v]\na &#x3D; re.findall(&quot;\\s&quot;, &quot;匹配规则   这2个字符串3是否匹\\n配规则5则则则7则&quot;)\nprint(a)\n[&#39; &#39;, &#39; &#39;, &#39; &#39;, &#39;\\n&#39;]\n\n\\S\n匹配任何非空白字符，它相当于类[^\\t\\n\\r\\f\\v]\nimport re\n# \\S匹配任何非空白字符，它相当于类[^\\t\\n\\r\\f\\v]\na &#x3D; re.findall(&quot;\\S&quot;, &quot;匹配规则   这2个字符串3是否匹\\n配规则5则则则7则&quot;)\nprint(a)\n[&#39;匹&#39;, &#39;配&#39;, &#39;规&#39;, &#39;则&#39;, &#39;这&#39;, &#39;2&#39;, &#39;个&#39;, &#39;字&#39;, &#39;符&#39;, &#39;串&#39;, &#39;3&#39;, &#39;是&#39;, &#39;否&#39;, &#39;匹&#39;, &#39;配&#39;, &#39;规&#39;, &#39;则&#39;, &#39;5&#39;, &#39;则&#39;, &#39;则&#39;, &#39;则&#39;, &#39;7&#39;, &#39;则&#39;]\n\n\\w\n匹配包括下划线在内任何字母数字字符，它相当于类[a-zA-Z0-9_]\nimport re\n# \\w匹配包括下划线在内任何字母数字字符，它相当于类[a-zA-Z0-9_]\na &#x3D; re.findall(&#39;\\w&#39;, &quot;https:&#x2F;&#x2F;www.cnblogs.com&#x2F;&quot;)\nprint(a)\n[&#39;h&#39;, &#39;t&#39;, &#39;t&#39;, &#39;p&#39;, &#39;s&#39;, &#39;w&#39;, &#39;w&#39;, &#39;w&#39;, &#39;c&#39;, &#39;n&#39;, &#39;b&#39;, &#39;l&#39;, &#39;o&#39;, &#39;g&#39;, &#39;s&#39;, &#39;c&#39;, &#39;o&#39;, &#39;m&#39;]\n\n\\W\n匹配非任何字母数字字符包括下划线在内，它相当于类[^a-zA-Z0-9_]\nimport re\n# \\w匹配包括下划线在内任何字母数字字符，它相当于类[a-zA-Z0-9_]\na &#x3D; re.findall(&#39;\\W&#39;, &quot;https:&#x2F;&#x2F;www.cnblogs.com&#x2F;&quot;)\nprint(a)\n[&#39;:&#39;, &#39;&#x2F;&#39;, &#39;&#x2F;&#39;, &#39;.&#39;, &#39;.&#39;, &#39;&#x2F;&#39;]\n\n()元字符(分组)\n也就是分组匹配，()里面的为一个组也可以理解成一个整体\n如果()后面跟的是特殊元字符如 (adc)* 那么*控制的前导字符就是()里的整体内容，不再是前导一个字符\nimport re\n# 也就是分组匹配，()里面的为一个组也可以理解成一个整体\na &#x3D; re.search(&quot;(a4)+&quot;, &quot;a4a4a4a4a4dg4g654gb&quot;)  # 匹配一个或多个a4\nb &#x3D; a.group()\nprint(b)\na4a4a4a4a4\nimport re\n# 也就是分组匹配，()里面的为一个组也可以理解成一个整体\n# 匹配 (a) (\\d0-9的数字) (+可以是1个到多个0-9的数字)\na &#x3D; re.search(&quot;a(\\d+)&quot;, &quot;a466666664a4a4a4dg4g654gb&quot;)\nb &#x3D; a.group()\nprint(b)\na466666664\n\n|元字符(或)\n|或，或就是前后其中一个符合就匹配\nimport re\na &#x3D; re.findall(r&quot;你|好&quot;, &quot;a4a4a你4aabc4a4dgg好dg4g654g&quot;)  # |或，或就是前后其中一个符合就匹配\nprint(a)\n[&#39;你&#39;, &#39;好&#39;]\n\n三、re 模块中常用功能函数3.1 正则表达式的两种书写方式1.一种是直接在函数里书写规则，推荐使用\nimport re\na &#x3D; re.findall(&quot;匹配规则&quot;, &quot;这个字符串是否有匹配规则的字符&quot;)\n[&#39;匹配规则&#39;]\n\n2.另一种是先将正则表达式的字符串形式编译为 Pattern 实例，然后使用 Pattern 实例处理文本并获得匹配结果（一个 Match 实例），最后使用 Match 实例获得信息，进行其他的操作。\nimport re\n\n# 将正则表达式编译成Pattern对象\npattern &#x3D; re.compile(r&#39;hello&#39;)\n\n# 使用Pattern匹配文本，获得匹配结果，无法匹配时将返回None\nmatch &#x3D; pattern.match(&#39;hello world!&#39;)\n\nif match:\n    # 使用Match获得分组信息\n    print(match.group())\nhello\n\n3.2 re.compile(strPattern[, flag])函数这个方法是 Pattern 类的工厂方法，用于将字符串形式的正则表达式编译为 Pattern 对象。 第二个参数 flag 是匹配模式，取值可以使用按位或运算符’|’表示同时生效，比如 re.I | re.M。另外，你也可以在 regex 字符串中指定模式，比如 re.compile(‘pattern’, re.I | re.M)与 re.compile(‘(?im)pattern’)是等价的。\n下表是所有的正则匹配模式：\n\n\n\n修饰符\n描述\n\n\n\nre.I\n使匹配对大小写不敏感\n\n\nre.L\n做本地化识别（locale-aware）匹配\n\n\nre.M\n多行匹配，影响 ^ 和 $\n\n\nre.S\n使 . 匹配包括换行在内的所有字符\n\n\nre.U\n根据 Unicode 字符集解析字符。这个标志影响 \\w, \\W, \\b, \\B.\n\n\nre.X\n该标志通过给予你更灵活的格式以便你将正则表达式写得更易于理解。\n\n\n3.2.1 re.S\n在 Python 的正则表达式中，有一个参数为 re.S。它表示 “.” 的作用扩展到整个字符串，包括“\\n”。看如下代码：\n\nimport re\na &#x3D; &#39;&#39;&#39;asdfhellopass:\n    worldaf\n    &#39;&#39;&#39;\nb &#x3D; re.findall(&#39;hello(.*?)world&#39;, a)\nc &#x3D; re.findall(&#39;hello(.*?)world&#39;, a, re.S)\nprint(&#39;b is &#39;, b)\nprint(&#39;c is &#39;, c)\nb is  []\nc is  [&#39;pass:\\n    &#39;]\n\n正则表达式中，“.”的作用是匹配除“\\n”以外的任何字符，也就是说，它是在一行中进行匹配。这里的“行”是以“\\n”进行区分的。a 字符串有每行的末尾有一个“\\n”，不过它不可见。\n如果不使用 re.S 参数，则只在每一行内进行匹配，如果一行没有，就换下一行重新开始，不会跨行。而使用 re.S 参数以后，正则表达式会将这个字符串作为一个整体，将“\\n”当做一个普通的字符加入到这个字符串中，在整体中进行匹配。\n3.2.2 re.I\n不区分大小写\n\nres &#x3D; re.findall(r&quot;A&quot;, &quot;abc&quot;, re.I)\nprint(res)\n[&#39;a&#39;]\n\n3.2.3 re.M\n将所有行的尾字母输出（python3+已经无效）\n\ns &#x3D; &#39;12 34&#x2F;n56 78&#x2F;n90&#39;\n\nre.findall(r&#39;^&#x2F;d+&#39;, s, re.M)  # 匹配位于行首的数字  # [&#39;12&#39;, &#39;56&#39;, &#39;90&#39;]\nre.findall(r&#39;&#x2F;A&#x2F;d+&#39;, s, re.M)  # 匹配位于字符串开头的数字  # [&#39;12&#39;]\nre.findall(r&#39;&#x2F;d+$&#39;, s, re.M)  # 匹配位于行尾的数字  # [&#39;34&#39;, &#39;78&#39;, &#39;90&#39;]\nre.findall(r&#39;&#x2F;d+&#x2F;Z&#39;, s, re.M)  # 匹配位于字符串尾的数字  # [&#39;90&#39;]\n\n3.2.4 re.sub# 要求结果：[&#39;12&#39;, &#39;23&#39;, &#39;34&#39;]\nl &#x3D; [&#39;1 2 &#39;, &#39;2   3&#39;, &#39;  3 4&#39;]\nimport re\nprint(eval(re.sub(r&#39;\\s*&#39;, &#39;&#39;, str(l))))\n[&#39;12&#39;, &#39;23&#39;, &#39;34&#39;]\n\n3.3 re.match(pattern, string[, flags])函数(常用)match，从头匹配一个符合规则的字符串，从起始位置开始匹配，匹配成功返回一个对象，未匹配成功返回 Nonematch(pattern, string, flags&#x3D;0)\n\npattern： 正则模型\nstring ： 要匹配的字符串\nfalgs ： 匹配模式\n\n注意：match()函数 与 search()函数基本是一样的功能，不一样的就是 match()匹配字符串开始位置的一个符合规则的字符串，search()是在字符串全局匹配第一个合规则的字符串\nimport re\n# 无分组\norigin &#x3D; &quot;hello egon bcd egon lge egon acd 19&quot;\nr &#x3D; re.match(&quot;h\\w+&quot;, origin)  # match，从起始位置开始匹配，匹配成功返回一个对象，未匹配成功返回None\nprint(r.group())  # 获取匹配到的所有结果，不管有没有分组将匹配到的全部拿出来\nprint(r.groups())  # 获取模型中匹配到的分组结果，只拿出匹配到的字符串中分组部分的结果\nprint(r.groupdict())  # 获取模型中匹配到的分组结果，只拿出匹配到的字符串中分组部分定义了key的组结果\nhello\n()\n&#123;&#125;\n# 有分组\n# 为何要有分组？提取匹配成功的指定内容（先匹配成功全部正则，再匹配成功的局部内容提取出来）\nr &#x3D; re.match(&quot;h(\\w+)&quot;, origin)  # match，从起始位置开始匹配，匹配成功返回一个对象，未匹配成功返回None\nprint(r.group())  # 获取匹配到的所有结果，不管有没有分组将匹配到的全部拿出来\nprint(r.groups())  # 获取模型中匹配到的分组结果，只拿出匹配到的字符串中分组部分的结果\nprint(r.groupdict())  # 获取模型中匹配到的分组结果，只拿出匹配到的字符串中分组部分定义了key的组结果\nhello\n(&#39;ello&#39;,)\n&#123;&#125;\n# 有两个分组定义了key\n# 为何要有分组？提取匹配成功的指定内容（先匹配成功全部正则，再匹配成功的局部内容提取出来）\n# ?P&lt;&gt;定义组里匹配内容的key(键)，&lt;&gt;里面写key名称，值就是匹配到的内容\nr &#x3D; re.match(&quot;(?P&lt;n1&gt;h)(?P&lt;n2&gt;\\w+)&quot;, origin)\nprint(r.group())  # 获取匹配到的所有结果，不管有没有分组将匹配到的全部拿出来\nprint(r.groups())  # 获取模型中匹配到的分组结果，只拿出匹配到的字符串中分组部分的结果\nprint(r.groupdict())  # 获取模型中匹配到的分组结果，只拿出匹配到的字符串中分组部分定义了key的组结果\nhello\n(&#39;h&#39;, &#39;ello&#39;)\n&#123;&#39;n1&#39;: &#39;h&#39;, &#39;n2&#39;: &#39;ello&#39;&#125;\n\n3.4 分组函数?P&lt;n1&gt; # ?P&lt;&gt;定义组里匹配内容的 key(键)，&lt;&gt;里面写 key 名称，值就是匹配到的内容（只对正则函数返回对象时有用）\n取出匹配对象方法\n只对正则函数返回对象的有用\n\ngroup() # 获取匹配到的所有结果，不管有没有分组将匹配到的全部拿出来，有参取匹配到的第几个如 2\ngroups() # 获取模型中匹配到的分组结果，只拿出匹配到的字符串中分组部分的结果\ngroupdict() # 获取模型中匹配到的分组结果，只拿出匹配到的字符串中分组部分定义了 key 的组结果\n\n3.5 re.search(pattern, string[, flags])函数search,浏览全部字符串，匹配第一符合规则的字符串，浏览整个字符串去匹配第一个，未匹配成功返回 None\nsearch(pattern, string, flags&#x3D;0)\n\npattern： 正则模型\nstring ： 要匹配的字符串\nfalgs ： 匹配模式\n\n注意：match()函数 与 search()函数基本是一样的功能，不一样的就是 match()匹配字符串开始位置的一个符合规则的字符串，search()是在字符串全局匹配第一个合规则的字符串\nimport re\n# 无分组\norigin &#x3D; &quot;hello alex bcd alex lge alex acd 19&quot;\n# search浏览全部字符串，匹配第一符合规则的字符串，浏览整个字符串去匹配第一个，未匹配成功返回None\nr &#x3D; re.search(&quot;a\\w+&quot;, origin)\nprint(r.group())  # 获取匹配到的所有结果，不管有没有分组将匹配到的全部拿出来\nprint(r.groups())  # 获取模型中匹配到的分组结果，只拿出匹配到的字符串中分组部分的结果\nprint(r.groupdict())  # 获取模型中匹配到的分组结果，只拿出匹配到的字符串中分组部分定义了key的组结果\nalex\n()\n&#123;&#125;\n# 有分组\n# 为何要有分组？提取匹配成功的指定内容（先匹配成功全部正则，再匹配成功的局部内容提取出来）\nr &#x3D; re.search(&quot;a(\\w+).*(\\d)&quot;, origin)\nprint(r.group())  # 获取匹配到的所有结果，不管有没有分组将匹配到的全部拿出来\nprint(r.groups())  # 获取模型中匹配到的分组结果，只拿出匹配到的字符串中分组部分的结果\nprint(r.groupdict())  # 获取模型中匹配到的分组结果，只拿出匹配到的字符串中分组部分定义了key的组结果\nalex bcd alex lge alex acd 19\n(&#39;lex&#39;, &#39;9&#39;)\n&#123;&#125;\n# 有两个分组定义了key\n# 为何要有分组？提取匹配成功的指定内容（先匹配成功全部正则，再匹配成功的局部内容提取出来）\n# ?P&lt;&gt;定义组里匹配内容的key(键)，&lt;&gt;里面写key名称，值就是匹配到的内容\nr &#x3D; re.search(&quot;a(?P&lt;n1&gt;\\w+).*(?P&lt;n2&gt;\\d)&quot;, origin)\nprint(r.group())  # 获取匹配到的所有结果，不管有没有分组将匹配到的全部拿出来\nprint(r.groups())  # 获取模型中匹配到的分组结果，只拿出匹配到的字符串中分组部分的结果\nprint(r.groupdict())  # 获取模型中匹配到的分组结果，只拿出匹配到的字符串中分组部分定义了key的组结果\nalex bcd alex lge alex acd 19\n(&#39;lex&#39;, &#39;9&#39;)\n&#123;&#39;n1&#39;: &#39;lex&#39;, &#39;n2&#39;: &#39;9&#39;&#125;\n\n3.6 re.findall(pattern, string[, flags])函数(常用)findall(pattern, string, flags&#x3D;0)\n\npattern： 正则模型\nstring ： 要匹配的字符串\nfalgs ： 匹配模式\n\n浏览全部字符串，匹配所有合规则的字符串，匹配到的字符串放到一个列表中，未匹配成功返回空列表\n注意：一旦匹配成，再次匹配，是从前一次匹配成功的，后面一位开始的，也可以理解为匹配成功的字符串，不在参与下次匹配\nimport re\n# 无分组\nr &#x3D; re.findall(&quot;\\d+\\w\\d+&quot;, &quot;a2b3c4d5&quot;)  # 浏览全部字符串，匹配所有合规则的字符串，匹配到的字符串放到一个列表中\nprint(r)  # 注意：匹配成功的字符串，不在参与下次匹配,所以3c4也符合规则但是没匹配到\n[&#39;2b3&#39;, &#39;4d5&#39;]\n\n注意：如果没写匹配规则，也就是空规则，返回的是一个比原始字符串多一位的，空字符串列表\nimport re\n# 无分组\nr &#x3D; re.findall(&quot;&quot;, &quot;a2b3c4d5&quot;)  # 浏览全部字符串，匹配所有合规则的字符串，匹配到的字符串放到一个列表中\nprint(r)  # 注意：如果没写匹配规则，也就是空规则，返回的是一个比原始字符串多一位的，空字符串列表\n[&#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;]\n\n注意：正则匹配到空字符的情况，如果规则里只有一个组，而组后面是就表示组里的内容可以是 0 个或者多过，这样组里就有了两个意思，一个意思是匹配组里的内容，二个意思是匹配组里 0 内容（即是空白）所以尽量避免用否则会有可能匹配出空字符串\n注意：正则只拿组里最后一位，如果规则里只有一个组，匹配到的字符串里在拿组内容是，拿的是匹配到的内容最后一位\nimport re\norigin &#x3D; &quot;hello alex bcd alex lge alex acd 19&quot;\nr &#x3D; re.findall(&quot;(a)*&quot;, origin)\nprint(r)\n[&#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;a&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;a&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;a&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;a&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;]\n\n无分组：匹配所有合规则的字符串，匹配到的字符串放到一个列表中\nimport re\n# 无分组\norigin &#x3D; &quot;hello alex bcd alex lge alex acd 19&quot;\nr &#x3D; re.findall(&quot;a\\w+&quot;, origin)  # 浏览全部字符串，匹配所有合规则的字符串，匹配到的字符串放到一个列表中\nprint(r)\n[&#39;alex&#39;, &#39;alex&#39;, &#39;alex&#39;, &#39;acd&#39;]\n\n有分组：只将匹配到的字符串里，组的部分放到列表里返回，相当于 groups()方法\nimport re\norigin &#x3D; &quot;hello alex bcd alex lge alex acd 19&quot;\nr &#x3D; re.findall(&quot;a(\\w+)&quot;, origin)  # 有分组：只将匹配到的字符串里，组的部分放到列表里返回\nprint(r)\n[&#39;lex&#39;, &#39;lex&#39;, &#39;lex&#39;, &#39;cd&#39;]\n\n多个分组：只将匹配到的字符串里，组的部分放到一个元组中，最后将所有元组放到一个列表里返\n相当于在 group()结果里再将组的部分，分别，拿出来放入一个元组，最后将所有元组放入一个列表返回\nimport re\norigin &#x3D; &quot;hello alex bcd alex lge alex acd 19&quot;\n# 多个分组：只将匹配到的字符串里，组的部分放到一个元组中，最后将所有元组放到一个列表里返回\nr &#x3D; re.findall(&quot;(a)(\\w+)&quot;, origin)\nprint(r)\n[(&#39;a&#39;, &#39;lex&#39;), (&#39;a&#39;, &#39;lex&#39;), (&#39;a&#39;, &#39;lex&#39;), (&#39;a&#39;, &#39;cd&#39;)]\n\n分组中有分组：只将匹配到的字符串里，组的部分放到一个元组中，先将包含有组的组，看作一个整体也就是一个组，把这个整体组放入一个元组里，然后在把组里的组放入一个元组，最后将所有组放入一个列表返回\nimport re\norigin &#x3D; &quot;hello alex bcd alex lge alex acd 19&quot;\n# 分组中有分组：只将匹配到的字符串里，组的部分放到一个元组中，先将包含有组的组，看作一个整体也就是一个组，把这个整体组放入一个元组里，然后在把组里的组放入一个元组，最后将所有组放入一个列表返回\nr &#x3D; re.findall(&quot;(a)(\\w+(e))&quot;, origin)\nprint(r)\n[(&#39;a&#39;, &#39;le&#39;, &#39;e&#39;), (&#39;a&#39;, &#39;le&#39;, &#39;e&#39;), (&#39;a&#39;, &#39;le&#39;, &#39;e&#39;)]\n\n?:在有分组的情况下 findall()函数，不只拿分组里的字符串，拿所有匹配到的字符串，注意?:只用于不是返回正则对象的函数如 findall()\nimport re\norigin &#x3D; &quot;hello alex bcd alex lge alex acd 19&quot;\n# ?:在有分组的情况下，不只拿分组里的字符串，拿所有匹配到的字符串，注意?:只用于不是返回正则对象的函数如findall()\nb &#x3D; re.findall(&quot;a(?:\\w+)&quot;, origin)\nprint(b)\n[&#39;alex&#39;, &#39;alex&#39;, &#39;alex&#39;, &#39;acd&#39;]\n\n3.7 re.split(pattern, string[, maxsplit])函数根据正则匹配分割字符串，返回分割后的一个列表\nsplit(pattern, string, maxsplit&#x3D;0, flags&#x3D;0)\n\npattern： 正则模型\nstring ： 要匹配的字符串\nmaxsplit：指定分割个数\nflags ： 匹配模式\n\n按照一个字符将全部字符串进行分割\nimport re\norigin &#x3D; &quot;hello alex bcd alex lge alex acd 19&quot;\nr &#x3D; re.split(&quot;a&quot;, origin)  # 根据正则匹配分割字符串\nprint(r)\n[&#39;hello &#39;, &#39;lex bcd &#39;, &#39;lex lge &#39;, &#39;lex &#39;, &#39;cd 19&#39;]\n\n将匹配到的字符串作为分割标准进行分割\nimport re\norigin &#x3D; &quot;hello alex bcd alex lge alex 2acd 19&quot;\nr &#x3D; re.split(&quot;a\\w+&quot;, origin)  # 根据正则匹配分割字符串\nprint(r)\n[&#39;hello &#39;, &#39; bcd &#39;, &#39; lge &#39;, &#39; 2&#39;, &#39; 19&#39;]\n\n3.8 re.sub(pattern, repl, string[, count])函数替换匹配成功的指定位置字符串\nsub(pattern, repl, string, count&#x3D;0, flags&#x3D;0)\n\npattern： 正则模型\nrepl ： 要替换的字符串\nstring ： 要匹配的字符串\ncount ： 指定匹配个数\nflags ： 匹配模式\n\nimport re\norigin &#x3D; &quot;hello alex bcd alex lge alex acd 19&quot;\nr &#x3D; re.sub(&quot;a&quot;, &quot;替换&quot;, origin)  # 替换匹配成功的指定位置字符串\nprint(r)\nhello 替换lex bcd 替换lex lge 替换lex 替换cd 19\n\n3.9 re.subn(pattern, repl, string,[, count][, flags])函数替换匹配成功的指定位置字符串,并且返回替换次数，可以用两个变量分别接受\nsubn(pattern, repl, string, count&#x3D;0, flags&#x3D;0)\n\npattern： 正则模型\nrepl ： 要替换的字符串\nstring ： 要匹配的字符串\ncount ： 指定匹配个数\nflags ： 匹配模式\n\nimport re\norigin &#x3D; &quot;hello alex bcd alex lge alex acd 19&quot;\na, b &#x3D; re.subn(&quot;a&quot;, &quot;替换&quot;, origin)  # 替换匹配成功的指定位置字符串,并且返回替换次数，可以用两个变量分别接受\nprint(a)\nprint(b)\nhello 替换lex bcd 替换lex lge 替换lex 替换cd 19\n4\n\n四、注意事项\nr 原生字符：让在 python 里有特殊意义的字符如\\b，转换成原生字符（就是去除它在 python 的特殊意义），不然会给正则表达式有冲突，为了避免这种冲突可以在规则前加原始字符 r\n正则表达式，返回类型为表达式对象的，如：&lt;_sre.SRE_Match object; span&#x3D;(6, 7), match&#x3D;’a’&gt;，返回对象时，需要用正则方法取字符串，方法有：\ngroup() # 获取匹配到的所有结果，不管有没有分组将匹配到的全部拿出来，有参取匹配到的第几个如 2\ngroups() # 获取模型中匹配到的分组结果，只拿出匹配到的字符串中分组部分的结果\ngroupdict() # 获取模型中匹配到的分组结果，只拿出匹配到的字符串中分组部分定义了 key 的组结果\n\n\n匹配到的字符串里出现空字符：注意：正则匹配到空字符的情况，如果规则里只有一个组，而组后面是就表示组里的内容可以是 0 个或者多过，这样组里就有了两个意思，一个意思是匹配组里的内容，二个意思是匹配组里 0 内容（即是空白）所以尽量避免用否则会有可能匹配出空字符串\n()分组：注意：分组的意义，就是在匹配成功的字符串中，再提取()里的内容，也就是组里面的字符串\n?:在有分组的情况下 findall()函数，不只拿分组里的字符串，拿所有匹配到的字符串，注意?:只用于不是返回正则对象的函数如 findall()\n\n五、计算器(经典)基于递归和正则将下面的字符串翻译成计算器表达式，并且获取最终结果：expression=&#39;-1-2*((60+2*(-3-40.0+42425/5)*(9-2*5/3+357/553/3*99/4*2998+10*568/14))-(-4*3)/(16-3*2))+56+(56-45)&#39;\n如果代码正确，计算结果为：-553071849.7670887\n提示：content=re.search(&#39;\\(([\\-\\+\\*\\/]*\\d+\\.?\\d*)+\\)&#39;,expression).group() #(-3-40.0/5)\n5.1 复杂版本#!&#x2F;usr&#x2F;bin&#x2F;env python\n# -*- coding:utf-8 -*-\n&quot;&quot;&quot;\n该计算器思路：\n    1、递归寻找表达式中只含有 数字和运算符的表达式，并计算结果\n    2、由于整数计算会忽略小数，所有的数字都认为是浮点型操作，以此来保留小数\n使用技术：\n    1、正则表达式\n    2、递归\n&quot;&quot;&quot;\n\nimport re\n\n\ndef compute_mul_div(arg):\n    &quot;&quot;&quot; 操作乘除\n    :param expression:表达式\n    :return:计算结果\n    &quot;&quot;&quot;\n\n    val &#x3D; arg[0]\n    mch &#x3D; re.search(&#39;\\d+\\.*\\d*[\\*\\&#x2F;]+[\\+\\-]?\\d+\\.*\\d*&#39;, val)\n    if not mch:\n        return\n    content &#x3D; re.search(&#39;\\d+\\.*\\d*[\\*\\&#x2F;]+[\\+\\-]?\\d+\\.*\\d*&#39;, val).group()\n\n    if len(content.split(&#39;*&#39;)) &gt; 1:\n        n1, n2 &#x3D; content.split(&#39;*&#39;)\n        value &#x3D; float(n1) * float(n2)\n    else:\n        n1, n2 &#x3D; content.split(&#39;&#x2F;&#39;)\n        value &#x3D; float(n1) &#x2F; float(n2)\n\n    before, after &#x3D; re.split(&#39;\\d+\\.*\\d*[\\*\\&#x2F;]+[\\+\\-]?\\d+\\.*\\d*&#39;, val, 1)\n    new_str &#x3D; &quot;%s%s%s&quot; % (before, value, after)\n    arg[0] &#x3D; new_str\n    compute_mul_div(arg)\n\n\ndef compute_add_sub(arg):\n    &quot;&quot;&quot; 操作加减\n    :param expression:表达式\n    :return:计算结果\n    &quot;&quot;&quot;\n    while True:\n        if arg[0].__contains__(&#39;+-&#39;) or arg[0].__contains__(&quot;++&quot;) or arg[\n                0].__contains__(&#39;-+&#39;) or arg[0].__contains__(&quot;--&quot;):\n            arg[0] &#x3D; arg[0].replace(&#39;+-&#39;, &#39;-&#39;)\n            arg[0] &#x3D; arg[0].replace(&#39;++&#39;, &#39;+&#39;)\n            arg[0] &#x3D; arg[0].replace(&#39;-+&#39;, &#39;-&#39;)\n            arg[0] &#x3D; arg[0].replace(&#39;--&#39;, &#39;+&#39;)\n        else:\n            break\n\n    if arg[0].startswith(&#39;-&#39;):\n        arg[1] +&#x3D; 1\n        arg[0] &#x3D; arg[0].replace(&#39;-&#39;, &#39;&amp;&#39;)\n        arg[0] &#x3D; arg[0].replace(&#39;+&#39;, &#39;-&#39;)\n        arg[0] &#x3D; arg[0].replace(&#39;&amp;&#39;, &#39;+&#39;)\n        arg[0] &#x3D; arg[0][1:]\n    val &#x3D; arg[0]\n    mch &#x3D; re.search(&#39;\\d+\\.*\\d*[\\+\\-]&#123;1&#125;\\d+\\.*\\d*&#39;, val)\n    if not mch:\n        return\n    content &#x3D; re.search(&#39;\\d+\\.*\\d*[\\+\\-]&#123;1&#125;\\d+\\.*\\d*&#39;, val).group()\n    if len(content.split(&#39;+&#39;)) &gt; 1:\n        n1, n2 &#x3D; content.split(&#39;+&#39;)\n        value &#x3D; float(n1) + float(n2)\n    else:\n        n1, n2 &#x3D; content.split(&#39;-&#39;)\n        value &#x3D; float(n1) - float(n2)\n\n    before, after &#x3D; re.split(&#39;\\d+\\.*\\d*[\\+\\-]&#123;1&#125;\\d+\\.*\\d*&#39;, val, 1)\n    new_str &#x3D; &quot;%s%s%s&quot; % (before, value, after)\n    arg[0] &#x3D; new_str\n    compute_add_sub(arg)\n\n\ndef compute(expression):\n    &quot;&quot;&quot; 操作加减乘除\n    :param expression:表达式\n    :return:计算结果\n    &quot;&quot;&quot;\n    inp &#x3D; [expression, 0]\n\n    # 处理表达式中的乘除\n    compute_mul_div(inp)\n\n    # 处理\n    compute_add_sub(inp)\n    if divmod(inp[1], 2)[1] &#x3D;&#x3D; 1:\n        result &#x3D; float(inp[0])\n        result &#x3D; result * -1\n    else:\n        result &#x3D; float(inp[0])\n    return result\n\n\ndef exec_bracket(expression):\n    &quot;&quot;&quot; 递归处理括号，并计算\n    :param expression: 表达式\n    :return:最终计算结果\n    &quot;&quot;&quot;\n    # 如果表达式中已经没有括号，则直接调用负责计算的函数，将表达式结果返回，如：2*1-82+444\n    if not re.search(&#39;\\(([\\+\\-\\*\\&#x2F;]*\\d+\\.*\\d*)&#123;2,&#125;\\)&#39;, expression):\n        final &#x3D; compute(expression)\n        return final\n    # 获取 第一个 只含有 数字&#x2F;小数 和 操作符 的括号\n    # 如：\n    #    [&#39;1-2*((60-30+(-40.0&#x2F;5)*(9-2*5&#x2F;3+7&#x2F;3*99&#x2F;4*2998+10*568&#x2F;14))-(-4*3)&#x2F;(16-3*2))&#39;]\n    #    找出：(-40.0&#x2F;5)\n    content &#x3D; re.search(&#39;\\(([\\+\\-\\*\\&#x2F;]*\\d+\\.*\\d*)&#123;2,&#125;\\)&#39;, expression).group()\n\n    # 分割表达式，即：\n    # 将[&#39;1-2*((60-30+(-40.0&#x2F;5)*(9-2*5&#x2F;3+7&#x2F;3*99&#x2F;4*2998+10*568&#x2F;14))-(-4*3)&#x2F;(16-3*2))&#39;]\n    # 分割更三部分：[&#39;1-2*((60-30+(    (-40.0&#x2F;5)      *(9-2*5&#x2F;3+7&#x2F;3*99&#x2F;4*2998+10*568&#x2F;14))-(-4*3)&#x2F;(16-3*2))&#39;]\n    before, nothing, after &#x3D; re.split(&#39;\\(([\\+\\-\\*\\&#x2F;]*\\d+\\.*\\d*)&#123;2,&#125;\\)&#39;,\n                                      expression, 1)\n\n    print(&#39;before：&#39;, expression)\n    content &#x3D; content[1:len(content) - 1]\n\n    # 计算，提取的表示 (-40.0&#x2F;5)，并活的结果，即：-40.0&#x2F;5&#x3D;-8.0\n    ret &#x3D; compute(content)\n\n    print(&#39;%s&#x3D;%s&#39; % (content, ret))\n\n    # 将执行结果拼接，[&#39;1-2*((60-30+(      -8.0     *(9-2*5&#x2F;3+7&#x2F;3*99&#x2F;4*2998+10*568&#x2F;14))-(-4*3)&#x2F;(16-3*2))&#39;]\n    expression &#x3D; &quot;%s%s%s&quot; % (before, ret, after)\n    print(&#39;after：&#39;, expression)\n    print(&quot;&#x3D;&quot; * 10, &#39;上一次计算结束&#39;, &quot;&#x3D;&quot; * 10)\n\n    # 循环继续下次括号处理操作，本次携带者的是已被处理后的表达式，即：\n    # [&#39;1-2*((60-30+   -8.0  *(9-2*5&#x2F;3+7&#x2F;3*99&#x2F;4*2998+10*568&#x2F;14))-(-4*3)&#x2F;(16-3*2))&#39;]\n\n    # 如此周而复始的操作，直到表达式中不再含有括号\n    return exec_bracket(expression)\n\n\n# 使用 __name__ 的目的：\n# 只有执行 python index.py 时，以下代码才执行\n# 如果其他人导入该模块，以下代码不执行\nif __name__ &#x3D;&#x3D; &quot;__main__&quot;:\n    print(\n        &#39;*&#39; * 20, &quot;请计算表达式：&quot;,\n        &quot;1 - 2 * ( (60-30 +(-40.0&#x2F;5) * (9-2*5&#x2F;3 + 7 &#x2F;3*99&#x2F;4*2998 +10 * 568&#x2F;14 )) - (-4*3)&#x2F; (16-3*2) )&quot;,\n        &#39;*&#39; * 20)\n    #     inpp &#x3D; &#39;1 - 2 * ( (60-30 +(-40.0&#x2F;5) * (9-2*5&#x2F;3 + 7 &#x2F;3*99&#x2F;4*2998 +10 * 568&#x2F;14 )) - (-4*3)&#x2F; (16-3*2) ) &#39;\n    inpp &#x3D; &#39;-1-2*((60+2*(-3-40.0+42425&#x2F;5)*(9-2*5&#x2F;3+357&#x2F;553&#x2F;3*99&#x2F;4*2998+10*568&#x2F;14))-(-4*3)&#x2F;(16-3*2))+56+(56-45)&#39;\n    # inpp &#x3D; &quot;1-2*-30&#x2F;-12*(-20+200*-3&#x2F;-200*-300-100)&quot;\n    # inpp &#x3D; &quot;1-5*980.0&quot;\n    inpp &#x3D; re.sub(&#39;\\s*&#39;, &#39;&#39;, inpp)\n    # 表达式保存在列表中\n    result &#x3D; exec_bracket(inpp)\n    print(result)\n******************** 请计算表达式： 1 - 2 * ( (60-30 +(-40.0&#x2F;5) * (9-2*5&#x2F;3 + 7 &#x2F;3*99&#x2F;4*2998 +10 * 568&#x2F;14 )) - (-4*3)&#x2F; (16-3*2) ) ********************\nbefore： -1-2*((60+2*(-3-40.0+42425&#x2F;5)*(9-2*5&#x2F;3+357&#x2F;553&#x2F;3*99&#x2F;4*2998+10*568&#x2F;14))-(-4*3)&#x2F;(16-3*2))+56+(56-45)\n-3-40.0+42425&#x2F;5&#x3D;8442.0\nafter： -1-2*((60+2*8442.0*(9-2*5&#x2F;3+357&#x2F;553&#x2F;3*99&#x2F;4*2998+10*568&#x2F;14))-(-4*3)&#x2F;(16-3*2))+56+(56-45)\n&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; 上一次计算结束 &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\nbefore： -1-2*((60+2*8442.0*(9-2*5&#x2F;3+357&#x2F;553&#x2F;3*99&#x2F;4*2998+10*568&#x2F;14))-(-4*3)&#x2F;(16-3*2))+56+(56-45)\n9-2*5&#x2F;3+357&#x2F;553&#x2F;3*99&#x2F;4*2998+10*568&#x2F;14&#x3D;16378.577154912598\nafter： -1-2*((60+2*8442.0*16378.577154912598)-(-4*3)&#x2F;(16-3*2))+56+(56-45)\n&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; 上一次计算结束 &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\nbefore： -1-2*((60+2*8442.0*16378.577154912598)-(-4*3)&#x2F;(16-3*2))+56+(56-45)\n60+2*8442.0*16378.577154912598&#x3D;276535956.68354434\nafter： -1-2*(276535956.68354434-(-4*3)&#x2F;(16-3*2))+56+(56-45)\n&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; 上一次计算结束 &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\nbefore： -1-2*(276535956.68354434-(-4*3)&#x2F;(16-3*2))+56+(56-45)\n-4*3&#x3D;-12.0\nafter： -1-2*(276535956.68354434--12.0&#x2F;(16-3*2))+56+(56-45)\n&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; 上一次计算结束 &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\nbefore： -1-2*(276535956.68354434--12.0&#x2F;(16-3*2))+56+(56-45)\n16-3*2&#x3D;10.0\nafter： -1-2*(276535956.68354434--12.0&#x2F;10.0)+56+(56-45)\n&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; 上一次计算结束 &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\nbefore： -1-2*(276535956.68354434--12.0&#x2F;10.0)+56+(56-45)\n276535956.68354434--12.0&#x2F;10.0&#x3D;276535957.8835443\nafter： -1-2*276535957.8835443+56+(56-45)\n&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; 上一次计算结束 &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\nbefore： -1-2*276535957.8835443+56+(56-45)\n56-45&#x3D;11.0\nafter： -1-2*276535957.8835443+56+11.0\n&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; 上一次计算结束 &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\n-553071849.7670887\n\n5.2 简单易懂版Copyimport re\n\nexpression &#x3D; &#39;-1-2*((60+2*(-3-40.0+42425&#x2F;5)*(9-2*5&#x2F;3+357&#x2F;553&#x2F;3*99&#x2F;4*2998+10*568&#x2F;14))-(-4*3)&#x2F;(16-3*2))+56+(56-45)&#39;\nquestion &#x3D; eval(expression)\nprint(question)\n\n\ndef arithmetic(expression&#x3D;&#39;1+1&#39;):\n    #     content &#x3D; re.search(&#39;\\(([\\-\\+\\*\\&#x2F;]*\\d+\\.?\\d*)+\\)&#39;, expression)  # (-3-40.0&#x2F;5)\n    content &#x3D; re.search(&#39;\\(([-+*&#x2F;]*\\d+\\.?\\d*)+\\)&#39;, expression)  # (-3-40.0&#x2F;5)\n    if content:\n        content &#x3D; content.group()\n        content &#x3D; content[1:-1]\n        print(&#39;content:&#39;, content)\n        replace_content &#x3D; next_arithmetic(content)\n        expression &#x3D; re.sub(&#39;\\(([-+*&#x2F;]*\\d+\\.?\\d*)+\\)&#39;,\n                            replace_content,\n                            expression,\n                            count&#x3D;1)\n        print(&#39;next_expression:&#39;, expression)\n    else:\n        answer &#x3D; next_arithmetic(expression)\n        return answer\n    return arithmetic(expression)\n\n\ndef next_arithmetic(content):\n    while True:\n        next_content_mul_div &#x3D; re.search(&#39;\\d+\\.?\\d*[*&#x2F;][-+]?\\d+\\.?\\d*&#39;,\n                                         content)  # 找出带有*&#x2F;的式子\n        if next_content_mul_div:  # 如果content含有带有*&#x2F;的式子\n            next_content_mul_div &#x3D; next_content_mul_div.group()\n            print(&#39;next_content_mul_div:&#39;, next_content_mul_div)\n            mul_div_content &#x3D; mul_div(next_content_mul_div)  # 计算出带有*&#x2F;的式子\n            print(&#39;mul_div_content:&#39;, mul_div_content)\n            content &#x3D; re.sub(&#39;\\d+\\.?\\d*[*&#x2F;][-+]?\\d+\\.?\\d*&#39;,\n                             str(mul_div_content),\n                             content,\n                             count&#x3D;1)  # 把带有*&#x2F;的式子计算出来后替换掉\n            print(&#39;content:&#39;, content)\n            continue\n        next_content_add_sub &#x3D; re.search(&#39;-?\\d+\\.?\\d*[-+][-+]?\\d+\\.?\\d*&#39;,\n                                         content)  # 找出带有-+的式子\n        if next_content_add_sub:  # 如果content含有带有+-的式子\n            next_content_add_sub &#x3D; next_content_add_sub.group()\n            print(&#39;next_content_add_sub:&#39;, next_content_add_sub)\n            add_sub_content &#x3D; add_sub(next_content_add_sub)  # 计算出带有-+的式子\n            print(&#39;add_sub_content:&#39;, add_sub_content)\n            add_sub_content &#x3D; str(add_sub_content)\n            content &#x3D; re.sub(&#39;-?\\d+\\.?\\d*[-+]-?\\d+\\.?\\d*&#39;,\n                             str(add_sub_content),\n                             content,\n                             count&#x3D;1)  # 把带有-+的式子计算出来后替换掉\n            print(&#39;content:&#39;, content)\n            continue\n        else:\n            break\n    return content\n\n\ndef add_sub(content):\n    if &#39;+&#39; in content:\n        content &#x3D; content.split(&#39;+&#39;)\n        print(content)\n        content &#x3D; float(content[0]) + float(content[1])\n        return content\n    elif &#39;-&#39; in content:\n        content &#x3D; content.split(&#39;-&#39;)\n        # 减法情况有多种\n        if content[0] &#x3D;&#x3D; &#39;-&#39; and content[2] &#x3D;&#x3D; &#39;-&#39;:\n            # content &#x3D; content.split(&#39;-&#39;)\n            print(content)\n            content &#x3D; -float(content[1]) - float(content[-1])\n            return content\n        if content[0] &#x3D;&#x3D; &#39;-&#39;:\n            # content &#x3D; content.split(&#39;-&#39;)\n            print(content)\n            content &#x3D; -float(content[1]) - float(content[-1])\n            return content\n        if content[1] &#x3D;&#x3D; &#39;-&#39; and content[2] &#x3D;&#x3D; &#39;-&#39;:\n            # content &#x3D; content.split(&#39;-&#39;)\n            print(content)\n            content &#x3D; -float(content[0]) + float(content[-1])\n            return content\n        if content[1] &#x3D;&#x3D; &#39;&#39;:\n            # content &#x3D; content.split(&#39;-&#39;)\n            print(content)\n            content &#x3D; float(content[0]) - float(content[2])\n            return content\n        if content[0] &#x3D;&#x3D; &#39;&#39; and content[2] !&#x3D; &#39;&#39;:\n            print(content)\n            content &#x3D; -float(content[1]) - float(content[2])\n            return content\n        if content[0] &#x3D;&#x3D; &#39;&#39; and content[2] &#x3D;&#x3D; &#39;&#39;:\n            print(content)\n            content &#x3D; -float(content[1]) + float(content[3])\n            return content\n        else:\n            # content &#x3D; content.split(&#39;-&#39;)\n            print(content)\n            content &#x3D; float(content[0]) - float(content[1])\n            return content\n\n\ndef mul_div(content):\n    if &#39;*&#39; in content:\n        content &#x3D; content.split(&#39;*&#39;)\n        print(content)\n        content &#x3D; float(content[0]) * float(content[1])\n        return content\n    elif &#39;&#x2F;&#39; in content:\n        content &#x3D; content.split(&#39;&#x2F;&#39;)\n        print(content)\n        content &#x3D; float(content[0]) &#x2F; float(content[1])\n        return content\n\n\n# expression &#x3D; &#39;1-2*((60+2*(-3-40.0&#x2F;5)*(9-2*5&#x2F;3+7&#x2F;3*99&#x2F;4*2998+10*568&#x2F;14))-(-4*3)&#x2F;(16-3*2))&#39;\nexpression &#x3D; &#39;-1-2*((60+2*(-3-40.0+42425&#x2F;5)*(9-2*5&#x2F;3+357&#x2F;553&#x2F;3*99&#x2F;4*2998+10*568&#x2F;14))-(-4*3)&#x2F;(16-3*2))+56+(56-45)&#39;\nanswer &#x3D; arithmetic(expression)\nprint(answer)\nCopy-553071849.7670887\ncontent: -3-40.0+42425&#x2F;5\nnext_content_mul_div: 42425&#x2F;5\n[&#39;42425&#39;, &#39;5&#39;]\nmul_div_content: 8485.0\ncontent: -3-40.0+8485.0\nnext_content_add_sub: -3-40.0\n[&#39;&#39;, &#39;3&#39;, &#39;40.0&#39;]\nadd_sub_content: -43.0\ncontent: -43.0+8485.0\nnext_content_add_sub: -43.0+8485.0\n[&#39;-43.0&#39;, &#39;8485.0&#39;]\nadd_sub_content: 8442.0\ncontent: 8442.0\nnext_expression: -1-2*((60+2*8442.0*(9-2*5&#x2F;3+357&#x2F;553&#x2F;3*99&#x2F;4*2998+10*568&#x2F;14))-(-4*3)&#x2F;(16-3*2))+56+(56-45)\ncontent: 9-2*5&#x2F;3+357&#x2F;553&#x2F;3*99&#x2F;4*2998+10*568&#x2F;14\nnext_content_mul_div: 2*5\n[&#39;2&#39;, &#39;5&#39;]\nmul_div_content: 10.0\ncontent: 9-10.0&#x2F;3+357&#x2F;553&#x2F;3*99&#x2F;4*2998+10*568&#x2F;14\nnext_content_mul_div: 10.0&#x2F;3\n[&#39;10.0&#39;, &#39;3&#39;]\nmul_div_content: 3.3333333333333335\ncontent: 9-3.3333333333333335+357&#x2F;553&#x2F;3*99&#x2F;4*2998+10*568&#x2F;14\nnext_content_mul_div: 357&#x2F;553\n[&#39;357&#39;, &#39;553&#39;]\nmul_div_content: 0.6455696202531646\ncontent: 9-3.3333333333333335+0.6455696202531646&#x2F;3*99&#x2F;4*2998+10*568&#x2F;14\nnext_content_mul_div: 0.6455696202531646&#x2F;3\n[&#39;0.6455696202531646&#39;, &#39;3&#39;]\nmul_div_content: 0.21518987341772153\ncontent: 9-3.3333333333333335+0.21518987341772153*99&#x2F;4*2998+10*568&#x2F;14\nnext_content_mul_div: 0.21518987341772153*99\n[&#39;0.21518987341772153&#39;, &#39;99&#39;]\nmul_div_content: 21.303797468354432\ncontent: 9-3.3333333333333335+21.303797468354432&#x2F;4*2998+10*568&#x2F;14\nnext_content_mul_div: 21.303797468354432&#x2F;4\n[&#39;21.303797468354432&#39;, &#39;4&#39;]\nmul_div_content: 5.325949367088608\ncontent: 9-3.3333333333333335+5.325949367088608*2998+10*568&#x2F;14\nnext_content_mul_div: 5.325949367088608*2998\n[&#39;5.325949367088608&#39;, &#39;2998&#39;]\nmul_div_content: 15967.196202531646\ncontent: 9-3.3333333333333335+15967.196202531646+10*568&#x2F;14\nnext_content_mul_div: 10*568\n[&#39;10&#39;, &#39;568&#39;]\nmul_div_content: 5680.0\ncontent: 9-3.3333333333333335+15967.196202531646+5680.0&#x2F;14\nnext_content_mul_div: 5680.0&#x2F;14\n[&#39;5680.0&#39;, &#39;14&#39;]\nmul_div_content: 405.7142857142857\ncontent: 9-3.3333333333333335+15967.196202531646+405.7142857142857\nnext_content_add_sub: 9-3.3333333333333335\n[&#39;9&#39;, &#39;3.3333333333333335&#39;]\nadd_sub_content: 5.666666666666666\ncontent: 5.666666666666666+15967.196202531646+405.7142857142857\nnext_content_add_sub: 5.666666666666666+15967.196202531646\n[&#39;5.666666666666666&#39;, &#39;15967.196202531646&#39;]\nadd_sub_content: 15972.862869198312\ncontent: 15972.862869198312+405.7142857142857\nnext_content_add_sub: 15972.862869198312+405.7142857142857\n[&#39;15972.862869198312&#39;, &#39;405.7142857142857&#39;]\nadd_sub_content: 16378.577154912598\ncontent: 16378.577154912598\nnext_expression: -1-2*((60+2*8442.0*16378.577154912598)-(-4*3)&#x2F;(16-3*2))+56+(56-45)\ncontent: 60+2*8442.0*16378.577154912598\nnext_content_mul_div: 2*8442.0\n[&#39;2&#39;, &#39;8442.0&#39;]\nmul_div_content: 16884.0\ncontent: 60+16884.0*16378.577154912598\nnext_content_mul_div: 16884.0*16378.577154912598\n[&#39;16884.0&#39;, &#39;16378.577154912598&#39;]\nmul_div_content: 276535896.68354434\ncontent: 60+276535896.68354434\nnext_content_add_sub: 60+276535896.68354434\n[&#39;60&#39;, &#39;276535896.68354434&#39;]\nadd_sub_content: 276535956.68354434\ncontent: 276535956.68354434\nnext_expression: -1-2*(276535956.68354434-(-4*3)&#x2F;(16-3*2))+56+(56-45)\ncontent: -4*3\nnext_content_mul_div: 4*3\n[&#39;4&#39;, &#39;3&#39;]\nmul_div_content: 12.0\ncontent: -12.0\nnext_expression: -1-2*(276535956.68354434--12.0&#x2F;(16-3*2))+56+(56-45)\ncontent: 16-3*2\nnext_content_mul_div: 3*2\n[&#39;3&#39;, &#39;2&#39;]\nmul_div_content: 6.0\ncontent: 16-6.0\nnext_content_add_sub: 16-6.0\n[&#39;16&#39;, &#39;6.0&#39;]\nadd_sub_content: 10.0\ncontent: 10.0\nnext_expression: -1-2*(276535956.68354434--12.0&#x2F;10.0)+56+(56-45)\ncontent: 276535956.68354434--12.0&#x2F;10.0\nnext_content_mul_div: 12.0&#x2F;10.0\n[&#39;12.0&#39;, &#39;10.0&#39;]\nmul_div_content: 1.2\ncontent: 276535956.68354434--1.2\nnext_content_add_sub: 276535956.68354434--1.2\n[&#39;276535956.68354434&#39;, &#39;&#39;, &#39;1.2&#39;]\nadd_sub_content: 276535955.48354435\ncontent: 276535955.48354435\nnext_expression: -1-2*276535955.48354435+56+(56-45)\ncontent: 56-45\nnext_content_add_sub: 56-45\n[&#39;56&#39;, &#39;45&#39;]\nadd_sub_content: 11.0\ncontent: 11.0\nnext_expression: -1-2*276535955.48354435+56+11.0\nnext_content_mul_div: 2*276535955.48354435\n[&#39;2&#39;, &#39;276535955.48354435&#39;]\nmul_div_content: 553071910.9670887\ncontent: -1-553071910.9670887+56+11.0\nnext_content_add_sub: -1-553071910.9670887\n[&#39;&#39;, &#39;1&#39;, &#39;553071910.9670887&#39;]\nadd_sub_content: -553071911.9670887\ncontent: -553071911.9670887+56+11.0\nnext_content_add_sub: -553071911.9670887+56\n[&#39;-553071911.9670887&#39;, &#39;56&#39;]\nadd_sub_content: -553071855.9670887\ncontent: -553071855.9670887+11.0\nnext_content_add_sub: -553071855.9670887+11.0\n[&#39;-553071855.9670887&#39;, &#39;11.0&#39;]\nadd_sub_content: -553071844.9670887\ncontent: -553071844.9670887\n-553071844.9670887\n", "slug": "python学习之re模块", "date": "2023-07-27 00:32:00", "categories_index": "Python", "tags_index": "持久化", "author_index": "倪传方"}, {"id": "2e5004b8a8ff49317aa7f3e9b71f74cf", "title": "可重入锁ReentrantLock高级特性", "content": "ReentrantLock提供了Synchronized不具备的三个高级特性\n公平锁\n\n&#x2F;**\n * Creates an instance of &#123;@code ReentrantLock&#125;.\n * This is equivalent to using &#123;@code ReentrantLock(false)&#125;.\n *&#x2F;\npublic ReentrantLock() &#123;\n    sync &#x3D; new NonfairSync();\n&#125;\n\n\n等待可中断\n\n&#x2F;**\n * 尝试锁定\n *\n * @param timeout 超时时间\n * @param unit    单位\n * @return boolean 尝试获取锁的结果\n * @throws InterruptedException 中断异常\n *&#x2F;\npublic boolean tryLock(long timeout, TimeUnit unit)\n        throws InterruptedException &#123;\n    return sync.tryAcquireNanos(1, unit.toNanos(timeout));\n&#125;\n\n\n\n\n\n\n\n提示\n条件通知,一把锁可以生成多个条件,每个条件可以对应一个线程分组,可以通过 condition 对象来进行分组等待和唤醒,解决了synchronized关键字只能notifyAll()的问题\n\npublic Condition newCondition() &#123;\n    return sync.newCondition();\n&#125;\n\n\n\n\n\n\n\n\n注意\nReentrantLock条件通知使用注意点\n\n\n每个 condition 可以绑定若干个线程,如果需要多个 condition 请先对线程进行分组;\n使用await()和signal()或者signalAll()之前需要先获取锁,在 finally 代码块中要释放锁;\n\n实战演示模拟三个线程,对其中两个线程分为一组绑定到condition1,剩下的一个线程单独一组绑定到condition2,main 线程再分别唤醒等待状态的各线程组.\n\n创建线程池\n\nprivate final ThreadFactory threadFactory &#x3D; ThreadFactoryBuilder.create().setNamePrefix(&quot;test&quot;).build();\n\nprivate final Executor executor &#x3D; new ThreadPoolExecutor(Runtime.getRuntime().availableProcessors() + 1, Runtime.getRuntime().availableProcessors() + 1,\n        10, TimeUnit.MINUTES, new LinkedBlockingQueue&lt;&gt;(16), threadFactory, new ThreadPoolExecutor.AbortPolicy());\n\n\n初始化CountDownLatch和ReentrantLock,注册两个condition.\n\n&#x2F;&#x2F;闭锁1  让3个子线程同时启动\nCountDownLatch startCdl &#x3D; new CountDownLatch(1);\n&#x2F;&#x2F;闭锁2  main线程等待子线程都执行完毕再结束\nCountDownLatch endCdl &#x3D; new CountDownLatch(3);\n&#x2F;&#x2F;同步锁\nReentrantLock lock &#x3D; new ReentrantLock(false);\n\nCondition condition1 &#x3D; lock.newCondition();\nCondition condition2 &#x3D; lock.newCondition();\n\n\n创建子线程,进入等待状态,等主线程唤醒\n\n&#x2F;**\n * 获取线程\n *\n * @param startCdl       开始同步器\n * @param endCdl         结束同步器\n * @param lock      锁\n * @param condition 条件\n * @return &#123;@link Thread&#125;\n *&#x2F;\nprivate Runnable getCallable(CountDownLatch startCdl, CountDownLatch endCdl, ReentrantLock lock, Condition condition) &#123;\n    return () -&gt; &#123;\n        try &#123;\n            &#x2F;&#x2F;让三个子线程同时启动\n            startCdl.await();\n        &#125; catch (InterruptedException e) &#123;\n            e.printStackTrace();\n        &#125;\n        lock.lock();\n        try &#123;\n            &#x2F;&#x2F;await会释放当前锁\n            condition.await();\n            log.info(&quot;线程&#123;&#125;被唤醒,时间:&#123;&#125;&quot;, Thread.currentThread().getName(),new Date());\n        &#125; catch (InterruptedException e) &#123;\n            e.printStackTrace();\n        &#125; finally &#123;\n            log.info(&quot;线程:&#123;&#125;执行完毕,释放同步锁&quot;,Thread.currentThread().getName());\n            &#x2F;&#x2F;被唤醒后,需要释放当前持有的锁\n            lock.unlock();\n            &#x2F;&#x2F;计数器为0主线程停止等待\n            endCdl.countDown();\n        &#125;\n    &#125;;\n&#125;\n&#x2F;&#x2F;启动三个子线程\nexecutor.execute(getCallable(startCdl,endCdl ,lock, condition1));\nexecutor.execute(getCallable(startCdl,endCdl ,lock, condition1));\nexecutor.execute(getCallable(startCdl,endCdl,lock, condition2));\n\n\n主线程进行唤醒\n\nlog.info(&quot;Main线程开始执行....&quot;);\nstartCdl.countDown();\nlog.info(&quot;子线程正在等待....&quot;);\n\nlock.lock();\ncondition1.signalAll();\nlock.unlock();\ntry &#123;\n    &#x2F;&#x2F;主线程阻塞2秒 区分两次唤醒\n    Thread.sleep(2000);\n&#125; catch (InterruptedException e) &#123;\n    e.printStackTrace();\n&#125;\nlock.lock();\ncondition2.signal();\nlock.unlock();\ntry &#123;\n    log.info(&quot;等待三个子线程执行完毕&quot;);\n    endCdl.await();\n    log.info(&quot;main线程结束&quot;);\n&#125; catch (InterruptedException e) &#123;\n    e.printStackTrace();\n&#125;\n\n\n控制台输出. 可以看出两次唤醒相隔了两秒\n\n", "slug": "reentrant-lock", "date": "2023-05-08 07:05:39", "categories_index": "分布式", "tags_index": "ReentrantLock", "author_index": "倪传方"}, {"id": "e266b70dd1da3efc040f3fd65a612a8c", "title": "python高级学习日志第二、三天之网络编程", "content": "python 高级学习日志第二、三天之网络编程UDP 接收数据以及基于 UDP 的交易聊天器\n\n\n\n\n\n\n\n\n一个 Java 程序员，但是打算自学一下 python，所以把自己学到的东西记录在这里。也免得我自己忘记新学的，年纪大了真的很容易忘东西。\n哈哈，我喜欢边写程序边听歌\n\n\n上次记录的是怎么用 udp 来发送数据，通过网络调试助手按钮来模拟数据接收方，这次记录的是利用 udp 代码来接收数据，以及基于两份 python 代码的简易聊天器。\n\n\n\n\n\n\n\n\n\n话不多说直接开搞\n首先是单纯的用 udp 来接收数据，这里同样用网络调试助手来模拟发送数据，这个时候网络调试助手扮演的角色是发送数据方。\n\n\n\n\n\n\n\n\n\n利用 udp 接收数据有以下几个主要步骤：\n\n创建套接字\n绑定本地信息，包括本地 ip 以及分配端口号\n接收数据\n打印接收到的数据\n关闭套接字\n\nimport socket\n\n\ndef main():\n    # 1.创建套接字\n    udp_socket &#x3D; socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n    # 2.绑定一个本地信息，分配端口号\n    localaddr &#x3D; (&quot;&quot;, 7788)\n    udp_socket.bind(localaddr)\n    # 3.接收数据\n    recv_data &#x3D; udp_socket.recvfrom(1024)\n    # 4.打印接收到的数据\n    print(recv_data)\n    # 5.关闭套接字\n    udp_socket.close()\n\n\nif __name__ &#x3D;&#x3D; &#39;__main__&#39;:\n    main()\n\n\n\n\n\n\n\n\n\n\n\n在绑定本地信息过程中，套接字调用 bind()方法，其中绑定的内容是一个元组，(“,xxxx),元组的第一个值为本地 ip，不用些即可，代码运行时会自动填充，第二个是手动给这个接收的代码片运行分配一个端口号，可在 1024 至 65535 之间随意填写，除本机有程序已经在占用这个端口使用以外，这里我随机绑定的端口号是 7788，至于元组的第一个元素为什么带有引号，是因为他是一个字符串类型的参数。绑定好本地信息以后准备接受来自其它 udp 发送来的数据recv_data &#x3D; udp_socket.recvfrom(1024)调用套接字的 recvfrom 方法，1024 是指最大接收的数据量，这里用 1Kb 测试，最后把接收到的数据存进变量recv_data 里，然后运行程序：此时没有任何动作是因为程序正在等待接收数据然后打开网络调试助手新建一个 udp 来模拟发送数据同样的把相关配置做好，1 号处填上本地的 ip 地址，2 好处给网络调试助手启动服务器分配一个端口，3 号处也是填上本地 ip 地址，因为是同一台电脑发送数据和接收数据，4 号处填上代码里绑定的端口号，也就是 python 代码运行分配的端口号，所以整个过程相当于启动网络调试助手的 udp 作为数据发送方，然后填好要发给的另一方的信息。启动调试助手：输入测试发送的信息点击发送：回到代码运行处查看：可以看到显示的是一个大元组，大元组的第一个袁术是接收到的数据，在这里是中文的 ASCII 码，时 byte 类型的数据，然后后面跟着一组小元组，小元组的内容显而易见，小元组的第一个元素是数据发送方的 ip，第二个元素是数据发送方的端口号。接下来对代码做一些改变：\nimport socket\n\n\ndef main():\n    # 1.创建套接字\n    udp_socket &#x3D; socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n    # 2.绑定一个本地信息，分配端口号\n    localaddr &#x3D; (&quot;&quot;, 7788)\n    udp_socket.bind(localaddr)\n    # 3.接收数据\n\n    recv_data &#x3D; udp_socket.recvfrom(1024)\n    # 解析元祖的消息内容\n    recv_msg &#x3D; recv_data[0]  # 存储接收到的数据\n    send_addr &#x3D; recv_data[1]  # 存储发送方的地址信息\n    # 4.打印接收到的数据\n    print(&quot;%s说:%s&quot; % (str(send_addr), recv_msg.decode(&quot;gbk&quot;)))\n    # 5.关闭套接字\n    udp_socket.close()\n\n\nif __name__ &#x3D;&#x3D; &#39;__main__&#39;:\n    main()\n\n\n\n\n\n\n\n\n\n\n\n把原本的 recv_data 做一个拆分解析，把 recv_data 的第一个元素赋值给 recv_msg，表示收到的消息和数据。把 recv_data 的第二个元素赋值给 send_addr，是一个小元组，表示发送方的信息，其过程和 java 数组取值类似，最后分别做输出，需要注意的是，str 强转和接收到的数据转码。最后重新运行程序：等待收数据，然后在调试助手输入发送的数据：则代码最后运行结果如下：以上这种情况可以看出是收到一条数据则结束程序运行。接下来对代码进行改进能让代码持续收到书：\nimport socket\n\n\ndef main():\n    # 1.创建套接字\n    udp_socket &#x3D; socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n    # 2.绑定一个本地信息，分配端口号\n    localaddr &#x3D; (&quot;&quot;, 7788)\n    udp_socket.bind(localaddr)\n    # 3.循环接收数据\n    while True:\n        recv_data &#x3D; udp_socket.recvfrom(1024)\n        # 解析元祖的消息内容\n        recv_msg &#x3D; recv_data[0]  # 存储接收到的数据\n        send_addr &#x3D; recv_data[1]  # 存储发送方的地址信息\n        # 4.打印接收到的数据\n        print(&quot;%s说:%s&quot; % (str(send_addr), recv_msg.decode(&quot;gbk&quot;)))\n    # 5.关闭套接字\n    udp_socket.close()\n\n\nif __name__ &#x3D;&#x3D; &#39;__main__&#39;:\n    main()\n\n\n\n\n\n\n\n\n\n\n\n可以看出是将套接字收数据和打印数据作为循环体来循环，这个时候测试数据接收如下：在网络调试助手连续发送三条信息，代码运行都够收到以后，程序并未退出这个时候就做到了持续等待收数据和信息的效果。\n学习了 udp 收发数据以后，可以做一个基于 udp 的简单聊天器了，这个聊天器是发一句收一句的，因为还没有采取多线程的处理方式。具体代码如下，这个时候就不需要调试助手来充当角色了：\nimport socket\n\ndef send_msg(udp_scoket,dest_ip,dest_port):\n    &quot;&quot;&quot;&quot;发送消息&quot;&quot;&quot;\n    #获取要发送的内容\n    send_data&#x3D;input(&quot;请输入要发送的消息:&quot;)\n    udp_scoket.sendto(send_data.encode(&quot;gbk&quot;), (dest_ip, int(dest_port)))\n\n\ndef recv_msg(udp_scoket):\n    &quot;&quot;&quot;&quot;接收消息&quot;&quot;&quot;\n    recv_data&#x3D;udp_scoket.recvfrom(1024)\n    print(&quot;%s回消息说:%s&quot; %(str(recv_data[1]),recv_data[0].decode(&quot;gbk&quot;)))\n\n\ndef main():\n    #创建套接字\n    udp_scoket&#x3D;socket.socket(socket.AF_INET,socket.SOCK_DGRAM)\n\n    #绑定信息\n    #绑定的是一个元组，里面存放ip信息和端口信息\n    udp_scoket.bind((&quot;&quot;,7788))\n    # 确定对方地址\n    dest_ip &#x3D; input(&quot;请输入对方的ip:&quot;)\n    dest_port &#x3D; input(&quot;请输入对方的port:&quot;)\n\n    #循环发送接收消息\n    while True:\n            #发送\n            send_msg(udp_scoket,dest_ip,dest_port)\n\n            #接受并显示\n            recv_msg(udp_scoket)\nif __name__ &#x3D;&#x3D; &#39;__main__&#39;:\n    main()\n\n这里测试自己收发程序运行如下：可以看出是做到了自己收发消息了的，即在一个程序里，自己发送数据给自己自己接收数据并打印显示，当然也可以用两份程序分别演示一个发送数据，一个接收数据。具体看自己怎么理解和操作。\n\n\n\n\n\n\n\n\n\n下一次记录 tcp 的有关知识和实践\n", "slug": "python高级学习日志第二、三天之网络编程", "date": "2022-10-01 09:29:00", "categories_index": "Python", "tags_index": "Python网络编程", "author_index": "倪传方"}, {"id": "3ab3df2387b700f13887b79994864558", "title": "python高级学习日志第一天之网络编程", "content": "python 高级学习日志第一天之网络编程UDP 发送数据\n\n\n\n\n\n\n\n\n一个 Java 程序员，但是打算自学一下 python，所以把自己学到的东西记录在这里。也免得我自己忘记新学的，年纪大了真的很容易忘东西。\n哈哈，我喜欢边写程序边听歌\n\n\n\n\n\n\n\n\n\n中国人民真蒸汽\n\n\n这里直接记录的是我的实践内容\n首先是怎么利用简单的 udp 来发送数据？\n这里我用的编辑工具是&#x3D;&#x3D; Pycharm &#x3D;&#x3D;测试的工具是 &#x3D;&#x3D; 网络调试助手 &#x3D;&#x3D;其中网络调试助手有多种样式的，下对了能用的就 ok，我的就长这样子：利用 udp 进行简单的数据发送有四个步骤\n\n创建一个套接字\n从键盘读取你要发送的数据\n使用套接字发送你的数据\n关闭套接字\n\n那么在 python 中要用到套接字，就像 java 导包一样也需要导入其中的套接字使用模块，使用 Pycharm 会自动提示不劝导入，真滴是特别的方便了。\n接着在最后的位置给 python 设置一个启动器(main 方法)，类似，java 里的\npublic static void main(String[] args)&#123;&#125;\n\npython 里的写法是 main 方法：\nif __name__ &#x3D;&#x3D; &#39;__main__&#39;:\n\n在这个 main 函数缩进的位置上写上要执行的函数名就 ok按照刚刚说的流程走一遍：\n#引入套接字使用模块\nimport socket\n\n\n#自定义一个方法叫做main(),方法名随意\ndef main():\n    #1.创建一个套接字,叫做udp_socket,固定的创建写法\n    #其中SOCK_DGRAM是代表基于udp的套接字，无保障的\n    udp_socket&#x3D;socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n\n    #2.从键盘读取输入数据,赋值给send_data变量\n    send_data &#x3D; input(&quot;请输入要发送的数据:&quot;)\n\n    #3.使用套接字发送数据\n    #udp_socket套接字已经创建,用其自带的方法即可以实现发送,并且把发送的数据编码，防止中文输入乱码\n    udp_socket.sendto(send_data.encode(&quot;gbk&quot;), (&quot;10.128.246.239&quot;, 6666))\n\n    #4.关闭套接字\n    udp_socket.close()\n\n\n#在main方法里执行main()函数\nif __name__ &#x3D;&#x3D; &#39;__main__&#39;:\n    main()\n\n\nok,这是一个简单的流程，其中 10.128.246.239 和 6666 分别是要接受数据方的 ip 地址和端口号，接收方也是一个 udp，只不过这个 udp 用来接收数据，在这里用网络调试助手来模拟接收数据的 udp 方。\n\n\n\n\n\n\n\n\n\n注意：套接字的 sendto 方法需要带两个参数，第一个是发送的数据，是 byte 类型的，第二个参数是一个元组，类似 java 里的数组，(ip 地址，端口号)，ip 地址是字符串类型的，端口号是整型的。\n接下来用网络调试助手模拟数据接收方，打开网络调试助手，如下新建一个 udp其中 ip 地址换成当前联网的 ip，window 下可以用 win+R，输入 cmd 开启命令模式输入 ipconfig 即可查看当前网络的 ip把这个 ip 地址输入到网络调试助手的设置区的本地 ip 位置，当然助手也能自动捕获，如图，用上这个就行然后设置一个端口号，自己设置就行了，大于 1024 小于 65535 就行，排除电脑上有程序在用这个端口以外。启动，最终如下图，这个时候通过代码里的参数配置，已经可以连接上这个接收器了，运行 python 程序点绿色按钮选择运行即可,运行如图：然后输入数据测试发送，输入后回车。这个时候回到网络调试助手可以看到：来自本机地址，因为是自己发给自己测试，这个端口发来的这个数据。\n这个时候开始想，能不能循环输入数据发送？答案是可以的，把发送数据执行的代码片作为循环体即可。然后可以简单地设置一下，当用户输入“exit”的时候，让用户结束发送。然后代码变成了这样，把从键盘获取数据到发送数据作为循环体。用 while True: 圈起来，也就是把循环体一段缩进，相当于 java 中的{}大括号。然后用 if 判断用户输入的是不是 exit 字符串，是的话，则跳出循环，直接执行关闭套接字操作，程序运行结束。\nimport socket\n\n\ndef main():\n    # 创建一个udp套接字\n    udp_socket &#x3D; socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n    while True:\n        # 从键盘获取数据\n        send_data &#x3D; input(&quot;请输入要发送的数据:&quot;)\n        # 如果输入的数据是exit。则推出程序\n        if send_data &#x3D;&#x3D; &quot;exit&quot;:\n            break\n        # 使用套接字发送数据\n        udp_socket.sendto(send_data.encode(&quot;gbk&quot;), (&quot;10.128.246.239&quot;, 6666))\n    # 关闭套接字\n    udp_socket.close()\n\n\nif __name__ &#x3D;&#x3D; &#39;__main__&#39;:\n    main()\n\n\n\n\n\n\n\n\n\n\n\n注意，if 里也用了缩进，就相当于 java 的{}\n运行程序:这个时候，可以循环发送数据。打开网络调试助手：它也循环收到了数据如果输入“exit”退出程序，结束发送。\n这里我们可能会注意到这个细节有两种端口，这个是因为代码运行了两次，每次运行都由操作系统随机分配端口，总而言之，一个应用程序需要运行，则需要一个端口，当然在代码里也可以绑定端口，套接字绑定端口的操作会在 udp 接收数据里记录。\n\n\n\n\n\n\n\n\n\n小白新学 python 之网络编程入门，大神勿喷下一次记录怎么利用 udp 接收数据？\n", "slug": "python高级学习日志第一天之网络编程", "date": "2022-09-30 14:22:00", "categories_index": "Python", "tags_index": "Python网络编程", "author_index": "倪传方"}, {"id": "c0ef1bb9822760c44fd32eaf5be50c8a", "title": "redis发布和订阅演示", "content": "Redis 第五期：redis 发布和订阅演示\n\n\n\n\n\n\n\n\nreis 的数据类型操作不再多说了，参考 redis 命令中文手册\n\n\n\n\n\n\n\n\n\n演示 redis 的发布和订阅分别在命令行客户端和编程客户端演示\n\n\n\n\n\n\n\n\n\n1.命令行客户端演示首先开启 redis 服务不多说了这里模拟一个发布者，三个订阅者在 redis src 下开启四个命令行终端，进入命令行模式，如下图：选取第一台作为发布者，其它三台作为订阅者\n\n\n\n\n\n\n\n\n\n首先在后三台终端上输入 SUBSCRIBE hello 命令（如果有密码得先 auth 密码命令输入密码）表示让这三台终端订阅 hello 这个频道，（分别回车）如图\n\n\n\n\n\n\n\n\n\n接着在第一台电脑上发布消息使用 publish+频道名+消息 命令回车\n结果如下（注意观察）\n三台终端同时跳出被发布的消息\n\n\n\n\n\n\n\n\n\n2.用 jedis 编程客户端来演示\n源码如下：同样要引入 jedis 节点 jar 包\n&lt;dependency&gt;\n      &lt;groupId&gt;redis.clients&lt;&#x2F;groupId&gt;\n      &lt;artifactId&gt;jedis&lt;&#x2F;artifactId&gt;\n      &lt;version&gt;2.9.0&lt;&#x2F;version&gt;\n    &lt;&#x2F;dependency&gt;\n\n消息订阅者角色\npackage com.lagoon;\n\n\nimport redis.clients.jedis.Jedis;\nimport redis.clients.jedis.JedisPubSub;\n\n&#x2F;**\n * redis消息订阅者\n *&#x2F;\npublic class RedisSubscriber extends JedisPubSub &#123;\n\n    &#x2F;&#x2F;当接收到消息后触发该方法\n\n    @Override\n    public void onMessage(String channel, String message) &#123;\n        super.onMessage(channel, message);\n        System.out.println(&quot;频道[&quot;+channel+&quot;]发布了一条消息[&quot;+message+&quot;]&quot;);\n    &#125;\n\n    &#x2F;&#x2F;main方法接收消息，开启监听状态\n    public static void main(String[] args) &#123;\n        &#x2F;&#x2F;连接到jedis\n        Jedis jedis&#x3D;new Jedis(&quot;192.168.5.131&quot;,6379);\n        jedis.auth(&quot;123456&quot;);\n\n        RedisSubscriber redisSubscriber&#x3D;new RedisSubscriber();\n\n        &#x2F;&#x2F;从频道订阅消息\n        jedis.subscribe(redisSubscriber,&quot;channel&quot;);\n    &#125;\n&#125;\n\n\n消息发布者角色\npackage com.lagoon;\n\nimport redis.clients.jedis.Jedis;\n\n&#x2F;&#x2F;消息发布者\npublic class RedisPublisher &#123;\n\n    public static void main(String[] args) &#123;\n        Jedis jedis&#x3D;new Jedis(&quot;192.168.5.131&quot;,6379);\n        jedis.auth(&quot;123456&quot;);\n\n        &#x2F;&#x2F;发布消息\n        jedis.publish(&quot;channel&quot;,&quot;大家好&quot;);\n\n        jedis.close();\n    &#125;\n&#125;\n\n\n开始演示，首先，运行消息订阅者类里的 main 方法程序处于监听状态，表示在等待消息发布\n接着运行发布消息类 main 方法如下运行完以后切换到消息订阅者运行窗口会发现收到了已经发布的消息\n这里甚至可以对代码进行一些改动，比如手动输入消息发布，不演示了\n", "slug": "redis发布和订阅演示", "date": "2019-09-07 08:33:00", "categories_index": "Redis", "tags_index": "redis发布与订阅", "author_index": "倪传方"}, {"id": "bdf4805eb354b82978231d675189aaca", "title": "Redis持久化的两种实现方式", "content": "Redis第七期：redis持久化的两种实现方式\n\n\n\n\n\n\n\n\n首先，什么是持久化，什么是redis的持久化持久化可以理解为存储，就是将数据存储到一个不会丢失的地方，如果把数据放在内存中，电脑关闭或重启数据就会丢失，所以放在内存中的数据不是持久化的，而放在磁盘就算是一种持久化。\n\n\n\n\n\n\n\n\n\nRedis的数据存储在内存中，内存是瞬时的，如果linux宕机或重启，又或者Redis崩溃或重启，所有的内存数据都会丢失，为解决这个问题，Redis提供两种机制对数据进行持久化存储，便于发生故障后能迅速恢复数据。\n\n\n\n\n\n\n\n\n\nredis提供两种持久化方式\n\n\n\n\n\n\n\n\n\n1.RDB方式Redis Database（RDB），就是在指定的时间间隔内将内存中的数据集快照写入磁盘，数据恢复时将快照文件直接再读到内存。RDB方式的数据持久化，仅需在redis.conf文件中配置即可配置文件redis.conf中搜索 SNAPSHOTTING其中配置格式：save 900 1save 300 10save 60 10000示例表示在900秒内发生1次改变就保存数据，类似如此那么保存数据在哪dbfilename：设置RDB的文件名，默认文件名为dump.rdbdir：指定RDB和AOF文件的目录以上这些都可以自定义配置容易发现其实redis默认开启RDB持久化的通过查找该文件名可以证明通过查找可以发现存在该文件，说明之前的操作都是RDB持久化了的，并在这个文件里被记录\n\n\n\n\n\n\n\n\n\nRDB持久化方式的优缺点优点：由于存储的是数据快照文件，恢复数据很方便，也比较快缺点：会丢失最后一次快照以后更改的数据\n\n\n\n\n\n\n\n\n\n如果你的应用能容忍一定数据的丢失，那么使用rdb是不错的选择如果你不能容忍一定数据的丢失，使用rdb就不是一个很好的选择\n\n\n\n\n\n\n\n\n\n由于需要经常操作磁盘，RDB 会经常 fork 出一个子进程。如果你的redis数据库很大的话，Fork 占用比较多的时间，并且可能会影响 Redis 暂停服务一段时间（millisecond 级别），如果你的数据库超级大并且你的服务器CPU比较弱，有可能是会达到一秒。\n\n\n\n\n\n\n\n\n\n2.第二种持久化方式AOF方式什么是AOF方式Append-only File（AOF），Redis每次接收到一条改变数据的命令时，它将把该命令写到一个AOF文件中（只记录写操作，读操作不记录），当Redis重启时，它通过执行AOF文件中所有的命令来恢复数据。AOF方式的数据持久化，仅需在redis.conf文件中配置即可在redis.conf配置文件中搜索APPEND ONLY MODE&gt;把appendonly 改为yes保存开启AOF持久化redis服务指定新配置开启先杀死服务进程以新配置开启redis服务&gt;在命令行终端写一些测试命令&gt;退出回到src目录下查找aof文件可以看见生成了持久化记录文件打开查看内容可见记录文件选择0号库，flushall清空所有，接着set k1 v1 ,set k2 v2aof文件只会记录写操作，不会记录读操作\n\n\n\n\n\n\n\n\n\n关于一些其配置appendfilename：指定AOF文件名，默认文件名为appendonly.aofappendfsync：配置向aof文件写命令数据的策略auto-aof-rewrite-percentage：当目前aof文件大小超过上一次重写时的aof文件大小的百分之多少时会再次进行重写，如果之前没有重写，则以启动时的aof文件大小为依据auto-aof-rewrite-min-size：允许重写的最小AOF文件大小\n\n\n\n\n\n\n\n\n\n其中执行策略有no：不主动进行同步操作，而是完全交由操作系统来做（即每30秒一次），比较快但不是很安全always：每次执行写入都会执行同步，慢一些但是比较安全everysec：每秒执行一次同步操作，比较平衡，介于速度和安全之间\n\n\n\n\n\n\n\n\n\n总结append-only 文件是另一个可以提供完全数据保障的方案；AOF 文件会在操作过程中变得越来越大。比如，如果你做一百次加法计算，最后你只会在数据库里面得到最终的数值，但是在你的 AOF 里面会存在 100 次记录，其中 99 条记录对最终的结果是无用的；但 Redis 支持在不影响服务的前提下在后台重构 AOF 文件，让文件得以整理变小；可以同时使用这两种方式，redis默认优先加载aof文件；\n", "slug": "redis持久化的两种实现方式", "date": "2019-03-30 16:33:00", "categories_index": "Redis", "tags_index": "持久化", "author_index": "倪传方"}, {"id": "8539baf449cb37333713337188dfc881", "title": "redis对事务控制的实现", "content": "Redis第六期：redis对事务控制的实现\n\n\n\n\n\n\n\n\n首先，什么是事务？事务是指一系列操作步骤，这一系列的操作步骤，要么完全地执行，要么完全地不执行。比如微博中：A用户关注了B用户，那么A的关注人列表里面就会有B用户，B的粉丝列表里面就会有A用户。这个关注与被关注的过程是由一系列操作步骤构成：（1）A用户添加到B的粉丝列表里面（2）B用户添加到A的关注列表里面；这两个步骤必须全部执行成功，整个逻辑才是正确的，否则就会产生数据的错误，比如A用户的关注列表有B用户，但B的粉丝列表里没有A用户；要保证一系列的操作都完全成功，提出了事务控制的概念。\n\n\n\n\n\n\n\n\n\nredis事务Redis中的事务（transaction）是一组命令的集合，至少是两个或两个以上的命令，redis事务保证这些命令被执行时中间不会被任何其他操作打断。\nredis对事务控制的实现大致有以下几种情况：\n\n\n\n\n\n\n\n\n\n一，正常情况（测试中为避免冲突先flushall清空所有keys）1.用MULTI命令告诉Redis，接下来要执行的命令你先不要执行，而是把它们暂时存起来 （开启事务）开启事务，等待命令进入队列2.输入执行命令，进入命令队列queued返回值表示命令进入执行队列（注意此时还未执行）3.输入exec命令告知redis执行前面发送的命令（提交事务）可以看到exec后命令执行成功并且能够查询到相关值\n\n\n\n\n\n\n\n\n\n二，异常情况1.开启事务2.输入一个正常命令成功进入队列等待执行3.输入一个错误命令首先返回语法错误4.最后提交事务查看提交事务失败\n\n\n\n\n\n\n\n\n\n三，例外情况1.开启事务2.输入一个正常命令3.输入一个正常命令（本身没有语法错误）成功进入执行等待队列4.提交事务提示第一个命令执行成功第二个命令执行出错事务依然提交了，k5的值被设置为v5，自增操作执行失败，但整个事务没有回滚.\n\n\n\n\n\n\n\n\n\n四，放弃情况1.开启事务2.输入两个正常命令进入执行队列3.放弃事务放弃事务后，k6，k7并没有被赋值放弃事务，则命令队列不会被执行\n\n\n\n\n\n\n\n\n\n五，复杂情况这里要提到悲观锁和乐观锁概念\n\n\n\n\n\n\n\n\n\n悲观锁悲观锁(Pessimistic Lock)， 顾名思义，就是很悲观，每次去拿数据的时候都认为别人会修改该数据，所以每次在拿数据的时候都会先上锁，这样别人想拿这个数据就会block阻塞直到它拿到锁。传统的关系型数据库里边就用到了很多这种锁机制，比如行锁，表锁等，读锁，写锁等，都是在做操作之前先上锁，让别人无法操作该数据。\n\n\n\n\n\n\n\n\n\n乐观锁乐观锁(Optimistic Lock)，顾名思义，就是很乐观，每次去拿数据的时候都认为别人不会修改该数据，所以不会上锁，但是在更新的时候会判断一下在此期间别人有没有去更新这条数据，一般使用版本号机制进行判断。乐观锁适用于多读的应用类型，这样可以提高吞吐量。\n\n\n\n\n\n\n\n\n\n乐观锁大多数情况是基于数据版本号（version）的机制实现的。何谓数据版本？即为数据增加一个版本标识，在基于数据库表的版本解决方案中，一般是通过为数据库表添加一个“version”字段来实现读取出数据时，将此版本号一同读出，之后更新时，对此版本号加1。此时，将提交数据的版本号与数据库表对应记录的当前版本号进行比对，如果提交的数据版本号大于数据库表当前版本号，则予以更新，否则认为是过期数据，不予更新。\n\n\n\n\n\n\n\n\n\n图例：\n\n\n\n\n\n\n\n\n\nredis的watch机制实现乐观锁监视一个(或多个) key ，如果在事务exec执行之前这个(或这些) key 被其他命令所改动，那么事务将被打断这里开启两个终端来演示1.执行一个正常命令2.开启对money的监控3.开启事务4.在事务等待命令的这段时间里，在另一个终端里改变money值（注意回车）5.接着在第一个终端里事务改写money值6.提交事务查看事务提交不了，因为发现在事务等待过程中，money值被监控已经发小被修改了，所以无法提交事务7.查看money值发现值最终是另一个终端改动影响的\n", "slug": "redis对事务控制的实现", "date": "2019-03-25 19:26:00", "categories_index": "Redis", "tags_index": "事务控制", "author_index": "倪传方"}, {"id": "4ab18f90b2937be74536568e1919dbe5", "title": "Redis的一个小坑", "content": "Redis 的一个小坑\n\n\n\n\n\n\n\n\n又忘了，修改了 redis 的配置文件就一定要重新制定配置文件启动太坑了，记录一下测试成功\npackage com.lagoon;\n\nimport redis.clients.jedis.Jedis;\n\n&#x2F;**\n * Hello world!\n *\n *&#x2F;\npublic class App\n&#123;\n    public static void main( String[] args )\n    &#123;\n        &#x2F;&#x2F;根据端口和ip连接redis\n        Jedis jedis&#x3D;new Jedis(&quot;192.168.5.128&quot;,6379);\n        &#x2F;&#x2F;输入密码\n        jedis.auth(&quot;123456&quot;);\n        System.out.println(&quot;服务正在运行&quot;+jedis.ping());\n    &#125;\n&#125;\n\n\n\n", "slug": "Redis的一个小坑", "date": "2019-03-23 22:23:00", "categories_index": "Redis", "tags_index": "tips", "author_index": "倪传方"}, {"id": "c1b8e397764a04b15b42b94eec3a8f01", "title": "有关Docker容器架构", "content": "有关Docker容器架构\n\n\n\n\n\n\n\n\n\nDocker客户端与服务器Docker是一个客户端-服务器的（C&#x2F;S）架构程序，Docker的客户端只需要向Docker服务器或者守护进程发出请求，服务器或者守护进程将完成所有工作并返回结果。Docker提供了一个命令行工具和一整套RESTful API。你可以在同一台主机上运行Docker守护进程和客户端，也可以从本地的Docker客户端连接到运行在另一台宿主机上的远程Docker守护进程。\n\n\n\n\n\n\n\n\n\nDocker镜像镜像（Image）是Docker中的一个模板。通过Docker镜像来创建Docker容器，一个镜像可以创造出多个容器。镜像是由一系列指令一步一步构建出来，例如：\n\n添加一个文件\n执行一个命令\n打开一个窗口\n\n\n\n\n\n\n\n\n\n\nj镜像与容器的关系类似于java中类与对象的关系镜像体积很小，非常“便携”，易于分享，存储和更新。\n\n\n\nDocker\nJava\n\n\n\n镜像\n类\n\n\n容器\n对象\n\n\nclass Emp&#123;&#125; &#x2F;&#x2F;镜像：\nEmp e1 &#x3D; new Emp(); &#x2F;&#x2F;容器1\nEmp e2 &#x3D; new Emp(); &#x2F;&#x2F;容器2\n\n\n\n\n\n\n\n\n\n\nDocker容器容器（Container）是基于镜像创建的运行的实例，一个容器中可以运行一个或者多个应用程序（jdk+开发的java应用程序）。Docker可以帮助你构建和部署容器，你只需要把自己的应用程序或者服务打包放进容器即可。可以认为，镜像是Docker生命周期的构建或者打包阶段，而容器则是启动或者执行阶段。可以理解容器中有包含：一个精简版的Linux环境+要运行的应用程序\n\n\n\n\n\n\n\n\n\nDocker仓库仓库（Repository）是集中存放镜像文件的场所。有时候会把仓库（Repository）和仓库注册服务器（Registry）混为一谈，但并不严格区分。实际上，仓库注册服务器上往往存放着多个仓库，每个仓库中又包含了多个镜像，每个镜像有不同的标签（tag）。仓库分为公有仓库（Public）和私有仓库（Private）两种。Docker公司运营的公共仓库叫做 Docker Hub （https://hub.docker.com/），存放了数量庞大的镜像供用户下载。用户可以在Docker Hub注册账号，分享并保存自己的镜像。（说明：在Docker Hub下载镜像巨慢）国内的公有仓库包括阿里云 、网易云 等，可以提供大陆用户更稳定快速的访问。当用户创建了自己的镜像之后就可以使用 push 命令将它上传到公有或者私有仓库，这样下次在另外一台机器上使用这个镜像时候，只需要从仓库上 pull 下来就可以了。Docker 仓库的概念跟 Git 类似，注册服务器可以理解为 GitHub 这样的托管服务。\n\n", "slug": "有关Docker容器架构", "date": "2019-03-22 10:29:00", "categories_index": "Devops", "tags_index": "Docker", "author_index": "倪传方"}]